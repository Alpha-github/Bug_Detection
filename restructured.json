{
    "superset-frontend/cypress-base/cypress/integration/dataset/dataset_list.test.ts": [
        {
            "17ad0d80de65ace99e601c314b5e31df5119b252": "@@ -0,0 +1,43 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+const DATASET_LIST_PATH = 'tablemodelview/list';\n+\n+describe('Dataset list', () => {\n+  beforeEach(() => {\n+    cy.login();\n+    cy.visit(DATASET_LIST_PATH);\n+  });\n+\n+  it('should open Explore on dataset name click', () => {\n+    cy.intercept('**/api/v1/explore/**').as('explore');\n+    cy.get('[data-test=\"listview-table\"] [data-test=\"internal-link\"]')\n+      .contains('birth_names')\n+      .click();\n+    cy.wait('@explore');\n+    cy.get('[data-test=\"datasource-control\"] .title-select').contains(\n+      'birth_names',\n+    );\n+    cy.get('.metric-option-label').first().contains('COUNT(*)');\n+    cy.get('.column-option-label').first().contains('ds');\n+    cy.get('[data-test=\"fast-viz-switcher\"] > div:not([role=\"button\"]')\n+      .contains('Table')\n+      .should('be.visible');\n+  });\n+});"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/control.test.ts": [
        {
            "17ad0d80de65ace99e601c314b5e31df5119b252": "@@ -25,17 +25,15 @@ import { FORM_DATA_DEFAULTS, NUM_METRIC } from './visualizations/shared.helper';\n describe('Datasource control', () => {\n   const newMetricName = `abc${Date.now()}`;\n \n-  // TODO: uncomment when adding metrics from dataset is fixed\n-  xit('should allow edit dataset', () => {\n+  it('should allow edit dataset', () => {\n     let numScripts = 0;\n \n     cy.login();\n-    interceptChart({ legacy: false }).as('chartData');\n+    interceptChart({ legacy: true }).as('chartData');\n \n     cy.visitChartByName('Num Births Trend');\n     cy.verifySliceSuccess({ waitAlias: '@chartData' });\n \n-    cy.get('[data-test=\"open-datasource-tab').click({ force: true });\n     cy.get('[data-test=\"datasource-menu-trigger\"]').click();\n \n     cy.get('script').then(nodes => {\n@@ -53,21 +51,31 @@ describe('Datasource control', () => {\n     });\n     // create new metric\n     cy.get('[data-test=\"crud-add-table-item\"]', { timeout: 10000 }).click();\n-    cy.get('[data-test=\"table-content-rows\"]')\n-      .find('input[value=\"<new metric>\"]')\n+    cy.wait(1000);\n+    cy.get(\n+      '[data-test=\"table-content-rows\"] [data-test=\"editable-title-input\"]',\n+    )\n+      .first()\n       .click();\n-    cy.get('[data-test=\"table-content-rows\"]')\n-      .find('input[value=\"<new metric>\"]')\n+\n+    cy.get(\n+      '[data-test=\"table-content-rows\"] [data-test=\"editable-title-input\"]',\n+    )\n+      .first()\n       .focus()\n       .clear()\n       .type(`${newMetricName}{enter}`);\n+\n     cy.get('[data-test=\"datasource-modal-save\"]').click();\n     cy.get('.ant-modal-confirm-btns button').contains('OK').click();\n     // select new metric\n     cy.get('[data-test=metrics]')\n-      .find('.Select__control input')\n-      .focus()\n-      .type(newMetricName, { force: true });\n+      .contains('Drop columns/metrics here or click')\n+      .click();\n+\n+    cy.get('input[aria-label=\"Select saved metrics\"]').type(\n+      `${newMetricName}{enter}`,\n+    );\n     // delete metric\n     cy.get('[data-test=\"datasource-menu-trigger\"]').click();\n     cy.get('[data-test=\"edit-dataset\"]').click();\n@@ -78,13 +86,11 @@ describe('Datasource control', () => {\n     });\n     cy.get(`input[value=\"${newMetricName}\"]`)\n       .closest('tr')\n-      .find('.fa-trash')\n+      .find('[data-test=\"crud-delete-icon\"]')\n       .click();\n     cy.get('[data-test=\"datasource-modal-save\"]').click();\n     cy.get('.ant-modal-confirm-btns button').contains('OK').click();\n-    cy.get('.Select__multi-value__label')\n-      .contains(newMetricName)\n-      .should('not.exist');\n+    cy.get('[data-test=\"metrics\"]').contains(newMetricName).should('not.exist');\n   });\n });\n "
        },
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -88,6 +88,37 @@ describe('Datasource control', () => {\n   });\n });\n \n+describe('Color scheme control', () => {\n+  beforeEach(() => {\n+    cy.login();\n+    interceptChart({ legacy: true }).as('chartData');\n+\n+    cy.visitChartByName('Num Births Trend');\n+    cy.verifySliceSuccess({ waitAlias: '@chartData' });\n+  });\n+\n+  it('should show color options with and without tooltips', () => {\n+    cy.get('#controlSections-tab-display').click();\n+    cy.get('.ant-select-selection-item .color-scheme-label').contains(\n+      'Superset Colors',\n+    );\n+    cy.get('.ant-select-selection-item .color-scheme-label').trigger(\n+      'mouseover',\n+    );\n+    cy.get('.color-scheme-tooltip').contains('Superset Colors');\n+    cy.get('.Control[data-test=\"color_scheme\"]').scrollIntoView();\n+    cy.get('.Control[data-test=\"color_scheme\"] input[type=\"search\"]')\n+      .focus()\n+      .type('lyftColors{enter}');\n+    cy.get(\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"lyftColors\"]',\n+    ).should('exist');\n+    cy.get('.ant-select-selection-item .color-scheme-label').trigger(\n+      'mouseover',\n+    );\n+    cy.get('.color-scheme-tooltip').should('not.exist');\n+  });\n+});\n describe('VizType control', () => {\n   beforeEach(() => {\n     cy.login();"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/sqllab/query.test.ts": [
        {
            "17ad0d80de65ace99e601c314b5e31df5119b252": "@@ -34,19 +34,9 @@ describe('SqlLab query panel', () => {\n     // are fetched below (because React _Virtualized_ does not render all rows)\n     let clockTime = 0;\n \n-    const sampleResponse = {\n-      status: 'success',\n-      data: [{ '?column?': 1 }],\n-      columns: [{ name: '?column?', type: 'INT', is_dttm: false }],\n-      selected_columns: [{ name: '?column?', type: 'INT', is_dttm: false }],\n-      expanded_columns: [],\n-    };\n-\n     cy.intercept({\n       method: 'POST',\n       url: '/superset/sql_json/',\n-      delay: 1000,\n-      response: () => sampleResponse,\n     }).as('mockSQLResponse');\n \n     cy.get('.TableSelector .Select:eq(0)').click();\n@@ -157,4 +147,52 @@ describe('SqlLab query panel', () => {\n       assertSQLLabResultsAreEqual(initialResultsTable, savedQueryResultsTable);\n     });\n   });\n+\n+  it('Create a chart from a query', () => {\n+    cy.intercept('/superset/sql_json/').as('queryFinished');\n+    cy.intercept('**/api/v1/explore/**').as('explore');\n+    cy.intercept('**/api/v1/chart/**').as('chart');\n+\n+    // cypress doesn't handle opening a new tab, override window.open to open in the same tab\n+    cy.window().then(win => {\n+      cy.stub(win, 'open', url => {\n+        // eslint-disable-next-line no-param-reassign\n+        win.location.href = url;\n+      });\n+    });\n+\n+    const query = 'SELECT gender, name FROM birth_names';\n+\n+    cy.get('.ace_text-input')\n+      .focus()\n+      .clear({ force: true })\n+      .type(`{selectall}{backspace}${query}`, { force: true });\n+    cy.get('.sql-toolbar button').contains('Run').click();\n+    cy.wait('@queryFinished');\n+\n+    cy.get(\n+      '.SouthPane .ant-tabs-content > .ant-tabs-tabpane-active > div button:first',\n+      { timeout: 10000 },\n+    ).click();\n+\n+    cy.wait('@explore');\n+    cy.get('[data-test=\"datasource-control\"] .title-select').contains(query);\n+    cy.get('.column-option-label').first().contains('gender');\n+    cy.get('.column-option-label').last().contains('name');\n+\n+    cy.get(\n+      '[data-test=\"all_columns\"] [data-test=\"dnd-labels-container\"] > div:first-child',\n+    ).contains('gender');\n+    cy.get(\n+      '[data-test=\"all_columns\"] [data-test=\"dnd-labels-container\"] > div:nth-child(2)',\n+    ).contains('name');\n+\n+    cy.wait('@chart');\n+    cy.get('[data-test=\"slice-container\"] table > thead th')\n+      .first()\n+      .contains('gender');\n+    cy.get('[data-test=\"slice-container\"] table > thead th')\n+      .last()\n+      .contains('name');\n+  });\n });"
        }
    ],
    "docs/docs/databases/clickhouse.mdx": [
        {
            "994e1f6bdcad30000804343ec87159eee36c9ace": "@@ -7,18 +7,16 @@ version: 1\n \n ## ClickHouse\n \n-To use ClickHouse with Superset, you will need to add the following Python libraries:\n+To use ClickHouse with Superset, you will need to add the following Python library:\n \n ```\n-clickhouse-driver==0.2.0\n-clickhouse-sqlalchemy==0.1.6\n+clickhouse-sqlalchemy>=0.2.2\n ```\n \n If running Superset using Docker Compose, add the following to your `./docker/requirements-local.txt` file:\n \n ```\n-clickhouse-driver>=0.2.0\n-clickhouse-sqlalchemy>=0.1.6\n+clickhouse-sqlalchemy>=0.2.2\n ```\n \n The recommended connector library for ClickHouse is"
        }
    ],
    "docs/docs/databases/installing-database-drivers.mdx": [
        {
            "994e1f6bdcad30000804343ec87159eee36c9ace": "@@ -35,7 +35,7 @@ A list of some of the recommended packages.\n | [Ascend.io](/docs/databases/ascend)                       | `pip install impyla`                                                               | `ascend://{username}:{password}@{hostname}:{port}/{database}?auth_mechanism=PLAIN;use_ssl=true`             |\n | [Azure MS SQL](/docs/databases/sql-server)                | `pip install pymssql`                                                              | `mssql+pymssql://UserName@presetSQL:TestPassword@presetSQL.database.windows.net:1433/TestSchema`            |\n | [Big Query](/docs/databases/bigquery)                     | `pip install pybigquery`                                                           | `bigquery://{project_id}`                                                                                   |\n-| [ClickHouse](/docs/databases/clickhouse)                  | `pip install clickhouse-driver==0.2.0 && pip install clickhouse-sqlalchemy==0.1.6` | `clickhouse+native://{username}:{password}@{hostname}:{port}/{database}`                                    |\n+| [ClickHouse](/docs/databases/clickhouse)                  | `pip install clickhouse-sqlalchemy`                                                | `clickhouse+native://{username}:{password}@{hostname}:{port}/{database}`                                    |\n | [CockroachDB](/docs/databases/cockroachdb)                | `pip install cockroachdb`                                                          | `cockroachdb://root@{hostname}:{port}/{database}?sslmode=disable`                                           |\n | [Dremio](/docs/databases/dremio)                          | `pip install sqlalchemy_dremio`                                                    | `dremio://user:pwd@host:31010/`                                                                             |\n | [Elasticsearch](/docs/databases/elasticsearch)            | `pip install elasticsearch-dbapi`                                                  | `elasticsearch+http://{user}:{password}@{host}:9200/`                                                       |"
        },
        {
            "d44202f03c2d623aa2e6eda9b7f42d38fdd8cf38": "@@ -55,9 +55,9 @@ A list of some of the recommended packages.\n | SQLite                                                    | No additional library needed                                                       | `sqlite://`                                                                                                 |\n | [SQL Server](/docs/databases/sql-server)                  | `pip install pymssql`                                                              | `mssql://`                                                                                                  |\n | [Teradata](/docs/databases/teradata)                      | `pip install teradatasqlalchemy `                                                  | `teradata://{user}:{password}@{host}`                                                                       |\n+| [TimescaleDB](/docs/databases/timescaledb)                | `pip install psycopg2`                                                             | `postgresql://<UserName>:<DBPassword>@<Database Host>:<Port>/<Database Name>`                               |\n | [Vertica](/docs/databases/vertica)                        | `pip install sqlalchemy-vertica-python`                                            | `vertica+vertica_python://<UserName>:<DBPassword>@<Database Host>/<Database Name>`                          |\n-| [YugabyteDB](/docs/databases/yugabytedb)                      | `pip install psycopg2`                                                             | `postgresql://<UserName>:<DBPassword>@<Database Host>/<Database Name>`                                      |\n-\n+| [YugabyteDB](/docs/databases/yugabytedb)                  | `pip install psycopg2`                                                             | `postgresql://<UserName>:<DBPassword>@<Database Host>/<Database Name>`                                      |\n ---\n \n Note that many other databases are supported, the main criteria being the existence of a functional"
        }
    ],
    "setup.py": [
        {
            "994e1f6bdcad30000804343ec87159eee36c9ace": "@@ -131,7 +131,7 @@ def get_git_sha() -> str:\n             \"pybigquery>=0.4.10\",\n             \"google-cloud-bigquery>=2.4.0\",\n         ],\n-        \"clickhouse\": [\"clickhouse-sqlalchemy>=0.1.4, <0.2\"],\n+        \"clickhouse\": [\"clickhouse-sqlalchemy>=0.2.2, <0.3\"],\n         \"cockroachdb\": [\"cockroachdb>=0.3.5, <0.4\"],\n         \"cors\": [\"flask-cors>=2.0.0\"],\n         \"crate\": [\"crate[sqlalchemy]>=0.26.0, <0.27\"],"
        }
    ],
    "superset-frontend/src/views/CRUD/data/database/DatabaseModal/styles.ts": [
        {
            "93557e3a1ac81b4e738e99eec3eb14d65a7c72f9": "@@ -277,7 +277,6 @@ export const formStyles = (theme: SupersetTheme) => css`\n       width: ${`calc(50% - ${theme.gridUnit * 4}px)`};\n       & + .form-group-w-50 {\n         margin-left: ${theme.gridUnit * 8}px;\n-        margin-bottom: ${theme.gridUnit * 10}px;\n       }\n     }\n   }"
        }
    ],
    "superset-frontend/src/components/CronPicker/CronPicker.tsx": [
        {
            "74e40c2de1760b9d1f08f9eaff3a064fcf834fe4": "@@ -110,6 +110,9 @@ export const CronPicker = styled((props: CronProps) => (\n     <ReactCronPicker locale={LOCALE} {...props} />\n   </ConfigProvider>\n ))`\n+  .react-js-cron-field {\n+    margin-bottom: 0px;\n+  }\n   .react-js-cron-select:not(.react-js-cron-custom-select) > div:first-of-type,\n   .react-js-cron-custom-select {\n     border-radius: ${({ theme }) => theme.gridUnit}px;"
        }
    ],
    "superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm/CommonParameters.tsx": [
        {
            "da3401a6987538fa69e791cd1096a4400972a424": "@@ -76,6 +76,7 @@ export const databaseField = ({\n   changeMethods,\n   getValidation,\n   validationErrors,\n+  placeholder,\n   db,\n }: FieldPropTypes) => (\n   <ValidatedInput\n@@ -85,10 +86,10 @@ export const databaseField = ({\n     value={db?.parameters?.database}\n     validationMethods={{ onBlur: getValidation }}\n     errorMessage={validationErrors?.database}\n-    placeholder={t('e.g. world_population')}\n+    placeholder={placeholder ?? t('e.g. world_population')}\n     label={t('Database name')}\n     onChange={changeMethods.onParametersChange}\n-    helpText={t('Copy the name of the  database you are trying to connect to.')}\n+    helpText={t('Copy the name of the database you are trying to connect to.')}\n   />\n );\n export const usernameField = ({"
        }
    ],
    "superset-frontend/src/views/CRUD/data/database/DatabaseModal/DatabaseConnectionForm/index.tsx": [
        {
            "da3401a6987538fa69e791cd1096a4400972a424": "@@ -57,6 +57,7 @@ export interface FieldPropTypes {\n   required: boolean;\n   hasTooltip?: boolean;\n   tooltipText?: (value: any) => string;\n+  placeholder?: string;\n   onParametersChange: (value: any) => string;\n   onParametersUploadFileChange: (value: any) => string;\n   changeMethods: { onParametersChange: (value: any) => string } & {\n@@ -108,6 +109,7 @@ const DatabaseConnectionForm = ({\n   isEditMode = false,\n   sslForced,\n   editNewDb,\n+  getPlaceholder,\n }: {\n   isEditMode?: boolean;\n   sslForced: boolean;\n@@ -130,6 +132,7 @@ const DatabaseConnectionForm = ({\n   onRemoveTableCatalog: (idx: number) => void;\n   validationErrors: JsonObject | null;\n   getValidation: () => void;\n+  getPlaceholder?: (field: string) => string | undefined;\n }) => (\n   <Form>\n     <div\n@@ -163,6 +166,7 @@ const DatabaseConnectionForm = ({\n             isEditMode,\n             sslForced,\n             editNewDb,\n+            placeholder: getPlaceholder ? getPlaceholder(field) : undefined,\n           }),\n         )}\n     </div>"
        }
    ],
    "superset-frontend/src/views/CRUD/data/database/DatabaseModal/index.tsx": [
        {
            "da3401a6987538fa69e791cd1096a4400972a424": "@@ -59,6 +59,7 @@ import {\n   DatabaseForm,\n   CONFIGURATION_METHOD,\n   CatalogObject,\n+  Engines,\n } from 'src/views/CRUD/data/database/types';\n import Loading from 'src/components/Loading';\n import ExtraOptions from './ExtraOptions';\n@@ -87,11 +88,6 @@ import {\n } from './styles';\n import ModalHeader, { DOCUMENTATION_LINK } from './ModalHeader';\n \n-enum Engines {\n-  GSheet = 'gsheets',\n-  Snowflake = 'snowflake',\n-}\n-\n const engineSpecificAlertMapping = {\n   [Engines.GSheet]: {\n     message: 'Why do I need to create a database?',\n@@ -519,6 +515,18 @@ const DatabaseModal: FunctionComponent<DatabaseModalProps> = ({\n     );\n   };\n \n+  const getPlaceholder = (field: string) => {\n+    if (field === 'database') {\n+      switch (db?.engine) {\n+        case Engines.Snowflake:\n+          return t('e.g. xy12345.us-east-2.aws');\n+        default:\n+          return t('e.g. world_population');\n+      }\n+    }\n+    return undefined;\n+  };\n+\n   const removeFile = (removedFile: UploadFile) => {\n     setFileList(fileList.filter(file => file.uid !== removedFile.uid));\n     return false;\n@@ -1617,6 +1625,7 @@ const DatabaseModal: FunctionComponent<DatabaseModalProps> = ({\n                   }\n                   getValidation={() => getValidation(db)}\n                   validationErrors={validationErrors}\n+                  getPlaceholder={getPlaceholder}\n                 />\n                 <div css={(theme: SupersetTheme) => infoTooltip(theme)}>\n                   {dbModel.engine !== Engines.GSheet && ("
        },
        {
            "d568999592bb687d862dcfbf6f76c7ff7ee5610d": "@@ -42,6 +42,7 @@ import IconButton from 'src/components/IconButton';\n import InfoTooltip from 'src/components/InfoTooltip';\n import withToasts from 'src/components/MessageToasts/withToasts';\n import ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\n+import ErrorMessageWithStackTrace from 'src/components/ErrorMessage/ErrorMessageWithStackTrace';\n import ErrorAlert from 'src/components/ImportModal/ErrorAlert';\n import {\n   testDatabaseConnection,\n@@ -64,7 +65,6 @@ import ExtraOptions from './ExtraOptions';\n import SqlAlchemyForm from './SqlAlchemyForm';\n import DatabaseConnectionForm from './DatabaseConnectionForm';\n import {\n-  antDErrorAlertStyles,\n   antDAlertStyles,\n   antdWarningAlertStyles,\n   StyledAlertMargin,\n@@ -116,6 +116,12 @@ const TabsStyled = styled(Tabs)`\n   }\n `;\n \n+const ErrorAlertContainer = styled.div`\n+  ${({ theme }) => `\n+    margin: ${theme.gridUnit * 8}px ${theme.gridUnit * 4}px;\n+  `};\n+`;\n+\n interface DatabaseModalProps {\n   addDangerToast: (msg: string) => void;\n   addSuccessToast: (msg: string) => void;\n@@ -475,7 +481,7 @@ const DatabaseModal: FunctionComponent<DatabaseModalProps> = ({\n     )?.parameters !== undefined;\n   const showDBError = validationErrors || dbErrors;\n   const isEmpty = (data?: Object | null) =>\n-    data && Object.keys(data).length === 0;\n+    !data || (data && Object.keys(data).length === 0);\n \n   const dbModel: DatabaseForm =\n     availableDbs?.databases?.find(\n@@ -1126,22 +1132,24 @@ const DatabaseModal: FunctionComponent<DatabaseModalProps> = ({\n   // eslint-disable-next-line consistent-return\n   const errorAlert = () => {\n     let alertErrors: string[] = [];\n-    if (isEmpty(dbErrors) === false) {\n+    if (!isEmpty(dbErrors)) {\n       alertErrors = typeof dbErrors === 'object' ? Object.values(dbErrors) : [];\n-    } else if (db?.engine === Engines.Snowflake) {\n+    } else if (!isEmpty(validationErrors)) {\n       alertErrors =\n         validationErrors?.error_type === 'GENERIC_DB_ENGINE_ERROR'\n-          ? [validationErrors?.description]\n+          ? [\n+              'We are unable to connect to your database. Click \"See more\" for database-provided information that may help troubleshoot the issue.',\n+            ]\n           : [];\n     }\n \n     if (alertErrors.length) {\n       return (\n-        <Alert\n-          type=\"error\"\n-          css={(theme: SupersetTheme) => antDErrorAlertStyles(theme)}\n-          message={t('Database Creation Error')}\n+        <ErrorMessageWithStackTrace\n+          title={t('Database Creation Error')}\n           description={t(alertErrors[0])}\n+          subtitle={t(validationErrors?.description)}\n+          copyText={t(validationErrors?.description)}\n         />\n       );\n     }\n@@ -1480,7 +1488,9 @@ const DatabaseModal: FunctionComponent<DatabaseModalProps> = ({\n               onChange(ActionType.extraEditorChange, payload);\n             }}\n           />\n-          {showDBError && errorAlert()}\n+          {showDBError && (\n+            <ErrorAlertContainer>{errorAlert()}</ErrorAlertContainer>\n+          )}\n         </Tabs.TabPane>\n       </TabsStyled>\n     </Modal>\n@@ -1641,7 +1651,9 @@ const DatabaseModal: FunctionComponent<DatabaseModalProps> = ({\n                   )}\n                 </div>\n                 {/* Step 2 */}\n-                {showDBError && errorAlert()}\n+                {showDBError && (\n+                  <ErrorAlertContainer>{errorAlert()}</ErrorAlertContainer>\n+                )}\n               </>\n             ))}\n         </>"
        }
    ],
    "superset-frontend/src/views/CRUD/data/database/types.ts": [
        {
            "da3401a6987538fa69e791cd1096a4400972a424": "@@ -161,3 +161,8 @@ export enum CONFIGURATION_METHOD {\n   SQLALCHEMY_URI = 'sqlalchemy_form',\n   DYNAMIC_FORM = 'dynamic_form',\n }\n+\n+export enum Engines {\n+  GSheet = 'gsheets',\n+  Snowflake = 'snowflake',\n+}"
        }
    ],
    "superset-frontend/src/components/ErrorMessage/ErrorAlert.test.tsx": [
        {
            "d568999592bb687d862dcfbf6f76c7ff7ee5610d": "@@ -31,6 +31,7 @@ const mockedProps = {\n   subtitle: 'Error subtitle',\n   title: 'Error title',\n   source: 'dashboard' as ErrorSource,\n+  description: 'we are unable to connect db.',\n };\n \n test('should render', () => {\n@@ -63,6 +64,11 @@ test('should render the error title', () => {\n   expect(screen.getByText('Error title')).toBeInTheDocument();\n });\n \n+test('should render the error description', () => {\n+  render(<ErrorAlert {...mockedProps} />, { useRedux: true });\n+  expect(screen.getByText('we are unable to connect db.')).toBeInTheDocument();\n+});\n+\n test('should render the error subtitle', () => {\n   render(<ErrorAlert {...mockedProps} />, { useRedux: true });\n   const button = screen.getByText('See more');"
        }
    ],
    "superset-frontend/src/components/ErrorMessage/ErrorAlert.tsx": [
        {
            "d568999592bb687d862dcfbf6f76c7ff7ee5610d": "@@ -87,6 +87,7 @@ interface ErrorAlertProps {\n   source?: ErrorSource;\n   subtitle: ReactNode;\n   title: ReactNode;\n+  description?: string;\n }\n \n export default function ErrorAlert({\n@@ -96,6 +97,7 @@ export default function ErrorAlert({\n   source = 'dashboard',\n   subtitle,\n   title,\n+  description,\n }: ErrorAlertProps) {\n   const theme = useTheme();\n \n@@ -116,7 +118,7 @@ export default function ErrorAlert({\n           )}\n           <strong>{title}</strong>\n         </LeftSideContent>\n-        {!isExpandable && (\n+        {!isExpandable && !description && (\n           <span\n             role=\"button\"\n             tabIndex={0}\n@@ -127,6 +129,21 @@ export default function ErrorAlert({\n           </span>\n         )}\n       </div>\n+      {description && (\n+        <div className=\"error-body\">\n+          <p>{description}</p>\n+          {!isExpandable && (\n+            <span\n+              role=\"button\"\n+              tabIndex={0}\n+              className=\"link\"\n+              onClick={() => setIsModalOpen(true)}\n+            >\n+              {t('See more')}\n+            </span>\n+          )}\n+        </div>\n+      )}\n       {isExpandable ? (\n         <div className=\"error-body\">\n           <p>{subtitle}</p>"
        }
    ],
    "superset-frontend/src/components/ErrorMessage/ErrorMessageWithStackTrace.tsx": [
        {
            "d568999592bb687d862dcfbf6f76c7ff7ee5610d": "@@ -32,6 +32,7 @@ type Props = {\n   copyText?: string;\n   stackTrace?: string;\n   source?: ErrorSource;\n+  description?: string;\n   errorMitigationFunction?: () => void;\n };\n \n@@ -43,6 +44,7 @@ export default function ErrorMessageWithStackTrace({\n   link,\n   stackTrace,\n   source,\n+  description,\n }: Props) {\n   // Check if a custom error message component was registered for this message\n   if (error) {\n@@ -66,6 +68,7 @@ export default function ErrorMessageWithStackTrace({\n       title={title}\n       subtitle={subtitle}\n       copyText={copyText}\n+      description={description}\n       source={source}\n       body={\n         link || stackTrace ? ("
        }
    ],
    "superset-frontend/src/hooks/useTabId.ts": [
        {
            "604e30b3f089f9592bef03381b0dea5dd5b70f78": "@@ -17,6 +17,7 @@\n  * under the License.\n  */\n import { useEffect, useState } from 'react';\n+import shortid from 'shortid';\n import { BroadcastChannel } from 'broadcast-channel';\n \n interface TabIdChannelMessage {\n@@ -32,7 +33,21 @@ const channel = new BroadcastChannel<TabIdChannelMessage>('tab_id_channel');\n export function useTabId() {\n   const [tabId, setTabId] = useState<string>();\n \n+  function isStorageAvailable() {\n+    try {\n+      return window.localStorage && window.sessionStorage;\n+    } catch (error) {\n+      return false;\n+    }\n+  }\n   useEffect(() => {\n+    if (!isStorageAvailable()) {\n+      if (!tabId) {\n+        setTabId(shortid.generate());\n+      }\n+      return;\n+    }\n+\n     const updateTabId = () => {\n       const lastTabId = window.localStorage.getItem('last_tab_id');\n       const newTabId = String("
        }
    ],
    "superset-frontend/src/components/TableSelector/index.tsx": [
        {
            "53de94c04757aa6fbaa32a92f0b826cdbeeec054": "@@ -292,6 +292,7 @@ const TableSelector: FunctionComponent<TableSelectorProps> = ({\n   function renderDatabaseSelector() {\n     return (\n       <DatabaseSelector\n+        key={currentDatabase?.id}\n         db={currentDatabase}\n         emptyState={emptyState}\n         formMode={formMode}"
        },
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -36,6 +36,7 @@ import RefreshLabel from 'src/components/RefreshLabel';\n import CertifiedBadge from 'src/components/CertifiedBadge';\n import WarningIconWithTooltip from 'src/components/WarningIconWithTooltip';\n import { useToasts } from 'src/components/MessageToasts/withToasts';\n+import { SchemaOption } from 'src/SqlLab/types';\n \n const TableSelectorWrapper = styled.div`\n   ${({ theme }) => `\n@@ -89,7 +90,7 @@ interface TableSelectorProps {\n   isDatabaseSelectEnabled?: boolean;\n   onDbChange?: (db: DatabaseObject) => void;\n   onSchemaChange?: (schema?: string) => void;\n-  onSchemasLoad?: () => void;\n+  onSchemasLoad?: (schemaOptions: SchemaOption[]) => void;\n   onTablesLoad?: (options: Array<any>) => void;\n   readOnly?: boolean;\n   schema?: string;"
        },
        {
            "a1389d3a9f90a6dc1ca1fb6203a90f8ba70214a9": "@@ -291,7 +291,6 @@ const TableSelector: FunctionComponent<TableSelectorProps> = ({\n   function renderDatabaseSelector() {\n     return (\n       <DatabaseSelector\n-        key={currentDatabase?.id}\n         db={currentDatabase}\n         emptyState={emptyState}\n         formMode={formMode}"
        }
    ],
    "superset/security/manager.py": [
        {
            "ed6212a1f9e4d0bdf2b256d83c797bda38784f8e": "@@ -24,11 +24,13 @@\n     Any,\n     Callable,\n     cast,\n+    DefaultDict,\n     Dict,\n     List,\n     NamedTuple,\n     Optional,\n     Set,\n+    Tuple,\n     TYPE_CHECKING,\n     Union,\n )\n@@ -1802,3 +1804,38 @@ def is_admin(self) -> bool:\n         return current_app.config[\"AUTH_ROLE_ADMIN\"] in [\n             role.name for role in self.get_user_roles()\n         ]\n+\n+    def get_permissions(\n+        self,\n+        user: User,\n+    ) -> Tuple[Dict[str, List[List[str]]], DefaultDict[str, List[str]]]:\n+        if not user.roles:\n+            raise AttributeError(\"User object does not have roles\")\n+\n+        roles = defaultdict(list)\n+        permissions = defaultdict(set)\n+\n+        query = (\n+            self.get_session.query(Role.name, Permission.name, ViewMenu.name)\n+            .join(assoc_user_role, assoc_user_role.c.role_id == Role.id)\n+            .join(Role.permissions)\n+            .join(PermissionView.view_menu)\n+            .join(PermissionView.permission)\n+        )\n+\n+        if user.is_anonymous:\n+            public_role = current_app.config.get(\"AUTH_ROLE_PUBLIC\")\n+            query = query.filter(Role.name == public_role)\n+        else:\n+            query = query.filter(assoc_user_role.c.user_id == user.id)\n+\n+        rows = query.all()\n+        for role, permission, view_menu in rows:\n+            if permission in (\"datasource_access\", \"database_access\"):\n+                permissions[permission].add(view_menu)\n+            roles[role].append([permission, view_menu])\n+\n+        transformed_permissions = defaultdict(list)\n+        for perm in permissions:\n+            transformed_permissions[perm] = list(permissions[perm])\n+        return roles, transformed_permissions"
        }
    ],
    "superset/views/utils.py": [
        {
            "ed6212a1f9e4d0bdf2b256d83c797bda38784f8e": "@@ -15,9 +15,8 @@\n # specific language governing permissions and limitations\n # under the License.\n import logging\n-from collections import defaultdict\n from functools import wraps\n-from typing import Any, Callable, DefaultDict, Dict, List, Optional, Tuple, Union\n+from typing import Any, Callable, Dict, List, Optional, Tuple, Union\n from urllib import parse\n \n import msgpack\n@@ -94,34 +93,13 @@ def bootstrap_user_data(user: User, include_perms: bool = False) -> Dict[str, An\n         }\n \n     if include_perms:\n-        roles, permissions = get_permissions(user)\n+        roles, permissions = security_manager.get_permissions(user)\n         payload[\"roles\"] = roles\n         payload[\"permissions\"] = permissions\n \n     return payload\n \n \n-def get_permissions(\n-    user: User,\n-) -> Tuple[Dict[str, List[List[str]]], DefaultDict[str, List[str]]]:\n-    if not user.roles:\n-        raise AttributeError(\"User object does not have roles\")\n-\n-    roles = defaultdict(list)\n-    permissions = defaultdict(set)\n-\n-    for role in user.roles:\n-        permissions_ = security_manager.get_role_permissions(role)\n-        for permission in permissions_:\n-            if permission[0] in (\"datasource_access\", \"database_access\"):\n-                permissions[permission[0]].add(permission[1])\n-            roles[role.name].append([permission[0], permission[1]])\n-    transformed_permissions = defaultdict(list)\n-    for perm in permissions:\n-        transformed_permissions[perm] = list(permissions[perm])\n-    return roles, transformed_permissions\n-\n-\n def get_viz(\n     form_data: FormData,\n     datasource_type: str,"
        }
    ],
    "tests/integration_tests/security_tests.py": [
        {
            "ed6212a1f9e4d0bdf2b256d83c797bda38784f8e": "@@ -61,6 +61,7 @@\n     load_world_bank_dashboard_with_slices,\n     load_world_bank_data,\n )\n+from .dashboard_utils import get_table\n \n NEW_SECURITY_CONVERGE_VIEWS = (\n     \"Annotation\",\n@@ -73,6 +74,158 @@\n     \"SavedQuery\",\n )\n \n+GAMMA_ROLE_PERMISSIONS = {\n+    \"Gamma\": [\n+        [\"menu_access\", \"List Users\"],\n+        [\"can_read\", \"SavedQuery\"],\n+        [\"can_write\", \"SavedQuery\"],\n+        [\"can_read\", \"CssTemplate\"],\n+        [\"can_write\", \"CssTemplate\"],\n+        [\"can_read\", \"ReportSchedule\"],\n+        [\"can_write\", \"ReportSchedule\"],\n+        [\"can_read\", \"Chart\"],\n+        [\"can_write\", \"Chart\"],\n+        [\"can_read\", \"Annotation\"],\n+        [\"can_write\", \"Annotation\"],\n+        [\"can_read\", \"Dataset\"],\n+        [\"can_read\", \"Dashboard\"],\n+        [\"can_write\", \"Dashboard\"],\n+        [\"can_read\", \"Database\"],\n+        [\"can_read\", \"Query\"],\n+        [\"can_this_form_post\", \"ResetMyPasswordView\"],\n+        [\"can_this_form_get\", \"ResetMyPasswordView\"],\n+        [\"can_this_form_post\", \"UserInfoEditView\"],\n+        [\"can_this_form_get\", \"UserInfoEditView\"],\n+        [\"can_userinfo\", \"UserDBModelView\"],\n+        [\"resetmypassword\", \"UserDBModelView\"],\n+        [\"can_get\", \"OpenApi\"],\n+        [\"can_show\", \"SwaggerView\"],\n+        [\"can_get\", \"MenuApi\"],\n+        [\"can_list\", \"AsyncEventsRestApi\"],\n+        [\"can_read\", \"AdvancedDataType\"],\n+        [\"can_invalidate\", \"CacheRestApi\"],\n+        [\"can_export\", \"Chart\"],\n+        [\"can_read\", \"DashboardFilterStateRestApi\"],\n+        [\"can_write\", \"DashboardFilterStateRestApi\"],\n+        [\"can_read\", \"DashboardPermalinkRestApi\"],\n+        [\"can_write\", \"DashboardPermalinkRestApi\"],\n+        [\"can_delete_embedded\", \"Dashboard\"],\n+        [\"can_get_embedded\", \"Dashboard\"],\n+        [\"can_export\", \"Dashboard\"],\n+        [\"can_read\", \"EmbeddedDashboard\"],\n+        [\"can_read\", \"Explore\"],\n+        [\"can_read\", \"ExploreFormDataRestApi\"],\n+        [\"can_write\", \"ExploreFormDataRestApi\"],\n+        [\"can_read\", \"ExplorePermalinkRestApi\"],\n+        [\"can_write\", \"ExplorePermalinkRestApi\"],\n+        [\"can_delete\", \"FilterSets\"],\n+        [\"can_list\", \"FilterSets\"],\n+        [\"can_edit\", \"FilterSets\"],\n+        [\"can_add\", \"FilterSets\"],\n+        [\"can_import_\", \"ImportExportRestApi\"],\n+        [\"can_export\", \"ImportExportRestApi\"],\n+        [\"can_export\", \"SavedQuery\"],\n+        [\"can_show\", \"DynamicPlugin\"],\n+        [\"can_list\", \"DynamicPlugin\"],\n+        [\"can_time_range\", \"Api\"],\n+        [\"can_query_form_data\", \"Api\"],\n+        [\"can_query\", \"Api\"],\n+        [\"can_this_form_post\", \"CsvToDatabaseView\"],\n+        [\"can_this_form_get\", \"CsvToDatabaseView\"],\n+        [\"can_this_form_post\", \"ExcelToDatabaseView\"],\n+        [\"can_this_form_get\", \"ExcelToDatabaseView\"],\n+        [\"can_this_form_post\", \"ColumnarToDatabaseView\"],\n+        [\"can_this_form_get\", \"ColumnarToDatabaseView\"],\n+        [\"can_get\", \"Datasource\"],\n+        [\"can_external_metadata\", \"Datasource\"],\n+        [\"can_external_metadata_by_name\", \"Datasource\"],\n+        [\"can_get_value\", \"KV\"],\n+        [\"can_store\", \"KV\"],\n+        [\"can_my_queries\", \"SqlLab\"],\n+        [\"can_created_dashboards\", \"Superset\"],\n+        [\"can_testconn\", \"Superset\"],\n+        [\"can_estimate_query_cost\", \"Superset\"],\n+        [\"can_explore\", \"Superset\"],\n+        [\"can_fetch_datasource_metadata\", \"Superset\"],\n+        [\"can_search_queries\", \"Superset\"],\n+        [\"can_save_dash\", \"Superset\"],\n+        [\"can_dashboard_permalink\", \"Superset\"],\n+        [\"can_warm_up_cache\", \"Superset\"],\n+        [\"can_request_access\", \"Superset\"],\n+        [\"can_datasources\", \"Superset\"],\n+        [\"can_available_domains\", \"Superset\"],\n+        [\"can_dashboard\", \"Superset\"],\n+        [\"can_annotation_json\", \"Superset\"],\n+        [\"can_created_slices\", \"Superset\"],\n+        [\"can_slice_json\", \"Superset\"],\n+        [\"can_profile\", \"Superset\"],\n+        [\"can_filter\", \"Superset\"],\n+        [\"can_validate_sql_json\", \"Superset\"],\n+        [\"can_slice\", \"Superset\"],\n+        [\"can_sqllab\", \"Superset\"],\n+        [\"can_log\", \"Superset\"],\n+        [\"can_recent_activity\", \"Superset\"],\n+        [\"can_tables\", \"Superset\"],\n+        [\"can_fave_slices\", \"Superset\"],\n+        [\"can_sqllab_viz\", \"Superset\"],\n+        [\"can_fave_dashboards\", \"Superset\"],\n+        [\"can_results\", \"Superset\"],\n+        [\"can_extra_table_metadata\", \"Superset\"],\n+        [\"can_schemas_access_for_file_upload\", \"Superset\"],\n+        [\"can_fave_dashboards_by_username\", \"Superset\"],\n+        [\"can_csv\", \"Superset\"],\n+        [\"can_add_slices\", \"Superset\"],\n+        [\"can_explore_json\", \"Superset\"],\n+        [\"can_sqllab_history\", \"Superset\"],\n+        [\"can_import_dashboards\", \"Superset\"],\n+        [\"can_sqllab_table_viz\", \"Superset\"],\n+        [\"can_stop_query\", \"Superset\"],\n+        [\"can_favstar\", \"Superset\"],\n+        [\"can_copy_dash\", \"Superset\"],\n+        [\"can_queries\", \"Superset\"],\n+        [\"can_user_slices\", \"Superset\"],\n+        [\"can_delete\", \"TableSchemaView\"],\n+        [\"can_post\", \"TableSchemaView\"],\n+        [\"can_expanded\", \"TableSchemaView\"],\n+        [\"can_get\", \"TabStateView\"],\n+        [\"can_post\", \"TabStateView\"],\n+        [\"can_migrate_query\", \"TabStateView\"],\n+        [\"can_put\", \"TabStateView\"],\n+        [\"can_activate\", \"TabStateView\"],\n+        [\"can_delete\", \"TabStateView\"],\n+        [\"can_delete_query\", \"TabStateView\"],\n+        [\"can_get\", \"TagView\"],\n+        [\"can_tagged_objects\", \"TagView\"],\n+        [\"can_post\", \"TagView\"],\n+        [\"can_delete\", \"TagView\"],\n+        [\"can_suggestions\", \"TagView\"],\n+        [\"can_read\", \"SecurityRestApi\"],\n+        [\"menu_access\", \"List Roles\"],\n+        [\"menu_access\", \"Action Log\"],\n+        [\"menu_access\", \"Access requests\"],\n+        [\"menu_access\", \"Home\"],\n+        [\"menu_access\", \"Annotation Layers\"],\n+        [\"menu_access\", \"Plugins\"],\n+        [\"menu_access\", \"Import Dashboards\"],\n+        [\"menu_access\", \"Alerts & Report\"],\n+        [\"menu_access\", \"Dashboards\"],\n+        [\"menu_access\", \"Charts\"],\n+        [\"menu_access\", \"SQL Editor\"],\n+        [\"menu_access\", \"Saved Queries\"],\n+        [\"menu_access\", \"Query Search\"],\n+        [\"menu_access\", \"Data\"],\n+        [\"menu_access\", \"Databases\"],\n+        [\"menu_access\", \"Datasets\"],\n+        [\"can_share_dashboard\", \"Superset\"],\n+        [\"can_share_chart\", \"Superset\"],\n+    ],\n+    \"schema_access_role\": [[\"schema_access\", \"[examples].[temp_schema]\"]],\n+    \"dummy_role\": [\n+        [\"datasource_access\", \"[examples].[wb_health_population](id:1)\"],\n+        [\"database_access\", \"[examples].(id:1)\"],\n+    ],\n+}\n+\n \n def get_perm_tuples(role_name):\n     perm_set = set()\n@@ -1051,6 +1204,54 @@ def test_views_are_secured(self):\n             view_str = \"\\n\".join([str(v) for v in unsecured_views])\n             raise Exception(f\"Some views are not secured:\\n{view_str}\")\n \n+    @patch(\"superset.utils.core.g\")\n+    @patch(\"superset.security.manager.g\")\n+    def test_get_permissions_gamma_user(self, mock_sm_g, mock_g):\n+        session = db.session\n+        role_name = \"dummy_role\"\n+        gamma_user = security_manager.find_user(username=\"gamma\")\n+        security_manager.add_role(role_name)\n+        dummy_role = security_manager.find_role(role_name)\n+        gamma_user.roles.append(dummy_role)\n+\n+        table = (\n+            db.session.query(SqlaTable)\n+            .filter_by(table_name=\"wb_health_population\")\n+            .one()\n+        )\n+        table_perm = table.perm\n+        security_manager.add_permission_role(\n+            dummy_role,\n+            security_manager.find_permission_view_menu(\"datasource_access\", table_perm),\n+        )\n+        security_manager.add_permission_role(\n+            dummy_role,\n+            security_manager.find_permission_view_menu(\n+                \"database_access\", table.database.perm\n+            ),\n+        )\n+\n+        session.commit()\n+\n+        mock_g.user = mock_sm_g.user = security_manager.find_user(\"gamma\")\n+        with self.client.application.test_request_context():\n+            roles, permissions = security_manager.get_permissions(mock_g.user)\n+            assert \"dummy_role\" in roles\n+            assert \"Gamma\" in roles\n+            assert sorted(roles[\"Gamma\"]) == sorted(GAMMA_ROLE_PERMISSIONS[\"Gamma\"])\n+            assert sorted(roles[\"schema_access_role\"]) == sorted(\n+                GAMMA_ROLE_PERMISSIONS[\"schema_access_role\"]\n+            )\n+\n+            assert len(permissions) == 2\n+            assert \"[examples].(id:\" in permissions[\"database_access\"][0]\n+            assert \"[examples].[\" in permissions[\"datasource_access\"][0]\n+\n+        # cleanup\n+        gamma_user = security_manager.find_user(username=\"gamma\")\n+        gamma_user.roles.remove(security_manager.find_role(role_name))\n+        session.commit()\n+\n \n class TestSecurityManager(SupersetTestCase):\n     \"\"\""
        }
    ],
    ".github/workflows/chromatic.yml": [
        {
            "cda7d705650fd36b7051c1002ab8f152017c9a70": "@@ -56,6 +56,7 @@ jobs:\n         working-directory: superset-frontend\n       # \ud83d\udc47 Checks if the branch is not master and runs Chromatic\n       - name: Publish to Chromatic\n+        id: chromatic-pr\n         if: github.ref != 'refs/heads/master'\n         uses: chromaui/action@v1\n         # Required options for the Chromatic GitHub Action\n@@ -67,6 +68,7 @@ jobs:\n           exitZeroOnChanges: true # \ud83d\udc48 Option to prevent the workflow from failing\n       # \ud83d\udc47 Checks if the branch is master and accepts all changes in Chromatic\n       - name: Publish to Chromatic and auto accept changes\n+        id: chromatic-master\n         if: github.ref == 'refs/heads/master'\n         uses: chromaui/action@v1\n         # Required options for the Chromatic GitHub Action\n@@ -77,3 +79,15 @@ jobs:\n           projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}\n           autoAcceptChanges: true # \ud83d\udc48 Option to accept all changes when merging to master\n           exitZeroOnChanges: true # \ud83d\udc48 Option to prevent the workflow from failing\n+      - name: Echo Storybook build link\n+        if: ${{ success() }}\n+        uses: actions/github-script@v6\n+        with:\n+          github-token: ${{secrets.GITHUB_TOKEN}}\n+          script: |\n+            github.rest.issues.createComment({\n+              issue_number: context.issue.number,\n+              owner: context.repo.owner,\n+              repo: context.repo.repo,\n+              body: 'Storybook has completed and can be viewed at ${{ steps.chromatic-pr.outputs.storybookUrl }}'\n+            })"
        },
        {
            "6a0b7e5598f18262cb83579bacd2440faaf5717b": "@@ -0,0 +1,79 @@\n+# .github/workflows/chromatic.yml\n+# seee https://www.chromatic.com/docs/github-actions\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Workflow name\n+name: 'Chromatic'\n+\n+# Event for the workflow\n+# Only run if changes were made in superset-frontend folder of repo\n+on:\n+  # This will trigger when a branch merges to master when the PR has changes in the frontend folder updating the chromatic baseline\n+  push:\n+    branches:\n+      - master\n+    paths:\n+      - \"superset-frontend/**\"\n+  # this will allow us to see how the Storybook builds when a PR has been created that has changes in the frontend folder\n+  # NOTE: pull_request_target actions will always run the version of this action on master branch\n+  # you will not see changes in the action behavior until this action's changes have been merged to master.\n+  # This is a security precaution so that PR coming from a fork cannot access a Github secret without a repo\n+  # committer aproving and merging the PR declaring the action safe.\n+  pull_request_target:\n+    # We want this action to run under specific pull request changes\n+    # opened: pull request is created\n+    # synchronize: commit(s) pushed to the pull request\n+    # reopened: closed pull request is reopened\n+    types: [opened, synchronize, reopened]\n+    paths:\n+      - \"superset-frontend/**\"\n+\n+# List of jobs\n+jobs:\n+  chromatic-deployment:\n+    # Operating System\n+    runs-on: ubuntu-latest\n+    # Job steps\n+    steps:\n+      - uses: actions/checkout@v1\n+      - name: Install dependencies\n+        run: npm ci\n+        working-directory: superset-frontend\n+      # \ud83d\udc47 Checks if the branch is not master and runs Chromatic\n+      - name: Publish to Chromatic\n+        if: github.ref != 'refs/heads/master'\n+        uses: chromaui/action@v1\n+        # Required options for the Chromatic GitHub Action\n+        with:\n+          # \ud83d\udc47 Location of package.json from root of mono-repo\n+          workingDir: superset-frontend\n+          # \ud83d\udc47 Chromatic projectToken, refer to the Chromatic manage page to obtain it.\n+          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}\n+          exitZeroOnChanges: true # \ud83d\udc48 Option to prevent the workflow from failing\n+      # \ud83d\udc47 Checks if the branch is master and accepts all changes in Chromatic\n+      - name: Publish to Chromatic and auto accept changes\n+        if: github.ref == 'refs/heads/master'\n+        uses: chromaui/action@v1\n+        # Required options for the Chromatic GitHub Action\n+        with:\n+          # \ud83d\udc47 Location of package.json from root of mono-repo\n+          workingDir: superset-frontend\n+          # \ud83d\udc47 Chromatic projectToken, refer to the manage page to obtain it.\n+          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}\n+          autoAcceptChanges: true # \ud83d\udc48 Option to accept all changes when merging to master\n+          exitZeroOnChanges: true # \ud83d\udc48 Option to prevent the workflow from failing"
        }
    ],
    "superset-frontend/.storybook/preview.jsx": [
        {
            "6a0b7e5598f18262cb83579bacd2440faaf5717b": "@@ -63,7 +63,14 @@ addParameters({\n   },\n   options: {\n     storySort: {\n-      method: 'alphabetical',\n+      order: [\n+        'Superset Frontend',\n+        ['Controls', 'Display', 'Feedback', 'Input', '*'],\n+        ['Overview', 'Examples', '*'],\n+        'Design System',\n+        ['Foundations', 'Components', 'Patterns', '*'],\n+        '*',\n+      ],\n     },\n   },\n   controls: { expanded: true },"
        }
    ],
    "superset-frontend/package-lock.json": [
        {
            "6a0b7e5598f18262cb83579bacd2440faaf5717b": "@@ -1,12 +1,12 @@\n {\n   \"name\": \"superset\",\n-  \"version\": \"0.0.0dev\",\n+  \"version\": \"0.0.0-dev\",\n   \"lockfileVersion\": 2,\n   \"requires\": true,\n   \"packages\": {\n     \"\": {\n       \"name\": \"superset\",\n-      \"version\": \"0.0.0dev\",\n+      \"version\": \"0.0.0-dev\",\n       \"license\": \"Apache-2.0\",\n       \"workspaces\": [\n         \"packages/*\",\n@@ -213,6 +213,7 @@\n         \"babel-plugin-dynamic-import-node\": \"^2.3.3\",\n         \"babel-plugin-jsx-remove-data-test-id\": \"^2.1.3\",\n         \"babel-plugin-lodash\": \"^3.3.4\",\n+        \"chromatic\": \"^6.7.4\",\n         \"copy-webpack-plugin\": \"^9.0.1\",\n         \"cross-env\": \"^5.2.0\",\n         \"css-loader\": \"^6.2.0\",\n@@ -295,33 +296,43 @@\n       }\n     },\n     \"node_modules/@actions/core\": {\n-      \"version\": \"1.6.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@actions/core/-/core-1.6.0.tgz\",\n-      \"integrity\": \"sha512-NB1UAZomZlCV/LmJqkLhNTqtKfFXJZAUPcfl/zqG7EfsQdeUJtaWO98SGbuQ3pydJ3fHl2CvI/51OKYlCYYcaw==\",\n+      \"version\": \"1.9.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@actions/core/-/core-1.9.1.tgz\",\n+      \"integrity\": \"sha512-5ad+U2YGrmmiw6du20AQW5XuWo7UKN2052FjSV7MX+Wfjf8sCqcsZe62NfgHys4QI4/Y+vQvLKYL8jWtA1ZBTA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@actions/http-client\": \"^1.0.11\"\n+        \"@actions/http-client\": \"^2.0.1\",\n+        \"uuid\": \"^8.3.2\"\n+      }\n+    },\n+    \"node_modules/@actions/core/node_modules/uuid\": {\n+      \"version\": \"8.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\",\n+      \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\",\n+      \"dev\": true,\n+      \"bin\": {\n+        \"uuid\": \"dist/bin/uuid\"\n       }\n     },\n     \"node_modules/@actions/github\": {\n-      \"version\": \"5.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@actions/github/-/github-5.0.0.tgz\",\n-      \"integrity\": \"sha512-QvE9eAAfEsS+yOOk0cylLBIO/d6WyWIOvsxxzdrPFaud39G6BOkUwScXZn1iBzQzHyu9SBkkLSWlohDWdsasAQ==\",\n+      \"version\": \"5.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@actions/github/-/github-5.0.3.tgz\",\n+      \"integrity\": \"sha512-myjA/pdLQfhUGLtRZC/J4L1RXOG4o6aYdiEq+zr5wVVKljzbFld+xv10k1FX6IkIJtNxbAq44BdwSNpQ015P0A==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@actions/http-client\": \"^1.0.11\",\n-        \"@octokit/core\": \"^3.4.0\",\n-        \"@octokit/plugin-paginate-rest\": \"^2.13.3\",\n-        \"@octokit/plugin-rest-endpoint-methods\": \"^5.1.1\"\n+        \"@actions/http-client\": \"^2.0.1\",\n+        \"@octokit/core\": \"^3.6.0\",\n+        \"@octokit/plugin-paginate-rest\": \"^2.17.0\",\n+        \"@octokit/plugin-rest-endpoint-methods\": \"^5.13.0\"\n       }\n     },\n     \"node_modules/@actions/http-client\": {\n-      \"version\": \"1.0.11\",\n-      \"resolved\": \"https://registry.npmjs.org/@actions/http-client/-/http-client-1.0.11.tgz\",\n-      \"integrity\": \"sha512-VRYHGQV1rqnROJqdMvGUbY/Kn8vriQe/F9HR2AlYHzmKuM/p3kjNuXhmdBfcVgsvRWTz5C5XW5xvndZrVBuAYg==\",\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@actions/http-client/-/http-client-2.0.1.tgz\",\n+      \"integrity\": \"sha512-PIXiMVtz6VvyaRsGY268qvj57hXQEpsYogYOu2nrQhlf+XCGmZstmuZBbAybUl1nQGnvS1k1eEsQ69ZoD7xlSw==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"tunnel\": \"0.0.6\"\n+        \"tunnel\": \"^0.0.6\"\n       }\n     },\n     \"node_modules/@ampproject/remapping\": {\n@@ -5099,9 +5110,9 @@\n       }\n     },\n     \"node_modules/@discoveryjs/json-ext\": {\n-      \"version\": \"0.5.3\",\n-      \"resolved\": \"https://registry.npmjs.org/@discoveryjs/json-ext/-/json-ext-0.5.3.tgz\",\n-      \"integrity\": \"sha512-Fxt+AfXgjMoin2maPIYzFZnQjAXjAL0PHscM5pRTtatFqB+vZxAM9tLp2Optnuw3QOQC40jTNeGYFOMvyf7v9g==\",\n+      \"version\": \"0.5.7\",\n+      \"resolved\": \"https://registry.npmjs.org/@discoveryjs/json-ext/-/json-ext-0.5.7.tgz\",\n+      \"integrity\": \"sha512-dBVuXR082gk3jsFp7Rd/JI4kytwGHecnCoTtXFb7DB6CNHp4rg5k1bhg0nWdLGLnOV71lmDzGQaLMy8iPLY0pw==\",\n       \"engines\": {\n         \"node\": \">=10.0.0\"\n       }\n@@ -11016,14 +11027,14 @@\n       }\n     },\n     \"node_modules/@octokit/core\": {\n-      \"version\": \"3.5.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@octokit/core/-/core-3.5.1.tgz\",\n-      \"integrity\": \"sha512-omncwpLVxMP+GLpLPgeGJBF6IWJFjXDS5flY5VbppePYX9XehevbDykRH9PdCdvqt9TS5AOTiDide7h0qrkHjw==\",\n+      \"version\": \"3.6.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@octokit/core/-/core-3.6.0.tgz\",\n+      \"integrity\": \"sha512-7RKRKuA4xTjMhY+eG3jthb3hlZCsOwg3rztWh75Xc+ShDWOfDDATWbeZpAHBNRpm4Tv9WgBMOy1zEJYXG6NJ7Q==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@octokit/auth-token\": \"^2.4.4\",\n         \"@octokit/graphql\": \"^4.5.8\",\n-        \"@octokit/request\": \"^5.6.0\",\n+        \"@octokit/request\": \"^5.6.3\",\n         \"@octokit/request-error\": \"^2.0.5\",\n         \"@octokit/types\": \"^6.0.3\",\n         \"before-after-hook\": \"^2.2.0\",\n@@ -11137,16 +11148,16 @@\n       }\n     },\n     \"node_modules/@octokit/request\": {\n-      \"version\": \"5.6.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@octokit/request/-/request-5.6.2.tgz\",\n-      \"integrity\": \"sha512-je66CvSEVf0jCpRISxkUcCa0UkxmFs6eGDRSbfJtAVwbLH5ceqF+YEyC8lj8ystKyZTy8adWr0qmkY52EfOeLA==\",\n+      \"version\": \"5.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@octokit/request/-/request-5.6.3.tgz\",\n+      \"integrity\": \"sha512-bFJl0I1KVc9jYTe9tdGGpAMPy32dLBXXo1dS/YwSCTL/2nd9XeHsY616RE3HPXDVk+a+dBuzyz5YdlXwcDTr2A==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"@octokit/endpoint\": \"^6.0.1\",\n         \"@octokit/request-error\": \"^2.1.0\",\n         \"@octokit/types\": \"^6.16.1\",\n         \"is-plain-object\": \"^5.0.0\",\n-        \"node-fetch\": \"^2.6.1\",\n+        \"node-fetch\": \"^2.6.7\",\n         \"universal-user-agent\": \"^6.0.0\"\n       }\n     },\n@@ -18620,9 +18631,9 @@\n       }\n     },\n     \"node_modules/@types/webpack-env\": {\n-      \"version\": \"1.16.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/webpack-env/-/webpack-env-1.16.2.tgz\",\n-      \"integrity\": \"sha512-vKx7WNQNZDyJveYcHAm9ZxhqSGLYwoyLhrHjLBOkw3a7cT76sTdjgtwyijhk1MaHyRIuSztcVwrUOO/NEu68Dw==\"\n+      \"version\": \"1.18.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/webpack-env/-/webpack-env-1.18.0.tgz\",\n+      \"integrity\": \"sha512-56/MAlX5WMsPVbOg7tAxnYvNYMMWr/QJiIp6BxVSW3JJXUVzzOn64qW8TzQyMSqSUFM2+PVI4aUHcHOzIz/1tg==\"\n     },\n     \"node_modules/@types/webpack-sources\": {\n       \"version\": \"0.1.5\",\n@@ -23057,397 +23068,20 @@\n       \"integrity\": \"sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==\"\n     },\n     \"node_modules/chromatic\": {\n-      \"version\": \"5.10.2\",\n-      \"resolved\": \"https://registry.npmjs.org/chromatic/-/chromatic-5.10.2.tgz\",\n-      \"integrity\": \"sha512-JHFtZ16VanQX0X9qjacIJOrH9rVUJACilPs8dBwwQgJTZzgCZAdwgmE+WwLcxe/LuK7vM56BDTHbxC+XcnTsjw==\",\n+      \"version\": \"6.7.4\",\n+      \"resolved\": \"https://registry.npmjs.org/chromatic/-/chromatic-6.7.4.tgz\",\n+      \"integrity\": \"sha512-QW4i8RQsON0JVnFnRf+8y70aIJptvC0Oi/26YJ669Dl03WmJRpobNO5qWFPTiv3KFKMc1Qf6/qFsRVZCtn+bfA==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"@actions/core\": \"^1.5.0\",\n-        \"@actions/github\": \"^5.0.0\",\n-        \"@babel/preset-typescript\": \"^7.15.0\",\n-        \"@babel/runtime\": \"^7.15.3\",\n-        \"@chromaui/localtunnel\": \"^2.0.3\",\n-        \"async-retry\": \"^1.3.3\",\n-        \"chalk\": \"^4.1.2\",\n-        \"cross-spawn\": \"^7.0.2\",\n-        \"debug\": \"^4.3.2\",\n-        \"dotenv\": \"^8.2.0\",\n-        \"env-ci\": \"^5.0.2\",\n-        \"esm\": \"^3.2.25\",\n-        \"execa\": \"^5.0.0\",\n-        \"fake-tag\": \"^2.0.0\",\n-        \"fs-extra\": \"^10.0.0\",\n-        \"https-proxy-agent\": \"^5.0.0\",\n-        \"jsonfile\": \"^6.0.1\",\n-        \"junit-report-builder\": \"2.1.0\",\n-        \"listr\": \"0.14.3\",\n-        \"meow\": \"^8.0.0\",\n-        \"no-proxy\": \"^1.0.3\",\n-        \"node-ask\": \"^1.0.1\",\n-        \"node-fetch\": \"2.6.0\",\n-        \"node-loggly-bulk\": \"^2.2.4\",\n-        \"p-limit\": \"3.1.0\",\n-        \"picomatch\": \"2.2.2\",\n-        \"pkg-up\": \"^3.1.0\",\n-        \"pluralize\": \"^8.0.0\",\n-        \"progress-stream\": \"^2.0.0\",\n-        \"semver\": \"^7.3.5\",\n-        \"slash\": \"^3.0.0\",\n-        \"string-argv\": \"^0.3.1\",\n-        \"strip-ansi\": \"6.0.0\",\n-        \"tmp-promise\": \"3.0.2\",\n-        \"tree-kill\": \"^1.2.2\",\n-        \"ts-dedent\": \"^1.0.0\",\n-        \"util-deprecate\": \"^1.0.2\",\n-        \"uuid\": \"^8.3.2\",\n-        \"yarn-or-npm\": \"^3.0.1\"\n+        \"@discoveryjs/json-ext\": \"^0.5.7\",\n+        \"@types/webpack-env\": \"^1.17.0\"\n       },\n       \"bin\": {\n-        \"chroma\": \"bin/register.js\",\n-        \"chromatic\": \"bin/register.js\",\n-        \"chromatic-cli\": \"bin/register.js\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/ansi-regex\": {\n-      \"version\": \"5.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n-      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=8\"\n+        \"chroma\": \"bin/main.cjs\",\n+        \"chromatic\": \"bin/main.cjs\",\n+        \"chromatic-cli\": \"bin/main.cjs\"\n       }\n     },\n-    \"node_modules/chromatic/node_modules/cross-spawn\": {\n-      \"version\": \"7.0.3\",\n-      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n-      \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"path-key\": \"^3.1.0\",\n-        \"shebang-command\": \"^2.0.0\",\n-        \"which\": \"^2.0.1\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 8\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/debug\": {\n-      \"version\": \"4.3.2\",\n-      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz\",\n-      \"integrity\": \"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"ms\": \"2.1.2\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=6.0\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"supports-color\": {\n-          \"optional\": true\n-        }\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/execa\": {\n-      \"version\": \"5.1.1\",\n-      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-5.1.1.tgz\",\n-      \"integrity\": \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"cross-spawn\": \"^7.0.3\",\n-        \"get-stream\": \"^6.0.0\",\n-        \"human-signals\": \"^2.1.0\",\n-        \"is-stream\": \"^2.0.0\",\n-        \"merge-stream\": \"^2.0.0\",\n-        \"npm-run-path\": \"^4.0.1\",\n-        \"onetime\": \"^5.1.2\",\n-        \"signal-exit\": \"^3.0.3\",\n-        \"strip-final-newline\": \"^2.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/find-up\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz\",\n-      \"integrity\": \"sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"locate-path\": \"^3.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=6\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/get-stream\": {\n-      \"version\": \"6.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n-      \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/human-signals\": {\n-      \"version\": \"2.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz\",\n-      \"integrity\": \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=10.17.0\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/is-stream\": {\n-      \"version\": \"2.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n-      \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/locate-path\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz\",\n-      \"integrity\": \"sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"p-locate\": \"^3.0.0\",\n-        \"path-exists\": \"^3.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=6\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/lru-cache\": {\n-      \"version\": \"6.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n-      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"yallist\": \"^4.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/ms\": {\n-      \"version\": \"2.1.2\",\n-      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n-      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n-      \"dev\": true\n-    },\n-    \"node_modules/chromatic/node_modules/node-fetch\": {\n-      \"version\": \"2.6.0\",\n-      \"resolved\": \"https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.0.tgz\",\n-      \"integrity\": \"sha512-8dG4H5ujfvFiqDmVu9fQ5bOHUC15JMjMY/Zumv26oOvvVJjM67KF8koCWIabKQ1GJIa9r2mMZscBq/TbdOcmNA==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \"4.x || >=6.0.0\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/npm-run-path\": {\n-      \"version\": \"4.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\",\n-      \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"path-key\": \"^3.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/p-limit\": {\n-      \"version\": \"3.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n-      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"yocto-queue\": \"^0.1.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/p-locate\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz\",\n-      \"integrity\": \"sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"p-limit\": \"^2.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=6\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/p-locate/node_modules/p-limit\": {\n-      \"version\": \"2.3.0\",\n-      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n-      \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"p-try\": \"^2.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=6\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/p-try\": {\n-      \"version\": \"2.2.0\",\n-      \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n-      \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=6\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/path-key\": {\n-      \"version\": \"3.1.1\",\n-      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n-      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/picomatch\": {\n-      \"version\": \"2.2.2\",\n-      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.2.2.tgz\",\n-      \"integrity\": \"sha512-q0M/9eZHzmr0AulXyPwNfZjtwZ/RBZlbN3K3CErVrk50T2ASYI7Bye0EvekFY3IP1Nt2DHu0re+V2ZHIpMkuWg==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=8.6\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/pkg-up\": {\n-      \"version\": \"3.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/pkg-up/-/pkg-up-3.1.0.tgz\",\n-      \"integrity\": \"sha512-nDywThFk1i4BQK4twPQ6TA4RT8bDY96yeuCVBWL3ePARCiEKDRSrNGbFIgUJpLp+XeIR65v8ra7WuJOFUBtkMA==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"find-up\": \"^3.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/semver\": {\n-      \"version\": \"7.3.5\",\n-      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.5.tgz\",\n-      \"integrity\": \"sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"lru-cache\": \"^6.0.0\"\n-      },\n-      \"bin\": {\n-        \"semver\": \"bin/semver.js\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/shebang-command\": {\n-      \"version\": \"2.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n-      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"shebang-regex\": \"^3.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/shebang-regex\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n-      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/slash\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n-      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/strip-ansi\": {\n-      \"version\": \"6.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz\",\n-      \"integrity\": \"sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"ansi-regex\": \"^5.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/ts-dedent\": {\n-      \"version\": \"1.2.0\",\n-      \"resolved\": \"https://registry.npmjs.org/ts-dedent/-/ts-dedent-1.2.0.tgz\",\n-      \"integrity\": \"sha512-6zSJp23uQI+Txyz5LlXMXAHpUhY4Hi0oluXny0OgIR7g/Cromq4vDBnhtbBdyIV34g0pgwxUvnvg+jLJe4c1NA==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=6.10\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/uuid\": {\n-      \"version\": \"8.3.2\",\n-      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\",\n-      \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\",\n-      \"dev\": true,\n-      \"bin\": {\n-        \"uuid\": \"dist/bin/uuid\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/which\": {\n-      \"version\": \"2.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n-      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"isexe\": \"^2.0.0\"\n-      },\n-      \"bin\": {\n-        \"node-which\": \"bin/node-which\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 8\"\n-      }\n-    },\n-    \"node_modules/chromatic/node_modules/yallist\": {\n-      \"version\": \"4.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n-      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n-      \"dev\": true\n-    },\n     \"node_modules/chrome-trace-event\": {\n       \"version\": \"1.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/chrome-trace-event/-/chrome-trace-event-1.0.2.tgz\",\n@@ -26885,7 +26519,8 @@\n     \"node_modules/date-format\": {\n       \"version\": \"0.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/date-format/-/date-format-0.0.2.tgz\",\n-      \"integrity\": \"sha1-+v1Ej3IRXvHitzkVWukvK+bCjdE=\",\n+      \"integrity\": \"sha512-M4obuJx8jU5T91lcbwi0+QPNVaWOY1DQYz5xUuKYWO93osVzB2ZPqyDUc5T+mDjbA1X8VOb4JDZ+8r2MrSOp7Q==\",\n+      \"deprecated\": \"0.x is no longer supported. Please upgrade to 4.x or higher.\",\n       \"dev\": true\n     },\n     \"node_modules/dateformat\": {\n@@ -27854,7 +27489,7 @@\n     \"node_modules/elegant-spinner\": {\n       \"version\": \"1.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/elegant-spinner/-/elegant-spinner-1.0.1.tgz\",\n-      \"integrity\": \"sha1-2wQ1IcldfjA/2PNFvtwzSc+wcp4=\",\n+      \"integrity\": \"sha512-B+ZM+RXvRqQaAmkMlO/oSe5nMUOaUnyfGYCEHoR8wrXsZR2mA0XVibsxV1bvTwxdRWah1PkQqso2EzhILGHtEQ==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=0.10.0\"\n@@ -28086,9 +27721,9 @@\n       \"integrity\": \"sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w==\"\n     },\n     \"node_modules/env-ci\": {\n-      \"version\": \"5.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/env-ci/-/env-ci-5.4.1.tgz\",\n-      \"integrity\": \"sha512-xyuCtyFZLpnW5aH0JstETKTSMwHHQX4m42juzEZzvbUCJX7RiPVlhASKM0f/cJ4vvI/+txMkZ7F5To6dCdPYhg==\",\n+      \"version\": \"5.5.0\",\n+      \"resolved\": \"https://registry.npmjs.org/env-ci/-/env-ci-5.5.0.tgz\",\n+      \"integrity\": \"sha512-o0JdWIbOLP+WJKIUt36hz1ImQQFuN92nhsfTkHHap+J8CiI8WgGpH/a9jEGHh4/TU5BUUGjlnKXNoDb57+ne+A==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"execa\": \"^5.0.0\",\n@@ -38608,7 +38243,7 @@\n     \"node_modules/listr-silent-renderer\": {\n       \"version\": \"1.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/listr-silent-renderer/-/listr-silent-renderer-1.1.1.tgz\",\n-      \"integrity\": \"sha1-kktaN1cVN3C/Go4/v3S4u/P5JC4=\",\n+      \"integrity\": \"sha512-L26cIFm7/oZeSNVhWB6faeorXhMg4HNlb/dS/7jHhr708jxlXrtrBWo4YUxZQkc6dGoxEAe6J/D3juTRBUzjtA==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=4\"\n@@ -38646,9 +38281,9 @@\n       }\n     },\n     \"node_modules/listr-update-renderer/node_modules/ansi-regex\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz\",\n-      \"integrity\": \"sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=\",\n+      \"version\": \"3.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.1.tgz\",\n+      \"integrity\": \"sha512-+O9Jct8wf++lXxxFc4hc8LsjaSq0HFzzL7cVsw8pRDIPdjKD2mT4ytDZlLuSBZ4cLKZFXIrMGO7DbQCtMJJMKw==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=4\"\n@@ -38657,7 +38292,7 @@\n     \"node_modules/listr-update-renderer/node_modules/ansi-styles\": {\n       \"version\": \"2.2.1\",\n       \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz\",\n-      \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\",\n+      \"integrity\": \"sha512-kmCevFghRiWM7HB5zTPULl4r9bVFSWjz62MhqizDGUrq2NWuNMQyuv4tHHoKJHs69M/MF64lEcHdYIocrdWQYA==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=0.10.0\"\n@@ -38666,7 +38301,7 @@\n     \"node_modules/listr-update-renderer/node_modules/chalk\": {\n       \"version\": \"1.1.3\",\n       \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",\n-      \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\n+      \"integrity\": \"sha512-U3lRVLMSlsCfjqYPbLyVv11M9CPW4I728d6TCKMAOJueEeB9/8o+eSsMnxPJD+Q+K909sdESg7C+tIkoH6on1A==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"ansi-styles\": \"^2.2.1\",\n@@ -38682,7 +38317,7 @@\n     \"node_modules/listr-update-renderer/node_modules/cli-cursor\": {\n       \"version\": \"2.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz\",\n-      \"integrity\": \"sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=\",\n+      \"integrity\": \"sha512-8lgKz8LmCRYZZQDpRyT2m5rKJ08TnU4tR9FFFW2rxpxR1FzWi4PQ/NfyODchAatHaUgnSPVcx/R5w6NuTBzFiw==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"restore-cursor\": \"^2.0.0\"\n@@ -38694,7 +38329,7 @@\n     \"node_modules/listr-update-renderer/node_modules/cli-truncate\": {\n       \"version\": \"0.2.1\",\n       \"resolved\": \"https://registry.npmjs.org/cli-truncate/-/cli-truncate-0.2.1.tgz\",\n-      \"integrity\": \"sha1-nxXPuwcFAFNpIWxiasfQWrkN1XQ=\",\n+      \"integrity\": \"sha512-f4r4yJnbT++qUPI9NR4XLDLq41gQ+uqnPItWG0F5ZkehuNiTTa3EY0S4AqTSUOeJ7/zU41oWPQSNkW5BqPL9bg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"slice-ansi\": \"0.0.4\",\n@@ -38707,7 +38342,7 @@\n     \"node_modules/listr-update-renderer/node_modules/figures\": {\n       \"version\": \"1.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/figures/-/figures-1.7.0.tgz\",\n-      \"integrity\": \"sha1-y+Hjr/zxzUS4DK3+0o3Hk6lwHS4=\",\n+      \"integrity\": \"sha512-UxKlfCRuCBxSXU4C6t9scbDyWZ4VlaFFdojKtzJuSkuOBQ5CNFum+zZXFwHjo+CxBC1t6zlYPgHIgFjL8ggoEQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"escape-string-regexp\": \"^1.0.5\",\n@@ -38720,7 +38355,7 @@\n     \"node_modules/listr-update-renderer/node_modules/indent-string\": {\n       \"version\": \"3.2.0\",\n       \"resolved\": \"https://registry.npmjs.org/indent-string/-/indent-string-3.2.0.tgz\",\n-      \"integrity\": \"sha1-Sl/W0nzDMvN+VBmlBNu4NxBckok=\",\n+      \"integrity\": \"sha512-BYqTHXTGUIvg7t1r4sJNKcbDZkL92nkXA8YtRpbjFHRHGDL/NtUeiBJMeE60kIFN/Mg8ESaWQvftaYMGJzQZCQ==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=4\"\n@@ -38729,7 +38364,7 @@\n     \"node_modules/listr-update-renderer/node_modules/is-fullwidth-code-point\": {\n       \"version\": \"1.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz\",\n-      \"integrity\": \"sha1-754xOG8DGn8NZDr4L95QxFfvAMs=\",\n+      \"integrity\": \"sha512-1pqUqRjkhPJ9miNq9SwMfdvi6lBJcd6eFxvfaivQhaH3SgisfiuudvFntdKOmxuee/77l+FPjKrQjWvmPjWrRw==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"number-is-nan\": \"^1.0.0\"\n@@ -38741,7 +38376,7 @@\n     \"node_modules/listr-update-renderer/node_modules/log-symbols\": {\n       \"version\": \"1.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/log-symbols/-/log-symbols-1.0.2.tgz\",\n-      \"integrity\": \"sha1-N2/3tY6jCGoPCfrMdGF+ylAeGhg=\",\n+      \"integrity\": \"sha512-mmPrW0Fh2fxOzdBbFv4g1m6pR72haFLPJ2G5SJEELf1y+iaQrDG6cWCPjy54RHYbZAt7X+ls690Kw62AdWXBzQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"chalk\": \"^1.0.0\"\n@@ -38753,7 +38388,7 @@\n     \"node_modules/listr-update-renderer/node_modules/log-update\": {\n       \"version\": \"2.3.0\",\n       \"resolved\": \"https://registry.npmjs.org/log-update/-/log-update-2.3.0.tgz\",\n-      \"integrity\": \"sha1-iDKP19HOeTiykoN0bwsbwSayRwg=\",\n+      \"integrity\": \"sha512-vlP11XfFGyeNQlmEn9tJ66rEW1coA/79m5z6BCkudjbAGE83uhAcGYrBFwfs3AdLiLzGRusRPAbSPK9xZteCmg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"ansi-escapes\": \"^3.0.0\",\n@@ -38776,7 +38411,7 @@\n     \"node_modules/listr-update-renderer/node_modules/onetime\": {\n       \"version\": \"2.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz\",\n-      \"integrity\": \"sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=\",\n+      \"integrity\": \"sha512-oyyPpiMaKARvvcgip+JV+7zci5L8D1W9RZIz2l1o08AM3pfspitVWnPt3mzHcBPp12oYMTy0pqrFs/C+m3EwsQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"mimic-fn\": \"^1.0.0\"\n@@ -38788,7 +38423,7 @@\n     \"node_modules/listr-update-renderer/node_modules/restore-cursor\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz\",\n-      \"integrity\": \"sha1-n37ih/gv0ybU/RYpI9YhKe7g368=\",\n+      \"integrity\": \"sha512-6IzJLuGi4+R14vwagDHX+JrXmPVtPpn4mffDJ1UdR7/Edm87fl6yi8mMBIVvFtJaNTUvjughmW4hwLhRG7gC1Q==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"onetime\": \"^2.0.0\",\n@@ -38801,7 +38436,7 @@\n     \"node_modules/listr-update-renderer/node_modules/slice-ansi\": {\n       \"version\": \"0.0.4\",\n       \"resolved\": \"https://registry.npmjs.org/slice-ansi/-/slice-ansi-0.0.4.tgz\",\n-      \"integrity\": \"sha1-7b+JA/ZvfOL46v1s7tZeJkyDGzU=\",\n+      \"integrity\": \"sha512-up04hB2hR92PgjpyU3y/eg91yIBILyjVY26NvvciY3EVVPjybkMszMpXQ9QAkcS3I5rtJBDLoTxxg+qvW8c7rw==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=0.10.0\"\n@@ -38810,7 +38445,7 @@\n     \"node_modules/listr-update-renderer/node_modules/string-width\": {\n       \"version\": \"1.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz\",\n-      \"integrity\": \"sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=\",\n+      \"integrity\": \"sha512-0XsVpQLnVCXHJfyEs8tC0zpTVIr5PKKsQtkT29IwupnPTjtPmQ3xT/4yCREF9hYkV/3M3kzcUTSAZT6a6h81tw==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"code-point-at\": \"^1.0.0\",\n@@ -38824,7 +38459,7 @@\n     \"node_modules/listr-update-renderer/node_modules/supports-color\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",\n-      \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",\n+      \"integrity\": \"sha512-KKNVtd6pCYgPIKU4cp2733HWYCpplQhddZLBUryaAHou723x+FRzQ5Df824Fj+IyyuiQTRoub4SnIFfIcrp70g==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=0.8.0\"\n@@ -38833,7 +38468,7 @@\n     \"node_modules/listr-update-renderer/node_modules/wrap-ansi\": {\n       \"version\": \"3.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-3.0.1.tgz\",\n-      \"integrity\": \"sha1-KIoE2H7aXChuBg3+jxNc6NAH+Lo=\",\n+      \"integrity\": \"sha512-iXR3tDXpbnTpzjKSylUJRkLuOrEC7hwEB221cgn6wtF8wpmz28puFXAEfPT5zrjM3wahygB//VuWEr1vTkDcNQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"string-width\": \"^2.1.1\",\n@@ -38846,7 +38481,7 @@\n     \"node_modules/listr-update-renderer/node_modules/wrap-ansi/node_modules/is-fullwidth-code-point\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz\",\n-      \"integrity\": \"sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=\",\n+      \"integrity\": \"sha512-VHskAKYM8RfSFXwee5t5cbN5PZeq1Wrh6qd5bkyiXIf6UQcN6w/A0eXM9r6t8d+GYOh+o6ZhiEnb88LN/Y8m2w==\",\n       \"dev\": true,\n       \"engines\": {\n         \"node\": \">=4\"\n@@ -38868,7 +38503,7 @@\n     \"node_modules/listr-update-renderer/node_modules/wrap-ansi/node_modules/strip-ansi\": {\n       \"version\": \"4.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz\",\n-      \"integrity\": \"sha1-qEeQIusaw2iocTibY1JixQXuNo8=\",\n+      \"integrity\": \"sha512-4XaJ2zQdCzROZDivEVIDPkcQn8LMFSa8kj8Gxb/Lnwzv9A8VctNZ+lfivC/sV3ivW8ElJTERXZoPBRrZKkNKow==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"ansi-regex\": \"^3.0.0\"\n@@ -38921,7 +38556,7 @@\n     \"node_modules/listr-verbose-renderer/node_modules/cli-cursor\": {\n       \"version\": \"2.1.0\",\n       \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz\",\n-      \"integrity\": \"sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=\",\n+      \"integrity\": \"sha512-8lgKz8LmCRYZZQDpRyT2m5rKJ08TnU4tR9FFFW2rxpxR1FzWi4PQ/NfyODchAatHaUgnSPVcx/R5w6NuTBzFiw==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"restore-cursor\": \"^2.0.0\"\n@@ -38939,7 +38574,7 @@\n     \"node_modules/listr-verbose-renderer/node_modules/figures\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/figures/-/figures-2.0.0.tgz\",\n-      \"integrity\": \"sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=\",\n+      \"integrity\": \"sha512-Oa2M9atig69ZkfwiApY8F2Yy+tzMbazyvqv21R0NsSC8floSOC09BbT1ITWAdoMGQvJ/aZnR1KMwdx9tvHnTNA==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"escape-string-regexp\": \"^1.0.5\"\n@@ -38960,7 +38595,7 @@\n     \"node_modules/listr-verbose-renderer/node_modules/onetime\": {\n       \"version\": \"2.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz\",\n-      \"integrity\": \"sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=\",\n+      \"integrity\": \"sha512-oyyPpiMaKARvvcgip+JV+7zci5L8D1W9RZIz2l1o08AM3pfspitVWnPt3mzHcBPp12oYMTy0pqrFs/C+m3EwsQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"mimic-fn\": \"^1.0.0\"\n@@ -38972,7 +38607,7 @@\n     \"node_modules/listr-verbose-renderer/node_modules/restore-cursor\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz\",\n-      \"integrity\": \"sha1-n37ih/gv0ybU/RYpI9YhKe7g368=\",\n+      \"integrity\": \"sha512-6IzJLuGi4+R14vwagDHX+JrXmPVtPpn4mffDJ1UdR7/Edm87fl6yi8mMBIVvFtJaNTUvjughmW4hwLhRG7gC1Q==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"onetime\": \"^2.0.0\",\n@@ -41076,13 +40711,13 @@\n     \"node_modules/no-proxy/node_modules/wildcard\": {\n       \"version\": \"1.1.2\",\n       \"resolved\": \"https://registry.npmjs.org/wildcard/-/wildcard-1.1.2.tgz\",\n-      \"integrity\": \"sha1-pwIEUwhNjNLv5wup02liY94XEKU=\",\n+      \"integrity\": \"sha512-DXukZJxpHA8LuotRwL0pP1+rS6CS7FF2qStDDE1C7DDg2rLud2PXRMuEDYIPhgEezwnlHNL4c+N6MfMTjCGTng==\",\n       \"dev\": true\n     },\n     \"node_modules/node-ask\": {\n       \"version\": \"1.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/node-ask/-/node-ask-1.0.1.tgz\",\n-      \"integrity\": \"sha1-yqoQdsxY4DZCZ6CQPj6t+sFYOWs=\",\n+      \"integrity\": \"sha512-+0eqgEdgPiixrNysGDTPo3T2qyEHGVgs4ONlc5tTfcluvC/Rgq1x2ELdANUMwhR2CYLwaQnMS32O/h7adasnFQ==\",\n       \"dev\": true\n     },\n     \"node_modules/node-dir\": {\n@@ -42404,7 +42039,7 @@\n     \"node_modules/openurl\": {\n       \"version\": \"1.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/openurl/-/openurl-1.1.1.tgz\",\n-      \"integrity\": \"sha1-OHW0sO96UsFW8NtB1GCduw+Us4c=\",\n+      \"integrity\": \"sha512-d/gTkTb1i1GKz5k3XE3XFV/PxQ1k45zDqGP2OA7YhgsaLoqm6qRvARAZOFer1fcXritWlGBRCu/UgeS4HAnXAA==\",\n       \"dev\": true\n     },\n     \"node_modules/optimist\": {\n@@ -43966,7 +43601,7 @@\n     \"node_modules/progress-stream\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/progress-stream/-/progress-stream-2.0.0.tgz\",\n-      \"integrity\": \"sha1-+sY6Cz0R3qy7CWmrzJOyFLzhntU=\",\n+      \"integrity\": \"sha512-xJwOWR46jcXUq6EH9yYyqp+I52skPySOeHfkxOZ2IY1AiBi/sFJhbhAKHoV3OTw/omQ45KTio9215dRJ2Yxd3Q==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"speedometer\": \"~1.0.0\",\n@@ -49118,7 +48753,7 @@\n     \"node_modules/speedometer\": {\n       \"version\": \"1.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/speedometer/-/speedometer-1.0.0.tgz\",\n-      \"integrity\": \"sha1-zWccsGdSwivKM3Di8zREC+T8YuI=\",\n+      \"integrity\": \"sha512-lgxErLl/7A5+vgIIXsh9MbeukOaCb2axgQ+bKCdIE+ibNT4XNYGNCR1qFEGq6F+YDASXK3Fh/c5FgtZchFolxw==\",\n       \"dev\": true\n     },\n     \"node_modules/split\": {\n@@ -56163,6 +55798,15 @@\n         \"react\": \"^16.3.1\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/ansi-regex\": {\n+      \"version\": \"5.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n+      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/ansi-styles\": {\n       \"version\": \"3.2.1\",\n       \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n@@ -56187,6 +55831,84 @@\n         \"node\": \">=8\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/chromatic\": {\n+      \"version\": \"5.10.2\",\n+      \"resolved\": \"https://registry.npmjs.org/chromatic/-/chromatic-5.10.2.tgz\",\n+      \"integrity\": \"sha512-JHFtZ16VanQX0X9qjacIJOrH9rVUJACilPs8dBwwQgJTZzgCZAdwgmE+WwLcxe/LuK7vM56BDTHbxC+XcnTsjw==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"@actions/core\": \"^1.5.0\",\n+        \"@actions/github\": \"^5.0.0\",\n+        \"@babel/preset-typescript\": \"^7.15.0\",\n+        \"@babel/runtime\": \"^7.15.3\",\n+        \"@chromaui/localtunnel\": \"^2.0.3\",\n+        \"async-retry\": \"^1.3.3\",\n+        \"chalk\": \"^4.1.2\",\n+        \"cross-spawn\": \"^7.0.2\",\n+        \"debug\": \"^4.3.2\",\n+        \"dotenv\": \"^8.2.0\",\n+        \"env-ci\": \"^5.0.2\",\n+        \"esm\": \"^3.2.25\",\n+        \"execa\": \"^5.0.0\",\n+        \"fake-tag\": \"^2.0.0\",\n+        \"fs-extra\": \"^10.0.0\",\n+        \"https-proxy-agent\": \"^5.0.0\",\n+        \"jsonfile\": \"^6.0.1\",\n+        \"junit-report-builder\": \"2.1.0\",\n+        \"listr\": \"0.14.3\",\n+        \"meow\": \"^8.0.0\",\n+        \"no-proxy\": \"^1.0.3\",\n+        \"node-ask\": \"^1.0.1\",\n+        \"node-fetch\": \"2.6.0\",\n+        \"node-loggly-bulk\": \"^2.2.4\",\n+        \"p-limit\": \"3.1.0\",\n+        \"picomatch\": \"2.2.2\",\n+        \"pkg-up\": \"^3.1.0\",\n+        \"pluralize\": \"^8.0.0\",\n+        \"progress-stream\": \"^2.0.0\",\n+        \"semver\": \"^7.3.5\",\n+        \"slash\": \"^3.0.0\",\n+        \"string-argv\": \"^0.3.1\",\n+        \"strip-ansi\": \"6.0.0\",\n+        \"tmp-promise\": \"3.0.2\",\n+        \"tree-kill\": \"^1.2.2\",\n+        \"ts-dedent\": \"^1.0.0\",\n+        \"util-deprecate\": \"^1.0.2\",\n+        \"uuid\": \"^8.3.2\",\n+        \"yarn-or-npm\": \"^3.0.1\"\n+      },\n+      \"bin\": {\n+        \"chroma\": \"bin/register.js\",\n+        \"chromatic\": \"bin/register.js\",\n+        \"chromatic-cli\": \"bin/register.js\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/chromatic/node_modules/fs-extra\": {\n+      \"version\": \"10.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-10.1.0.tgz\",\n+      \"integrity\": \"sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"graceful-fs\": \"^4.2.0\",\n+        \"jsonfile\": \"^6.0.1\",\n+        \"universalify\": \"^2.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=12\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/chromatic/node_modules/picomatch\": {\n+      \"version\": \"2.2.2\",\n+      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.2.2.tgz\",\n+      \"integrity\": \"sha512-q0M/9eZHzmr0AulXyPwNfZjtwZ/RBZlbN3K3CErVrk50T2ASYI7Bye0EvekFY3IP1Nt2DHu0re+V2ZHIpMkuWg==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=8.6\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/core-js\": {\n       \"version\": \"3.8.3\",\n       \"resolved\": \"https://registry.npmjs.org/core-js/-/core-js-3.8.3.tgz\",\n@@ -56213,6 +55935,20 @@\n         \"node\": \">=8\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/cross-spawn\": {\n+      \"version\": \"7.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n+      \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"path-key\": \"^3.1.0\",\n+        \"shebang-command\": \"^2.0.0\",\n+        \"which\": \"^2.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/d3-array\": {\n       \"version\": \"2.12.1\",\n       \"resolved\": \"https://registry.npmjs.org/d3-array/-/d3-array-2.12.1.tgz\",\n@@ -56244,6 +55980,23 @@\n         \"d3-array\": \"2\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/debug\": {\n+      \"version\": \"4.3.4\",\n+      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n+      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"ms\": \"2.1.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6.0\"\n+      },\n+      \"peerDependenciesMeta\": {\n+        \"supports-color\": {\n+          \"optional\": true\n+        }\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/deepmerge\": {\n       \"version\": \"4.2.2\",\n       \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.2.2.tgz\",\n@@ -56253,6 +56006,29 @@\n         \"node\": \">=0.10.0\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/execa\": {\n+      \"version\": \"5.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-5.1.1.tgz\",\n+      \"integrity\": \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"cross-spawn\": \"^7.0.3\",\n+        \"get-stream\": \"^6.0.0\",\n+        \"human-signals\": \"^2.1.0\",\n+        \"is-stream\": \"^2.0.0\",\n+        \"merge-stream\": \"^2.0.0\",\n+        \"npm-run-path\": \"^4.0.1\",\n+        \"onetime\": \"^5.1.2\",\n+        \"signal-exit\": \"^3.0.3\",\n+        \"strip-final-newline\": \"^2.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/fill-range\": {\n       \"version\": \"7.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\n@@ -56265,6 +56041,18 @@\n         \"node\": \">=8\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/find-up\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz\",\n+      \"integrity\": \"sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"locate-path\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/fork-ts-checker-webpack-plugin\": {\n       \"version\": \"5.2.1\",\n       \"resolved\": \"https://registry.npmjs.org/fork-ts-checker-webpack-plugin/-/fork-ts-checker-webpack-plugin-5.2.1.tgz\",\n@@ -56303,6 +56091,27 @@\n         \"node\": \">=10\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/get-stream\": {\n+      \"version\": \"6.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n+      \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/human-signals\": {\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz\",\n+      \"integrity\": \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=10.17.0\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/is-number\": {\n       \"version\": \"7.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n@@ -56312,6 +56121,31 @@\n         \"node\": \">=0.12.0\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/is-stream\": {\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n+      \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/locate-path\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz\",\n+      \"integrity\": \"sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"p-locate\": \"^3.0.0\",\n+        \"path-exists\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/lru-cache\": {\n       \"version\": \"6.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n@@ -56337,6 +56171,12 @@\n         \"node\": \">=8.6\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/ms\": {\n+      \"version\": \"2.1.2\",\n+      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n+      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n+      \"dev\": true\n+    },\n     \"packages/superset-ui-demo/node_modules/mustache\": {\n       \"version\": \"4.2.0\",\n       \"resolved\": \"https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz\",\n@@ -56346,6 +56186,78 @@\n         \"mustache\": \"bin/mustache\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/node-fetch\": {\n+      \"version\": \"2.6.0\",\n+      \"resolved\": \"https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.0.tgz\",\n+      \"integrity\": \"sha512-8dG4H5ujfvFiqDmVu9fQ5bOHUC15JMjMY/Zumv26oOvvVJjM67KF8koCWIabKQ1GJIa9r2mMZscBq/TbdOcmNA==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \"4.x || >=6.0.0\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/npm-run-path\": {\n+      \"version\": \"4.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\",\n+      \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"path-key\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/p-limit\": {\n+      \"version\": \"3.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n+      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"yocto-queue\": \"^0.1.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/p-locate\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz\",\n+      \"integrity\": \"sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"p-limit\": \"^2.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/p-locate/node_modules/p-limit\": {\n+      \"version\": \"2.3.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n+      \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"p-try\": \"^2.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https://github.com/sponsors/sindresorhus\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/p-try\": {\n+      \"version\": \"2.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n+      \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/parse-json\": {\n       \"version\": \"5.2.0\",\n       \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz\",\n@@ -56364,6 +56276,15 @@\n         \"url\": \"https://github.com/sponsors/sindresorhus\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/path-key\": {\n+      \"version\": \"3.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n+      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/path-type\": {\n       \"version\": \"4.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n@@ -56373,6 +56294,18 @@\n         \"node\": \">=8\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/pkg-up\": {\n+      \"version\": \"3.1.0\",\n+      \"resolved\": \"https://registry.npmjs.org/pkg-up/-/pkg-up-3.1.0.tgz\",\n+      \"integrity\": \"sha512-nDywThFk1i4BQK4twPQ6TA4RT8bDY96yeuCVBWL3ePARCiEKDRSrNGbFIgUJpLp+XeIR65v8ra7WuJOFUBtkMA==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"find-up\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/schema-utils\": {\n       \"version\": \"2.7.0\",\n       \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-2.7.0.tgz\",\n@@ -56406,6 +56339,48 @@\n         \"node\": \">=10\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/shebang-command\": {\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n+      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"shebang-regex\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/shebang-regex\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n+      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/slash\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n+      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/strip-ansi\": {\n+      \"version\": \"6.0.0\",\n+      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz\",\n+      \"integrity\": \"sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^5.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/supports-color\": {\n       \"version\": \"5.5.0\",\n       \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n@@ -56430,6 +56405,15 @@\n         \"node\": \">=8.0\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/ts-dedent\": {\n+      \"version\": \"1.2.0\",\n+      \"resolved\": \"https://registry.npmjs.org/ts-dedent/-/ts-dedent-1.2.0.tgz\",\n+      \"integrity\": \"sha512-6zSJp23uQI+Txyz5LlXMXAHpUhY4Hi0oluXny0OgIR7g/Cromq4vDBnhtbBdyIV34g0pgwxUvnvg+jLJe4c1NA==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=6.10\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/ts-loader\": {\n       \"version\": \"7.0.5\",\n       \"resolved\": \"https://registry.npmjs.org/ts-loader/-/ts-loader-7.0.5.tgz\",\n@@ -56472,6 +56456,30 @@\n         \"semver\": \"bin/semver.js\"\n       }\n     },\n+    \"packages/superset-ui-demo/node_modules/uuid\": {\n+      \"version\": \"8.3.2\",\n+      \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\",\n+      \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\",\n+      \"dev\": true,\n+      \"bin\": {\n+        \"uuid\": \"dist/bin/uuid\"\n+      }\n+    },\n+    \"packages/superset-ui-demo/node_modules/which\": {\n+      \"version\": \"2.0.2\",\n+      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n+      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"isexe\": \"^2.0.0\"\n+      },\n+      \"bin\": {\n+        \"node-which\": \"bin/node-which\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 8\"\n+      }\n+    },\n     \"packages/superset-ui-demo/node_modules/yallist\": {\n       \"version\": \"4.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n@@ -57305,33 +57313,42 @@\n   },\n   \"dependencies\": {\n     \"@actions/core\": {\n-      \"version\": \"1.6.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@actions/core/-/core-1.6.0.tgz\",\n-      \"integrity\": \"sha512-NB1UAZomZlCV/LmJqkLhNTqtKfFXJZAUPcfl/zqG7EfsQdeUJtaWO98SGbuQ3pydJ3fHl2CvI/51OKYlCYYcaw==\",\n+      \"version\": \"1.9.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@actions/core/-/core-1.9.1.tgz\",\n+      \"integrity\": \"sha512-5ad+U2YGrmmiw6du20AQW5XuWo7UKN2052FjSV7MX+Wfjf8sCqcsZe62NfgHys4QI4/Y+vQvLKYL8jWtA1ZBTA==\",\n       \"dev\": true,\n       \"requires\": {\n-        \"@actions/http-client\": \"^1.0.11\"\n+        \"@actions/http-client\": \"^2.0.1\",\n+        \"uuid\": \"^8.3.2\"\n+      },\n+      \"dependencies\": {\n+        \"uuid\": {\n+          \"version\": \"8.3.2\",\n+          \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\",\n+          \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\",\n+          \"dev\": true\n+        }\n       }\n     },\n     \"@actions/github\": {\n-      \"version\": \"5.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@actions/github/-/github-5.0.0.tgz\",\n-      \"integrity\": \"sha512-QvE9eAAfEsS+yOOk0cylLBIO/d6WyWIOvsxxzdrPFaud39G6BOkUwScXZn1iBzQzHyu9SBkkLSWlohDWdsasAQ==\",\n+      \"version\": \"5.0.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@actions/github/-/github-5.0.3.tgz\",\n+      \"integrity\": \"sha512-myjA/pdLQfhUGLtRZC/J4L1RXOG4o6aYdiEq+zr5wVVKljzbFld+xv10k1FX6IkIJtNxbAq44BdwSNpQ015P0A==\",\n       \"dev\": true,\n       \"requires\": {\n-        \"@actions/http-client\": \"^1.0.11\",\n-        \"@octokit/core\": \"^3.4.0\",\n-        \"@octokit/plugin-paginate-rest\": \"^2.13.3\",\n-        \"@octokit/plugin-rest-endpoint-methods\": \"^5.1.1\"\n+        \"@actions/http-client\": \"^2.0.1\",\n+        \"@octokit/core\": \"^3.6.0\",\n+        \"@octokit/plugin-paginate-rest\": \"^2.17.0\",\n+        \"@octokit/plugin-rest-endpoint-methods\": \"^5.13.0\"\n       }\n     },\n     \"@actions/http-client\": {\n-      \"version\": \"1.0.11\",\n-      \"resolved\": \"https://registry.npmjs.org/@actions/http-client/-/http-client-1.0.11.tgz\",\n-      \"integrity\": \"sha512-VRYHGQV1rqnROJqdMvGUbY/Kn8vriQe/F9HR2AlYHzmKuM/p3kjNuXhmdBfcVgsvRWTz5C5XW5xvndZrVBuAYg==\",\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https://registry.npmjs.org/@actions/http-client/-/http-client-2.0.1.tgz\",\n+      \"integrity\": \"sha512-PIXiMVtz6VvyaRsGY268qvj57hXQEpsYogYOu2nrQhlf+XCGmZstmuZBbAybUl1nQGnvS1k1eEsQ69ZoD7xlSw==\",\n       \"dev\": true,\n       \"requires\": {\n-        \"tunnel\": \"0.0.6\"\n+        \"tunnel\": \"^0.0.6\"\n       }\n     },\n     \"@ampproject/remapping\": {\n@@ -60850,9 +60867,9 @@\n       }\n     },\n     \"@discoveryjs/json-ext\": {\n-      \"version\": \"0.5.3\",\n-      \"resolved\": \"https://registry.npmjs.org/@discoveryjs/json-ext/-/json-ext-0.5.3.tgz\",\n-      \"integrity\": \"sha512-Fxt+AfXgjMoin2maPIYzFZnQjAXjAL0PHscM5pRTtatFqB+vZxAM9tLp2Optnuw3QOQC40jTNeGYFOMvyf7v9g==\"\n+      \"version\": \"0.5.7\",\n+      \"resolved\": \"https://registry.npmjs.org/@discoveryjs/json-ext/-/json-ext-0.5.7.tgz\",\n+      \"integrity\": \"sha512-dBVuXR082gk3jsFp7Rd/JI4kytwGHecnCoTtXFb7DB6CNHp4rg5k1bhg0nWdLGLnOV71lmDzGQaLMy8iPLY0pw==\"\n     },\n     \"@emotion/babel-plugin\": {\n       \"version\": \"11.3.0\",\n@@ -65590,14 +65607,14 @@\n       }\n     },\n     \"@octokit/core\": {\n-      \"version\": \"3.5.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@octokit/core/-/core-3.5.1.tgz\",\n-      \"integrity\": \"sha512-omncwpLVxMP+GLpLPgeGJBF6IWJFjXDS5flY5VbppePYX9XehevbDykRH9PdCdvqt9TS5AOTiDide7h0qrkHjw==\",\n+      \"version\": \"3.6.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@octokit/core/-/core-3.6.0.tgz\",\n+      \"integrity\": \"sha512-7RKRKuA4xTjMhY+eG3jthb3hlZCsOwg3rztWh75Xc+ShDWOfDDATWbeZpAHBNRpm4Tv9WgBMOy1zEJYXG6NJ7Q==\",\n       \"dev\": true,\n       \"requires\": {\n         \"@octokit/auth-token\": \"^2.4.4\",\n         \"@octokit/graphql\": \"^4.5.8\",\n-        \"@octokit/request\": \"^5.6.0\",\n+        \"@octokit/request\": \"^5.6.3\",\n         \"@octokit/request-error\": \"^2.0.5\",\n         \"@octokit/types\": \"^6.0.3\",\n         \"before-after-hook\": \"^2.2.0\",\n@@ -65706,16 +65723,16 @@\n       }\n     },\n     \"@octokit/request\": {\n-      \"version\": \"5.6.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@octokit/request/-/request-5.6.2.tgz\",\n-      \"integrity\": \"sha512-je66CvSEVf0jCpRISxkUcCa0UkxmFs6eGDRSbfJtAVwbLH5ceqF+YEyC8lj8ystKyZTy8adWr0qmkY52EfOeLA==\",\n+      \"version\": \"5.6.3\",\n+      \"resolved\": \"https://registry.npmjs.org/@octokit/request/-/request-5.6.3.tgz\",\n+      \"integrity\": \"sha512-bFJl0I1KVc9jYTe9tdGGpAMPy32dLBXXo1dS/YwSCTL/2nd9XeHsY616RE3HPXDVk+a+dBuzyz5YdlXwcDTr2A==\",\n       \"dev\": true,\n       \"requires\": {\n         \"@octokit/endpoint\": \"^6.0.1\",\n         \"@octokit/request-error\": \"^2.1.0\",\n         \"@octokit/types\": \"^6.16.1\",\n         \"is-plain-object\": \"^5.0.0\",\n-        \"node-fetch\": \"^2.6.1\",\n+        \"node-fetch\": \"^2.6.7\",\n         \"universal-user-agent\": \"^6.0.0\"\n       },\n       \"dependencies\": {\n@@ -70150,6 +70167,12 @@\n             \"reactable-arc\": \"^0.15.0\"\n           }\n         },\n+        \"ansi-regex\": {\n+          \"version\": \"5.0.1\",\n+          \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n+          \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n+          \"dev\": true\n+        },\n         \"ansi-styles\": {\n           \"version\": \"3.2.1\",\n           \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\",\n@@ -70168,6 +70191,72 @@\n             \"fill-range\": \"^7.0.1\"\n           }\n         },\n+        \"chromatic\": {\n+          \"version\": \"5.10.2\",\n+          \"resolved\": \"https://registry.npmjs.org/chromatic/-/chromatic-5.10.2.tgz\",\n+          \"integrity\": \"sha512-JHFtZ16VanQX0X9qjacIJOrH9rVUJACilPs8dBwwQgJTZzgCZAdwgmE+WwLcxe/LuK7vM56BDTHbxC+XcnTsjw==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"@actions/core\": \"^1.5.0\",\n+            \"@actions/github\": \"^5.0.0\",\n+            \"@babel/preset-typescript\": \"^7.15.0\",\n+            \"@babel/runtime\": \"^7.15.3\",\n+            \"@chromaui/localtunnel\": \"^2.0.3\",\n+            \"async-retry\": \"^1.3.3\",\n+            \"chalk\": \"^4.1.2\",\n+            \"cross-spawn\": \"^7.0.2\",\n+            \"debug\": \"^4.3.2\",\n+            \"dotenv\": \"^8.2.0\",\n+            \"env-ci\": \"^5.0.2\",\n+            \"esm\": \"^3.2.25\",\n+            \"execa\": \"^5.0.0\",\n+            \"fake-tag\": \"^2.0.0\",\n+            \"fs-extra\": \"^10.0.0\",\n+            \"https-proxy-agent\": \"^5.0.0\",\n+            \"jsonfile\": \"^6.0.1\",\n+            \"junit-report-builder\": \"2.1.0\",\n+            \"listr\": \"0.14.3\",\n+            \"meow\": \"^8.0.0\",\n+            \"no-proxy\": \"^1.0.3\",\n+            \"node-ask\": \"^1.0.1\",\n+            \"node-fetch\": \"2.6.0\",\n+            \"node-loggly-bulk\": \"^2.2.4\",\n+            \"p-limit\": \"3.1.0\",\n+            \"picomatch\": \"2.2.2\",\n+            \"pkg-up\": \"^3.1.0\",\n+            \"pluralize\": \"^8.0.0\",\n+            \"progress-stream\": \"^2.0.0\",\n+            \"semver\": \"^7.3.5\",\n+            \"slash\": \"^3.0.0\",\n+            \"string-argv\": \"^0.3.1\",\n+            \"strip-ansi\": \"6.0.0\",\n+            \"tmp-promise\": \"3.0.2\",\n+            \"tree-kill\": \"^1.2.2\",\n+            \"ts-dedent\": \"^1.0.0\",\n+            \"util-deprecate\": \"^1.0.2\",\n+            \"uuid\": \"^8.3.2\",\n+            \"yarn-or-npm\": \"^3.0.1\"\n+          },\n+          \"dependencies\": {\n+            \"fs-extra\": {\n+              \"version\": \"10.1.0\",\n+              \"resolved\": \"https://registry.npmjs.org/fs-extra/-/fs-extra-10.1.0.tgz\",\n+              \"integrity\": \"sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==\",\n+              \"dev\": true,\n+              \"requires\": {\n+                \"graceful-fs\": \"^4.2.0\",\n+                \"jsonfile\": \"^6.0.1\",\n+                \"universalify\": \"^2.0.0\"\n+              }\n+            },\n+            \"picomatch\": {\n+              \"version\": \"2.2.2\",\n+              \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.2.2.tgz\",\n+              \"integrity\": \"sha512-q0M/9eZHzmr0AulXyPwNfZjtwZ/RBZlbN3K3CErVrk50T2ASYI7Bye0EvekFY3IP1Nt2DHu0re+V2ZHIpMkuWg==\",\n+              \"dev\": true\n+            }\n+          }\n+        },\n         \"core-js\": {\n           \"version\": \"3.8.3\",\n           \"resolved\": \"https://registry.npmjs.org/core-js/-/core-js-3.8.3.tgz\",\n@@ -70186,6 +70275,17 @@\n             \"yaml\": \"^1.7.2\"\n           }\n         },\n+        \"cross-spawn\": {\n+          \"version\": \"7.0.3\",\n+          \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n+          \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"path-key\": \"^3.1.0\",\n+            \"shebang-command\": \"^2.0.0\",\n+            \"which\": \"^2.0.1\"\n+          }\n+        },\n         \"d3-array\": {\n           \"version\": \"2.12.1\",\n           \"resolved\": \"https://registry.npmjs.org/d3-array/-/d3-array-2.12.1.tgz\",\n@@ -70217,12 +70317,38 @@\n             \"d3-array\": \"2\"\n           }\n         },\n+        \"debug\": {\n+          \"version\": \"4.3.4\",\n+          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n+          \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"ms\": \"2.1.2\"\n+          }\n+        },\n         \"deepmerge\": {\n           \"version\": \"4.2.2\",\n           \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.2.2.tgz\",\n           \"integrity\": \"sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj/6WqMiFQJpBBYz1Pt+66bZpP3Q7Lye0Oo9MPKEdg==\",\n           \"dev\": true\n         },\n+        \"execa\": {\n+          \"version\": \"5.1.1\",\n+          \"resolved\": \"https://registry.npmjs.org/execa/-/execa-5.1.1.tgz\",\n+          \"integrity\": \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"cross-spawn\": \"^7.0.3\",\n+            \"get-stream\": \"^6.0.0\",\n+            \"human-signals\": \"^2.1.0\",\n+            \"is-stream\": \"^2.0.0\",\n+            \"merge-stream\": \"^2.0.0\",\n+            \"npm-run-path\": \"^4.0.1\",\n+            \"onetime\": \"^5.1.2\",\n+            \"signal-exit\": \"^3.0.3\",\n+            \"strip-final-newline\": \"^2.0.0\"\n+          }\n+        },\n         \"fill-range\": {\n           \"version\": \"7.0.1\",\n           \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\n@@ -70232,6 +70358,15 @@\n             \"to-regex-range\": \"^5.0.1\"\n           }\n         },\n+        \"find-up\": {\n+          \"version\": \"3.0.0\",\n+          \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz\",\n+          \"integrity\": \"sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"locate-path\": \"^3.0.0\"\n+          }\n+        },\n         \"fork-ts-checker-webpack-plugin\": {\n           \"version\": \"5.2.1\",\n           \"resolved\": \"https://registry.npmjs.org/fork-ts-checker-webpack-plugin/-/fork-ts-checker-webpack-plugin-5.2.1.tgz\",\n@@ -70263,12 +70398,40 @@\n             \"universalify\": \"^2.0.0\"\n           }\n         },\n+        \"get-stream\": {\n+          \"version\": \"6.0.1\",\n+          \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n+          \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n+          \"dev\": true\n+        },\n+        \"human-signals\": {\n+          \"version\": \"2.1.0\",\n+          \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz\",\n+          \"integrity\": \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\",\n+          \"dev\": true\n+        },\n         \"is-number\": {\n           \"version\": \"7.0.0\",\n           \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n           \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n           \"dev\": true\n         },\n+        \"is-stream\": {\n+          \"version\": \"2.0.1\",\n+          \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n+          \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n+          \"dev\": true\n+        },\n+        \"locate-path\": {\n+          \"version\": \"3.0.0\",\n+          \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz\",\n+          \"integrity\": \"sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"p-locate\": \"^3.0.0\",\n+            \"path-exists\": \"^3.0.0\"\n+          }\n+        },\n         \"lru-cache\": {\n           \"version\": \"6.0.0\",\n           \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n@@ -70288,12 +70451,68 @@\n             \"picomatch\": \"^2.2.3\"\n           }\n         },\n+        \"ms\": {\n+          \"version\": \"2.1.2\",\n+          \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n+          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n+          \"dev\": true\n+        },\n         \"mustache\": {\n           \"version\": \"4.2.0\",\n           \"resolved\": \"https://registry.npmjs.org/mustache/-/mustache-4.2.0.tgz\",\n           \"integrity\": \"sha512-71ippSywq5Yb7/tVYyGbkBggbU8H3u5Rz56fH60jGFgr8uHwxs+aSKeqmluIVzM0m0kB7xQjKS6qPfd0b2ZoqQ==\",\n           \"peer\": true\n         },\n+        \"node-fetch\": {\n+          \"version\": \"2.6.0\",\n+          \"resolved\": \"https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.0.tgz\",\n+          \"integrity\": \"sha512-8dG4H5ujfvFiqDmVu9fQ5bOHUC15JMjMY/Zumv26oOvvVJjM67KF8koCWIabKQ1GJIa9r2mMZscBq/TbdOcmNA==\",\n+          \"dev\": true\n+        },\n+        \"npm-run-path\": {\n+          \"version\": \"4.0.1\",\n+          \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\",\n+          \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"path-key\": \"^3.0.0\"\n+          }\n+        },\n+        \"p-limit\": {\n+          \"version\": \"3.1.0\",\n+          \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n+          \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"yocto-queue\": \"^0.1.0\"\n+          }\n+        },\n+        \"p-locate\": {\n+          \"version\": \"3.0.0\",\n+          \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz\",\n+          \"integrity\": \"sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"p-limit\": \"^2.0.0\"\n+          },\n+          \"dependencies\": {\n+            \"p-limit\": {\n+              \"version\": \"2.3.0\",\n+              \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n+              \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n+              \"dev\": true,\n+              \"requires\": {\n+                \"p-try\": \"^2.0.0\"\n+              }\n+            }\n+          }\n+        },\n+        \"p-try\": {\n+          \"version\": \"2.2.0\",\n+          \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n+          \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n+          \"dev\": true\n+        },\n         \"parse-json\": {\n           \"version\": \"5.2.0\",\n           \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz\",\n@@ -70306,12 +70525,27 @@\n             \"lines-and-columns\": \"^1.1.6\"\n           }\n         },\n+        \"path-key\": {\n+          \"version\": \"3.1.1\",\n+          \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n+          \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n+          \"dev\": true\n+        },\n         \"path-type\": {\n           \"version\": \"4.0.0\",\n           \"resolved\": \"https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz\",\n           \"integrity\": \"sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==\",\n           \"dev\": true\n         },\n+        \"pkg-up\": {\n+          \"version\": \"3.1.0\",\n+          \"resolved\": \"https://registry.npmjs.org/pkg-up/-/pkg-up-3.1.0.tgz\",\n+          \"integrity\": \"sha512-nDywThFk1i4BQK4twPQ6TA4RT8bDY96yeuCVBWL3ePARCiEKDRSrNGbFIgUJpLp+XeIR65v8ra7WuJOFUBtkMA==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"find-up\": \"^3.0.0\"\n+          }\n+        },\n         \"schema-utils\": {\n           \"version\": \"2.7.0\",\n           \"resolved\": \"https://registry.npmjs.org/schema-utils/-/schema-utils-2.7.0.tgz\",\n@@ -70332,6 +70566,36 @@\n             \"lru-cache\": \"^6.0.0\"\n           }\n         },\n+        \"shebang-command\": {\n+          \"version\": \"2.0.0\",\n+          \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n+          \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"shebang-regex\": \"^3.0.0\"\n+          }\n+        },\n+        \"shebang-regex\": {\n+          \"version\": \"3.0.0\",\n+          \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n+          \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n+          \"dev\": true\n+        },\n+        \"slash\": {\n+          \"version\": \"3.0.0\",\n+          \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n+          \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n+          \"dev\": true\n+        },\n+        \"strip-ansi\": {\n+          \"version\": \"6.0.0\",\n+          \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz\",\n+          \"integrity\": \"sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"ansi-regex\": \"^5.0.0\"\n+          }\n+        },\n         \"supports-color\": {\n           \"version\": \"5.5.0\",\n           \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\n@@ -70350,6 +70614,12 @@\n             \"is-number\": \"^7.0.0\"\n           }\n         },\n+        \"ts-dedent\": {\n+          \"version\": \"1.2.0\",\n+          \"resolved\": \"https://registry.npmjs.org/ts-dedent/-/ts-dedent-1.2.0.tgz\",\n+          \"integrity\": \"sha512-6zSJp23uQI+Txyz5LlXMXAHpUhY4Hi0oluXny0OgIR7g/Cromq4vDBnhtbBdyIV34g0pgwxUvnvg+jLJe4c1NA==\",\n+          \"dev\": true\n+        },\n         \"ts-loader\": {\n           \"version\": \"7.0.5\",\n           \"resolved\": \"https://registry.npmjs.org/ts-loader/-/ts-loader-7.0.5.tgz\",\n@@ -70382,6 +70652,21 @@\n             }\n           }\n         },\n+        \"uuid\": {\n+          \"version\": \"8.3.2\",\n+          \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\",\n+          \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\",\n+          \"dev\": true\n+        },\n+        \"which\": {\n+          \"version\": \"2.0.2\",\n+          \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n+          \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"isexe\": \"^2.0.0\"\n+          }\n+        },\n         \"yallist\": {\n           \"version\": \"4.0.0\",\n           \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n@@ -72031,9 +72316,9 @@\n       }\n     },\n     \"@types/webpack-env\": {\n-      \"version\": \"1.16.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/webpack-env/-/webpack-env-1.16.2.tgz\",\n-      \"integrity\": \"sha512-vKx7WNQNZDyJveYcHAm9ZxhqSGLYwoyLhrHjLBOkw3a7cT76sTdjgtwyijhk1MaHyRIuSztcVwrUOO/NEu68Dw==\"\n+      \"version\": \"1.18.0\",\n+      \"resolved\": \"https://registry.npmjs.org/@types/webpack-env/-/webpack-env-1.18.0.tgz\",\n+      \"integrity\": \"sha512-56/MAlX5WMsPVbOg7tAxnYvNYMMWr/QJiIp6BxVSW3JJXUVzzOn64qW8TzQyMSqSUFM2+PVI4aUHcHOzIz/1tg==\"\n     },\n     \"@types/webpack-sources\": {\n       \"version\": \"0.1.5\",\n@@ -75444,284 +75729,13 @@\n       \"integrity\": \"sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==\"\n     },\n     \"chromatic\": {\n-      \"version\": \"5.10.2\",\n-      \"resolved\": \"https://registry.npmjs.org/chromatic/-/chromatic-5.10.2.tgz\",\n-      \"integrity\": \"sha512-JHFtZ16VanQX0X9qjacIJOrH9rVUJACilPs8dBwwQgJTZzgCZAdwgmE+WwLcxe/LuK7vM56BDTHbxC+XcnTsjw==\",\n+      \"version\": \"6.7.4\",\n+      \"resolved\": \"https://registry.npmjs.org/chromatic/-/chromatic-6.7.4.tgz\",\n+      \"integrity\": \"sha512-QW4i8RQsON0JVnFnRf+8y70aIJptvC0Oi/26YJ669Dl03WmJRpobNO5qWFPTiv3KFKMc1Qf6/qFsRVZCtn+bfA==\",\n       \"dev\": true,\n       \"requires\": {\n-        \"@actions/core\": \"^1.5.0\",\n-        \"@actions/github\": \"^5.0.0\",\n-        \"@babel/preset-typescript\": \"^7.15.0\",\n-        \"@babel/runtime\": \"^7.15.3\",\n-        \"@chromaui/localtunnel\": \"^2.0.3\",\n-        \"async-retry\": \"^1.3.3\",\n-        \"chalk\": \"^4.1.2\",\n-        \"cross-spawn\": \"^7.0.2\",\n-        \"debug\": \"^4.3.2\",\n-        \"dotenv\": \"^8.2.0\",\n-        \"env-ci\": \"^5.0.2\",\n-        \"esm\": \"^3.2.25\",\n-        \"execa\": \"^5.0.0\",\n-        \"fake-tag\": \"^2.0.0\",\n-        \"fs-extra\": \"^10.0.0\",\n-        \"https-proxy-agent\": \"^5.0.0\",\n-        \"jsonfile\": \"^6.0.1\",\n-        \"junit-report-builder\": \"2.1.0\",\n-        \"listr\": \"0.14.3\",\n-        \"meow\": \"^8.0.0\",\n-        \"no-proxy\": \"^1.0.3\",\n-        \"node-ask\": \"^1.0.1\",\n-        \"node-fetch\": \"2.6.0\",\n-        \"node-loggly-bulk\": \"^2.2.4\",\n-        \"p-limit\": \"3.1.0\",\n-        \"picomatch\": \"2.2.2\",\n-        \"pkg-up\": \"^3.1.0\",\n-        \"pluralize\": \"^8.0.0\",\n-        \"progress-stream\": \"^2.0.0\",\n-        \"semver\": \"^7.3.5\",\n-        \"slash\": \"^3.0.0\",\n-        \"string-argv\": \"^0.3.1\",\n-        \"strip-ansi\": \"6.0.0\",\n-        \"tmp-promise\": \"3.0.2\",\n-        \"tree-kill\": \"^1.2.2\",\n-        \"ts-dedent\": \"^1.0.0\",\n-        \"util-deprecate\": \"^1.0.2\",\n-        \"uuid\": \"^8.3.2\",\n-        \"yarn-or-npm\": \"^3.0.1\"\n-      },\n-      \"dependencies\": {\n-        \"ansi-regex\": {\n-          \"version\": \"5.0.1\",\n-          \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n-          \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n-          \"dev\": true\n-        },\n-        \"cross-spawn\": {\n-          \"version\": \"7.0.3\",\n-          \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n-          \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"path-key\": \"^3.1.0\",\n-            \"shebang-command\": \"^2.0.0\",\n-            \"which\": \"^2.0.1\"\n-          }\n-        },\n-        \"debug\": {\n-          \"version\": \"4.3.2\",\n-          \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz\",\n-          \"integrity\": \"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"ms\": \"2.1.2\"\n-          }\n-        },\n-        \"execa\": {\n-          \"version\": \"5.1.1\",\n-          \"resolved\": \"https://registry.npmjs.org/execa/-/execa-5.1.1.tgz\",\n-          \"integrity\": \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"cross-spawn\": \"^7.0.3\",\n-            \"get-stream\": \"^6.0.0\",\n-            \"human-signals\": \"^2.1.0\",\n-            \"is-stream\": \"^2.0.0\",\n-            \"merge-stream\": \"^2.0.0\",\n-            \"npm-run-path\": \"^4.0.1\",\n-            \"onetime\": \"^5.1.2\",\n-            \"signal-exit\": \"^3.0.3\",\n-            \"strip-final-newline\": \"^2.0.0\"\n-          }\n-        },\n-        \"find-up\": {\n-          \"version\": \"3.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-3.0.0.tgz\",\n-          \"integrity\": \"sha512-1yD6RmLI1XBfxugvORwlck6f75tYL+iR0jqwsOrOxMZyGYqUuDhJ0l4AXdO1iX/FTs9cBAMEk1gWSEx1kSbylg==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"locate-path\": \"^3.0.0\"\n-          }\n-        },\n-        \"get-stream\": {\n-          \"version\": \"6.0.1\",\n-          \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n-          \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n-          \"dev\": true\n-        },\n-        \"human-signals\": {\n-          \"version\": \"2.1.0\",\n-          \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz\",\n-          \"integrity\": \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\",\n-          \"dev\": true\n-        },\n-        \"is-stream\": {\n-          \"version\": \"2.0.1\",\n-          \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n-          \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n-          \"dev\": true\n-        },\n-        \"locate-path\": {\n-          \"version\": \"3.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-3.0.0.tgz\",\n-          \"integrity\": \"sha512-7AO748wWnIhNqAuaty2ZWHkQHRSNfPVIsPIfwEOWO22AmaoVrWavlOcMR5nzTLNYvp36X220/maaRsrec1G65A==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"p-locate\": \"^3.0.0\",\n-            \"path-exists\": \"^3.0.0\"\n-          }\n-        },\n-        \"lru-cache\": {\n-          \"version\": \"6.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n-          \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"yallist\": \"^4.0.0\"\n-          }\n-        },\n-        \"ms\": {\n-          \"version\": \"2.1.2\",\n-          \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n-          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n-          \"dev\": true\n-        },\n-        \"node-fetch\": {\n-          \"version\": \"2.6.0\",\n-          \"resolved\": \"https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.0.tgz\",\n-          \"integrity\": \"sha512-8dG4H5ujfvFiqDmVu9fQ5bOHUC15JMjMY/Zumv26oOvvVJjM67KF8koCWIabKQ1GJIa9r2mMZscBq/TbdOcmNA==\",\n-          \"dev\": true\n-        },\n-        \"npm-run-path\": {\n-          \"version\": \"4.0.1\",\n-          \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\",\n-          \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"path-key\": \"^3.0.0\"\n-          }\n-        },\n-        \"p-limit\": {\n-          \"version\": \"3.1.0\",\n-          \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n-          \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"yocto-queue\": \"^0.1.0\"\n-          }\n-        },\n-        \"p-locate\": {\n-          \"version\": \"3.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-3.0.0.tgz\",\n-          \"integrity\": \"sha512-x+12w/To+4GFfgJhBEpiDcLozRJGegY+Ei7/z0tSLkMmxGZNybVMSfWj9aJn8Z5Fc7dBUNJOOVgPv2H7IwulSQ==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"p-limit\": \"^2.0.0\"\n-          },\n-          \"dependencies\": {\n-            \"p-limit\": {\n-              \"version\": \"2.3.0\",\n-              \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n-              \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n-              \"dev\": true,\n-              \"requires\": {\n-                \"p-try\": \"^2.0.0\"\n-              }\n-            }\n-          }\n-        },\n-        \"p-try\": {\n-          \"version\": \"2.2.0\",\n-          \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n-          \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n-          \"dev\": true\n-        },\n-        \"path-key\": {\n-          \"version\": \"3.1.1\",\n-          \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n-          \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n-          \"dev\": true\n-        },\n-        \"picomatch\": {\n-          \"version\": \"2.2.2\",\n-          \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.2.2.tgz\",\n-          \"integrity\": \"sha512-q0M/9eZHzmr0AulXyPwNfZjtwZ/RBZlbN3K3CErVrk50T2ASYI7Bye0EvekFY3IP1Nt2DHu0re+V2ZHIpMkuWg==\",\n-          \"dev\": true\n-        },\n-        \"pkg-up\": {\n-          \"version\": \"3.1.0\",\n-          \"resolved\": \"https://registry.npmjs.org/pkg-up/-/pkg-up-3.1.0.tgz\",\n-          \"integrity\": \"sha512-nDywThFk1i4BQK4twPQ6TA4RT8bDY96yeuCVBWL3ePARCiEKDRSrNGbFIgUJpLp+XeIR65v8ra7WuJOFUBtkMA==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"find-up\": \"^3.0.0\"\n-          }\n-        },\n-        \"semver\": {\n-          \"version\": \"7.3.5\",\n-          \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.3.5.tgz\",\n-          \"integrity\": \"sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"lru-cache\": \"^6.0.0\"\n-          }\n-        },\n-        \"shebang-command\": {\n-          \"version\": \"2.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n-          \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"shebang-regex\": \"^3.0.0\"\n-          }\n-        },\n-        \"shebang-regex\": {\n-          \"version\": \"3.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n-          \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n-          \"dev\": true\n-        },\n-        \"slash\": {\n-          \"version\": \"3.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n-          \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n-          \"dev\": true\n-        },\n-        \"strip-ansi\": {\n-          \"version\": \"6.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz\",\n-          \"integrity\": \"sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"ansi-regex\": \"^5.0.0\"\n-          }\n-        },\n-        \"ts-dedent\": {\n-          \"version\": \"1.2.0\",\n-          \"resolved\": \"https://registry.npmjs.org/ts-dedent/-/ts-dedent-1.2.0.tgz\",\n-          \"integrity\": \"sha512-6zSJp23uQI+Txyz5LlXMXAHpUhY4Hi0oluXny0OgIR7g/Cromq4vDBnhtbBdyIV34g0pgwxUvnvg+jLJe4c1NA==\",\n-          \"dev\": true\n-        },\n-        \"uuid\": {\n-          \"version\": \"8.3.2\",\n-          \"resolved\": \"https://registry.npmjs.org/uuid/-/uuid-8.3.2.tgz\",\n-          \"integrity\": \"sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==\",\n-          \"dev\": true\n-        },\n-        \"which\": {\n-          \"version\": \"2.0.2\",\n-          \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n-          \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"isexe\": \"^2.0.0\"\n-          }\n-        },\n-        \"yallist\": {\n-          \"version\": \"4.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n-          \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n-          \"dev\": true\n-        }\n+        \"@discoveryjs/json-ext\": \"^0.5.7\",\n+        \"@types/webpack-env\": \"^1.17.0\"\n       }\n     },\n     \"chrome-trace-event\": {\n@@ -78389,7 +78403,7 @@\n     \"date-format\": {\n       \"version\": \"0.0.2\",\n       \"resolved\": \"https://registry.npmjs.org/date-format/-/date-format-0.0.2.tgz\",\n-      \"integrity\": \"sha1-+v1Ej3IRXvHitzkVWukvK+bCjdE=\",\n+      \"integrity\": \"sha512-M4obuJx8jU5T91lcbwi0+QPNVaWOY1DQYz5xUuKYWO93osVzB2ZPqyDUc5T+mDjbA1X8VOb4JDZ+8r2MrSOp7Q==\",\n       \"dev\": true\n     },\n     \"dateformat\": {\n@@ -79205,7 +79219,7 @@\n     \"elegant-spinner\": {\n       \"version\": \"1.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/elegant-spinner/-/elegant-spinner-1.0.1.tgz\",\n-      \"integrity\": \"sha1-2wQ1IcldfjA/2PNFvtwzSc+wcp4=\",\n+      \"integrity\": \"sha512-B+ZM+RXvRqQaAmkMlO/oSe5nMUOaUnyfGYCEHoR8wrXsZR2mA0XVibsxV1bvTwxdRWah1PkQqso2EzhILGHtEQ==\",\n       \"dev\": true\n     },\n     \"element-resize-detector\": {\n@@ -79411,9 +79425,9 @@\n       \"integrity\": \"sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w==\"\n     },\n     \"env-ci\": {\n-      \"version\": \"5.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/env-ci/-/env-ci-5.4.1.tgz\",\n-      \"integrity\": \"sha512-xyuCtyFZLpnW5aH0JstETKTSMwHHQX4m42juzEZzvbUCJX7RiPVlhASKM0f/cJ4vvI/+txMkZ7F5To6dCdPYhg==\",\n+      \"version\": \"5.5.0\",\n+      \"resolved\": \"https://registry.npmjs.org/env-ci/-/env-ci-5.5.0.tgz\",\n+      \"integrity\": \"sha512-o0JdWIbOLP+WJKIUt36hz1ImQQFuN92nhsfTkHHap+J8CiI8WgGpH/a9jEGHh4/TU5BUUGjlnKXNoDb57+ne+A==\",\n       \"dev\": true,\n       \"requires\": {\n         \"execa\": \"^5.0.0\",\n@@ -87430,7 +87444,7 @@\n     \"listr-silent-renderer\": {\n       \"version\": \"1.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/listr-silent-renderer/-/listr-silent-renderer-1.1.1.tgz\",\n-      \"integrity\": \"sha1-kktaN1cVN3C/Go4/v3S4u/P5JC4=\",\n+      \"integrity\": \"sha512-L26cIFm7/oZeSNVhWB6faeorXhMg4HNlb/dS/7jHhr708jxlXrtrBWo4YUxZQkc6dGoxEAe6J/D3juTRBUzjtA==\",\n       \"dev\": true\n     },\n     \"listr-update-renderer\": {\n@@ -87456,21 +87470,21 @@\n           \"dev\": true\n         },\n         \"ansi-regex\": {\n-          \"version\": \"3.0.0\",\n-          \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.0.tgz\",\n-          \"integrity\": \"sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=\",\n+          \"version\": \"3.0.1\",\n+          \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-3.0.1.tgz\",\n+          \"integrity\": \"sha512-+O9Jct8wf++lXxxFc4hc8LsjaSq0HFzzL7cVsw8pRDIPdjKD2mT4ytDZlLuSBZ4cLKZFXIrMGO7DbQCtMJJMKw==\",\n           \"dev\": true\n         },\n         \"ansi-styles\": {\n           \"version\": \"2.2.1\",\n           \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-2.2.1.tgz\",\n-          \"integrity\": \"sha1-tDLdM1i2NM914eRmQ2gkBTPB3b4=\",\n+          \"integrity\": \"sha512-kmCevFghRiWM7HB5zTPULl4r9bVFSWjz62MhqizDGUrq2NWuNMQyuv4tHHoKJHs69M/MF64lEcHdYIocrdWQYA==\",\n           \"dev\": true\n         },\n         \"chalk\": {\n           \"version\": \"1.1.3\",\n           \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-1.1.3.tgz\",\n-          \"integrity\": \"sha1-qBFcVeSnAv5NFQq9OHKCKn4J/Jg=\",\n+          \"integrity\": \"sha512-U3lRVLMSlsCfjqYPbLyVv11M9CPW4I728d6TCKMAOJueEeB9/8o+eSsMnxPJD+Q+K909sdESg7C+tIkoH6on1A==\",\n           \"dev\": true,\n           \"requires\": {\n             \"ansi-styles\": \"^2.2.1\",\n@@ -87483,7 +87497,7 @@\n         \"cli-cursor\": {\n           \"version\": \"2.1.0\",\n           \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz\",\n-          \"integrity\": \"sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=\",\n+          \"integrity\": \"sha512-8lgKz8LmCRYZZQDpRyT2m5rKJ08TnU4tR9FFFW2rxpxR1FzWi4PQ/NfyODchAatHaUgnSPVcx/R5w6NuTBzFiw==\",\n           \"dev\": true,\n           \"requires\": {\n             \"restore-cursor\": \"^2.0.0\"\n@@ -87492,7 +87506,7 @@\n         \"cli-truncate\": {\n           \"version\": \"0.2.1\",\n           \"resolved\": \"https://registry.npmjs.org/cli-truncate/-/cli-truncate-0.2.1.tgz\",\n-          \"integrity\": \"sha1-nxXPuwcFAFNpIWxiasfQWrkN1XQ=\",\n+          \"integrity\": \"sha512-f4r4yJnbT++qUPI9NR4XLDLq41gQ+uqnPItWG0F5ZkehuNiTTa3EY0S4AqTSUOeJ7/zU41oWPQSNkW5BqPL9bg==\",\n           \"dev\": true,\n           \"requires\": {\n             \"slice-ansi\": \"0.0.4\",\n@@ -87502,7 +87516,7 @@\n         \"figures\": {\n           \"version\": \"1.7.0\",\n           \"resolved\": \"https://registry.npmjs.org/figures/-/figures-1.7.0.tgz\",\n-          \"integrity\": \"sha1-y+Hjr/zxzUS4DK3+0o3Hk6lwHS4=\",\n+          \"integrity\": \"sha512-UxKlfCRuCBxSXU4C6t9scbDyWZ4VlaFFdojKtzJuSkuOBQ5CNFum+zZXFwHjo+CxBC1t6zlYPgHIgFjL8ggoEQ==\",\n           \"dev\": true,\n           \"requires\": {\n             \"escape-string-regexp\": \"^1.0.5\",\n@@ -87512,13 +87526,13 @@\n         \"indent-string\": {\n           \"version\": \"3.2.0\",\n           \"resolved\": \"https://registry.npmjs.org/indent-string/-/indent-string-3.2.0.tgz\",\n-          \"integrity\": \"sha1-Sl/W0nzDMvN+VBmlBNu4NxBckok=\",\n+          \"integrity\": \"sha512-BYqTHXTGUIvg7t1r4sJNKcbDZkL92nkXA8YtRpbjFHRHGDL/NtUeiBJMeE60kIFN/Mg8ESaWQvftaYMGJzQZCQ==\",\n           \"dev\": true\n         },\n         \"is-fullwidth-code-point\": {\n           \"version\": \"1.0.0\",\n           \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-1.0.0.tgz\",\n-          \"integrity\": \"sha1-754xOG8DGn8NZDr4L95QxFfvAMs=\",\n+          \"integrity\": \"sha512-1pqUqRjkhPJ9miNq9SwMfdvi6lBJcd6eFxvfaivQhaH3SgisfiuudvFntdKOmxuee/77l+FPjKrQjWvmPjWrRw==\",\n           \"dev\": true,\n           \"requires\": {\n             \"number-is-nan\": \"^1.0.0\"\n@@ -87527,7 +87541,7 @@\n         \"log-symbols\": {\n           \"version\": \"1.0.2\",\n           \"resolved\": \"https://registry.npmjs.org/log-symbols/-/log-symbols-1.0.2.tgz\",\n-          \"integrity\": \"sha1-N2/3tY6jCGoPCfrMdGF+ylAeGhg=\",\n+          \"integrity\": \"sha512-mmPrW0Fh2fxOzdBbFv4g1m6pR72haFLPJ2G5SJEELf1y+iaQrDG6cWCPjy54RHYbZAt7X+ls690Kw62AdWXBzQ==\",\n           \"dev\": true,\n           \"requires\": {\n             \"chalk\": \"^1.0.0\"\n@@ -87536,7 +87550,7 @@\n         \"log-update\": {\n           \"version\": \"2.3.0\",\n           \"resolved\": \"https://registry.npmjs.org/log-update/-/log-update-2.3.0.tgz\",\n-          \"integrity\": \"sha1-iDKP19HOeTiykoN0bwsbwSayRwg=\",\n+          \"integrity\": \"sha512-vlP11XfFGyeNQlmEn9tJ66rEW1coA/79m5z6BCkudjbAGE83uhAcGYrBFwfs3AdLiLzGRusRPAbSPK9xZteCmg==\",\n           \"dev\": true,\n           \"requires\": {\n             \"ansi-escapes\": \"^3.0.0\",\n@@ -87553,7 +87567,7 @@\n         \"onetime\": {\n           \"version\": \"2.0.1\",\n           \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz\",\n-          \"integrity\": \"sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=\",\n+          \"integrity\": \"sha512-oyyPpiMaKARvvcgip+JV+7zci5L8D1W9RZIz2l1o08AM3pfspitVWnPt3mzHcBPp12oYMTy0pqrFs/C+m3EwsQ==\",\n           \"dev\": true,\n           \"requires\": {\n             \"mimic-fn\": \"^1.0.0\"\n@@ -87562,7 +87576,7 @@\n         \"restore-cursor\": {\n           \"version\": \"2.0.0\",\n           \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz\",\n-          \"integrity\": \"sha1-n37ih/gv0ybU/RYpI9YhKe7g368=\",\n+          \"integrity\": \"sha512-6IzJLuGi4+R14vwagDHX+JrXmPVtPpn4mffDJ1UdR7/Edm87fl6yi8mMBIVvFtJaNTUvjughmW4hwLhRG7gC1Q==\",\n           \"dev\": true,\n           \"requires\": {\n             \"onetime\": \"^2.0.0\",\n@@ -87572,13 +87586,13 @@\n         \"slice-ansi\": {\n           \"version\": \"0.0.4\",\n           \"resolved\": \"https://registry.npmjs.org/slice-ansi/-/slice-ansi-0.0.4.tgz\",\n-          \"integrity\": \"sha1-7b+JA/ZvfOL46v1s7tZeJkyDGzU=\",\n+          \"integrity\": \"sha512-up04hB2hR92PgjpyU3y/eg91yIBILyjVY26NvvciY3EVVPjybkMszMpXQ9QAkcS3I5rtJBDLoTxxg+qvW8c7rw==\",\n           \"dev\": true\n         },\n         \"string-width\": {\n           \"version\": \"1.0.2\",\n           \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-1.0.2.tgz\",\n-          \"integrity\": \"sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=\",\n+          \"integrity\": \"sha512-0XsVpQLnVCXHJfyEs8tC0zpTVIr5PKKsQtkT29IwupnPTjtPmQ3xT/4yCREF9hYkV/3M3kzcUTSAZT6a6h81tw==\",\n           \"dev\": true,\n           \"requires\": {\n             \"code-point-at\": \"^1.0.0\",\n@@ -87589,13 +87603,13 @@\n         \"supports-color\": {\n           \"version\": \"2.0.0\",\n           \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-2.0.0.tgz\",\n-          \"integrity\": \"sha1-U10EXOa2Nj+kARcIRimZXp3zJMc=\",\n+          \"integrity\": \"sha512-KKNVtd6pCYgPIKU4cp2733HWYCpplQhddZLBUryaAHou723x+FRzQ5Df824Fj+IyyuiQTRoub4SnIFfIcrp70g==\",\n           \"dev\": true\n         },\n         \"wrap-ansi\": {\n           \"version\": \"3.0.1\",\n           \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-3.0.1.tgz\",\n-          \"integrity\": \"sha1-KIoE2H7aXChuBg3+jxNc6NAH+Lo=\",\n+          \"integrity\": \"sha512-iXR3tDXpbnTpzjKSylUJRkLuOrEC7hwEB221cgn6wtF8wpmz28puFXAEfPT5zrjM3wahygB//VuWEr1vTkDcNQ==\",\n           \"dev\": true,\n           \"requires\": {\n             \"string-width\": \"^2.1.1\",\n@@ -87605,7 +87619,7 @@\n             \"is-fullwidth-code-point\": {\n               \"version\": \"2.0.0\",\n               \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-2.0.0.tgz\",\n-              \"integrity\": \"sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=\",\n+              \"integrity\": \"sha512-VHskAKYM8RfSFXwee5t5cbN5PZeq1Wrh6qd5bkyiXIf6UQcN6w/A0eXM9r6t8d+GYOh+o6ZhiEnb88LN/Y8m2w==\",\n               \"dev\": true\n             },\n             \"string-width\": {\n@@ -87621,7 +87635,7 @@\n             \"strip-ansi\": {\n               \"version\": \"4.0.0\",\n               \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-4.0.0.tgz\",\n-              \"integrity\": \"sha1-qEeQIusaw2iocTibY1JixQXuNo8=\",\n+              \"integrity\": \"sha512-4XaJ2zQdCzROZDivEVIDPkcQn8LMFSa8kj8Gxb/Lnwzv9A8VctNZ+lfivC/sV3ivW8ElJTERXZoPBRrZKkNKow==\",\n               \"dev\": true,\n               \"requires\": {\n                 \"ansi-regex\": \"^3.0.0\"\n@@ -87666,7 +87680,7 @@\n         \"cli-cursor\": {\n           \"version\": \"2.1.0\",\n           \"resolved\": \"https://registry.npmjs.org/cli-cursor/-/cli-cursor-2.1.0.tgz\",\n-          \"integrity\": \"sha1-s12sN2R5+sw+lHR9QdDQ9SOP/LU=\",\n+          \"integrity\": \"sha512-8lgKz8LmCRYZZQDpRyT2m5rKJ08TnU4tR9FFFW2rxpxR1FzWi4PQ/NfyODchAatHaUgnSPVcx/R5w6NuTBzFiw==\",\n           \"dev\": true,\n           \"requires\": {\n             \"restore-cursor\": \"^2.0.0\"\n@@ -87681,7 +87695,7 @@\n         \"figures\": {\n           \"version\": \"2.0.0\",\n           \"resolved\": \"https://registry.npmjs.org/figures/-/figures-2.0.0.tgz\",\n-          \"integrity\": \"sha1-OrGi0qYsi/tDGgyUy3l6L84nyWI=\",\n+          \"integrity\": \"sha512-Oa2M9atig69ZkfwiApY8F2Yy+tzMbazyvqv21R0NsSC8floSOC09BbT1ITWAdoMGQvJ/aZnR1KMwdx9tvHnTNA==\",\n           \"dev\": true,\n           \"requires\": {\n             \"escape-string-regexp\": \"^1.0.5\"\n@@ -87696,7 +87710,7 @@\n         \"onetime\": {\n           \"version\": \"2.0.1\",\n           \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-2.0.1.tgz\",\n-          \"integrity\": \"sha1-BnQoIw/WdEOyeUsiu6UotoZ5YtQ=\",\n+          \"integrity\": \"sha512-oyyPpiMaKARvvcgip+JV+7zci5L8D1W9RZIz2l1o08AM3pfspitVWnPt3mzHcBPp12oYMTy0pqrFs/C+m3EwsQ==\",\n           \"dev\": true,\n           \"requires\": {\n             \"mimic-fn\": \"^1.0.0\"\n@@ -87705,7 +87719,7 @@\n         \"restore-cursor\": {\n           \"version\": \"2.0.0\",\n           \"resolved\": \"https://registry.npmjs.org/restore-cursor/-/restore-cursor-2.0.0.tgz\",\n-          \"integrity\": \"sha1-n37ih/gv0ybU/RYpI9YhKe7g368=\",\n+          \"integrity\": \"sha512-6IzJLuGi4+R14vwagDHX+JrXmPVtPpn4mffDJ1UdR7/Edm87fl6yi8mMBIVvFtJaNTUvjughmW4hwLhRG7gC1Q==\",\n           \"dev\": true,\n           \"requires\": {\n             \"onetime\": \"^2.0.0\",\n@@ -89426,15 +89440,15 @@\n         \"wildcard\": {\n           \"version\": \"1.1.2\",\n           \"resolved\": \"https://registry.npmjs.org/wildcard/-/wildcard-1.1.2.tgz\",\n-          \"integrity\": \"sha1-pwIEUwhNjNLv5wup02liY94XEKU=\",\n+          \"integrity\": \"sha512-DXukZJxpHA8LuotRwL0pP1+rS6CS7FF2qStDDE1C7DDg2rLud2PXRMuEDYIPhgEezwnlHNL4c+N6MfMTjCGTng==\",\n           \"dev\": true\n         }\n       }\n     },\n     \"node-ask\": {\n       \"version\": \"1.0.1\",\n       \"resolved\": \"https://registry.npmjs.org/node-ask/-/node-ask-1.0.1.tgz\",\n-      \"integrity\": \"sha1-yqoQdsxY4DZCZ6CQPj6t+sFYOWs=\",\n+      \"integrity\": \"sha512-+0eqgEdgPiixrNysGDTPo3T2qyEHGVgs4ONlc5tTfcluvC/Rgq1x2ELdANUMwhR2CYLwaQnMS32O/h7adasnFQ==\",\n       \"dev\": true\n     },\n     \"node-dir\": {\n@@ -90469,7 +90483,7 @@\n     \"openurl\": {\n       \"version\": \"1.1.1\",\n       \"resolved\": \"https://registry.npmjs.org/openurl/-/openurl-1.1.1.tgz\",\n-      \"integrity\": \"sha1-OHW0sO96UsFW8NtB1GCduw+Us4c=\",\n+      \"integrity\": \"sha512-d/gTkTb1i1GKz5k3XE3XFV/PxQ1k45zDqGP2OA7YhgsaLoqm6qRvARAZOFer1fcXritWlGBRCu/UgeS4HAnXAA==\",\n       \"dev\": true\n     },\n     \"optimist\": {\n@@ -91652,7 +91666,7 @@\n     \"progress-stream\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/progress-stream/-/progress-stream-2.0.0.tgz\",\n-      \"integrity\": \"sha1-+sY6Cz0R3qy7CWmrzJOyFLzhntU=\",\n+      \"integrity\": \"sha512-xJwOWR46jcXUq6EH9yYyqp+I52skPySOeHfkxOZ2IY1AiBi/sFJhbhAKHoV3OTw/omQ45KTio9215dRJ2Yxd3Q==\",\n       \"dev\": true,\n       \"requires\": {\n         \"speedometer\": \"~1.0.0\",\n@@ -95714,7 +95728,7 @@\n     \"speedometer\": {\n       \"version\": \"1.0.0\",\n       \"resolved\": \"https://registry.npmjs.org/speedometer/-/speedometer-1.0.0.tgz\",\n-      \"integrity\": \"sha1-zWccsGdSwivKM3Di8zREC+T8YuI=\",\n+      \"integrity\": \"sha512-lgxErLl/7A5+vgIIXsh9MbeukOaCb2axgQ+bKCdIE+ibNT4XNYGNCR1qFEGq6F+YDASXK3Fh/c5FgtZchFolxw==\",\n       \"dev\": true\n     },\n     \"split\": {"
        },
        {
            "51e567ffef684b5e3fb9e5bdfaccd9ad2777f4c8": "@@ -31825,9 +31825,9 @@\n       }\n     },\n     \"node_modules/gh-pages/node_modules/async\": {\n-      \"version\": \"2.6.3\",\n-      \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.3.tgz\",\n-      \"integrity\": \"sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==\",\n+      \"version\": \"2.6.4\",\n+      \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.4.tgz\",\n+      \"integrity\": \"sha512-mzo5dfJYwAn29PeiJ0zvwTo04zj8HDJj0Mn8TD7sno7q12prdbnasKJHhkm2c1LgrhlJ0teaea8860oxi51mGA==\",\n       \"dependencies\": {\n         \"lodash\": \"^4.17.14\"\n       }\n@@ -43442,9 +43442,9 @@\n       }\n     },\n     \"node_modules/portfinder/node_modules/async\": {\n-      \"version\": \"2.6.3\",\n-      \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.3.tgz\",\n-      \"integrity\": \"sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==\",\n+      \"version\": \"2.6.4\",\n+      \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.4.tgz\",\n+      \"integrity\": \"sha512-mzo5dfJYwAn29PeiJ0zvwTo04zj8HDJj0Mn8TD7sno7q12prdbnasKJHhkm2c1LgrhlJ0teaea8860oxi51mGA==\",\n       \"devOptional\": true,\n       \"dependencies\": {\n         \"lodash\": \"^4.17.14\"\n@@ -54843,9 +54843,9 @@\n       }\n     },\n     \"node_modules/yeoman-generator/node_modules/async\": {\n-      \"version\": \"2.6.3\",\n-      \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.3.tgz\",\n-      \"integrity\": \"sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==\",\n+      \"version\": \"2.6.4\",\n+      \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.4.tgz\",\n+      \"integrity\": \"sha512-mzo5dfJYwAn29PeiJ0zvwTo04zj8HDJj0Mn8TD7sno7q12prdbnasKJHhkm2c1LgrhlJ0teaea8860oxi51mGA==\",\n       \"dependencies\": {\n         \"lodash\": \"^4.17.14\"\n       }\n@@ -82267,9 +82267,9 @@\n           }\n         },\n         \"async\": {\n-          \"version\": \"2.6.3\",\n-          \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.3.tgz\",\n-          \"integrity\": \"sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==\",\n+          \"version\": \"2.6.4\",\n+          \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.4.tgz\",\n+          \"integrity\": \"sha512-mzo5dfJYwAn29PeiJ0zvwTo04zj8HDJj0Mn8TD7sno7q12prdbnasKJHhkm2c1LgrhlJ0teaea8860oxi51mGA==\",\n           \"requires\": {\n             \"lodash\": \"^4.17.14\"\n           }\n@@ -91279,9 +91279,9 @@\n       },\n       \"dependencies\": {\n         \"async\": {\n-          \"version\": \"2.6.3\",\n-          \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.3.tgz\",\n-          \"integrity\": \"sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==\",\n+          \"version\": \"2.6.4\",\n+          \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.4.tgz\",\n+          \"integrity\": \"sha512-mzo5dfJYwAn29PeiJ0zvwTo04zj8HDJj0Mn8TD7sno7q12prdbnasKJHhkm2c1LgrhlJ0teaea8860oxi51mGA==\",\n           \"devOptional\": true,\n           \"requires\": {\n             \"lodash\": \"^4.17.14\"\n@@ -100048,9 +100048,9 @@\n           \"integrity\": \"sha512-3duEwti880xqi4eAMN8AyR4a0ByT90zoYdLlevfrvU43vb0YZwZVfxOgxWrLXXXpyugL0hNZc9G6BiB5B3nUug==\"\n         },\n         \"async\": {\n-          \"version\": \"2.6.3\",\n-          \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.3.tgz\",\n-          \"integrity\": \"sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==\",\n+          \"version\": \"2.6.4\",\n+          \"resolved\": \"https://registry.npmjs.org/async/-/async-2.6.4.tgz\",\n+          \"integrity\": \"sha512-mzo5dfJYwAn29PeiJ0zvwTo04zj8HDJj0Mn8TD7sno7q12prdbnasKJHhkm2c1LgrhlJ0teaea8860oxi51mGA==\",\n           \"requires\": {\n             \"lodash\": \"^4.17.14\"\n           }"
        },
        {
            "25c2b7f761d2ac7ad59dbb0353744167dacb280f": "@@ -38083,9 +38083,9 @@\n       \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\"\n     },\n     \"node_modules/json-schema\": {\n-      \"version\": \"0.2.3\",\n-      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz\",\n-      \"integrity\": \"sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=\",\n+      \"version\": \"0.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz\",\n+      \"integrity\": \"sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA==\",\n       \"dev\": true\n     },\n     \"node_modules/json-schema-traverse\": {\n@@ -38176,18 +38176,18 @@\n       }\n     },\n     \"node_modules/jsprim\": {\n-      \"version\": \"1.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz\",\n-      \"integrity\": \"sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=\",\n+      \"version\": \"1.4.2\",\n+      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-1.4.2.tgz\",\n+      \"integrity\": \"sha512-P2bSOMAc/ciLz6DzgjVlGJP9+BrJWu5UDGK70C2iweC5QBIeFf0ZXRvGjEj2uYgrY2MkAAhsSWHDWlFtEroZWw==\",\n       \"dev\": true,\n-      \"engines\": [\n-        \"node >=0.6.0\"\n-      ],\n       \"dependencies\": {\n         \"assert-plus\": \"1.0.0\",\n         \"extsprintf\": \"1.3.0\",\n-        \"json-schema\": \"0.2.3\",\n+        \"json-schema\": \"0.4.0\",\n         \"verror\": \"1.10.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=0.6.0\"\n       }\n     },\n     \"node_modules/jsx-ast-utils\": {\n@@ -87006,9 +87006,9 @@\n       \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\"\n     },\n     \"json-schema\": {\n-      \"version\": \"0.2.3\",\n-      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz\",\n-      \"integrity\": \"sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM=\",\n+      \"version\": \"0.4.0\",\n+      \"resolved\": \"https://registry.npmjs.org/json-schema/-/json-schema-0.4.0.tgz\",\n+      \"integrity\": \"sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA==\",\n       \"dev\": true\n     },\n     \"json-schema-traverse\": {\n@@ -87082,14 +87082,14 @@\n       }\n     },\n     \"jsprim\": {\n-      \"version\": \"1.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz\",\n-      \"integrity\": \"sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=\",\n+      \"version\": \"1.4.2\",\n+      \"resolved\": \"https://registry.npmjs.org/jsprim/-/jsprim-1.4.2.tgz\",\n+      \"integrity\": \"sha512-P2bSOMAc/ciLz6DzgjVlGJP9+BrJWu5UDGK70C2iweC5QBIeFf0ZXRvGjEj2uYgrY2MkAAhsSWHDWlFtEroZWw==\",\n       \"dev\": true,\n       \"requires\": {\n         \"assert-plus\": \"1.0.0\",\n         \"extsprintf\": \"1.3.0\",\n-        \"json-schema\": \"0.2.3\",\n+        \"json-schema\": \"0.4.0\",\n         \"verror\": \"1.10.0\"\n       }\n     },"
        }
    ],
    "superset-frontend/package.json": [
        {
            "6a0b7e5598f18262cb83579bacd2440faaf5717b": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"superset\",\n-  \"version\": \"0.0.0dev\",\n+  \"version\": \"0.0.0-dev\",\n   \"description\": \"Superset is a data exploration platform designed to be visual, intuitive, and interactive.\",\n   \"keywords\": [\n     \"big\",\n@@ -23,7 +23,9 @@\n     \"url\": \"git+https://github.com/apache/superset.git\"\n   },\n   \"license\": \"Apache-2.0\",\n-  \"author\": \"Apache\",\n+  \"author\": {\n+    \"name\": \"Apache\"\n+  },\n   \"directories\": {\n     \"doc\": \"docs\",\n     \"test\": \"spec\"\n@@ -40,6 +42,7 @@\n     \"build-instrumented\": \"cross-env NODE_ENV=production BABEL_ENV=instrumented webpack --mode=production --color\",\n     \"build-storybook\": \"build-storybook\",\n     \"check-translation\": \"prettier --check ../superset/translations/**/LC_MESSAGES/*.json\",\n+    \"chromatic\": \"npx chromatic --skip 'dependabot/**'  --only-changed\",\n     \"clean-translation\": \"prettier --write ../superset/translations/**/LC_MESSAGES/*.json\",\n     \"core:cover\": \"cross-env NODE_ENV=test jest --coverage --coverageThreshold='{\\\"global\\\":{\\\"statements\\\":100,\\\"branches\\\":100,\\\"functions\\\":100,\\\"lines\\\":100}}' --collectCoverageFrom='[\\\"packages/**/src/**/*.{js,ts}\\\", \\\"!packages/superset-ui-demo/**/*\\\"]' packages\",\n     \"cover\": \"cross-env NODE_ENV=test jest --coverage\",\n@@ -274,6 +277,7 @@\n     \"babel-plugin-dynamic-import-node\": \"^2.3.3\",\n     \"babel-plugin-jsx-remove-data-test-id\": \"^2.1.3\",\n     \"babel-plugin-lodash\": \"^3.3.4\",\n+    \"chromatic\": \"^6.7.4\",\n     \"copy-webpack-plugin\": \"^9.0.1\",\n     \"cross-env\": \"^5.2.0\",\n     \"css-loader\": \"^6.2.0\",\n@@ -341,5 +345,7 @@\n   \"engines\": {\n     \"node\": \"^16.9.1\",\n     \"npm\": \"^7.5.4 || ^8.1.2\"\n-  }\n+  },\n+  \"readme\": \"ERROR: No README data found!\",\n+  \"_id\": \"superset@0.0.0-dev\"\n }"
        }
    ],
    "superset-frontend/src/components/ListViewCard/ListViewCard.stories.tsx": [
        {
            "6a0b7e5598f18262cb83579bacd2440faaf5717b": "@@ -18,9 +18,7 @@\n  */\n import React from 'react';\n import { action } from '@storybook/addon-actions';\n-import { withKnobs, boolean, select, text } from '@storybook/addon-knobs';\n-import DashboardImg from 'src/assets/images/dashboard-card-fallback.svg';\n-import ChartImg from 'src/assets/images/chart-card-fallback.svg';\n+import { boolean, text } from '@storybook/addon-knobs';\n import { AntdDropdown } from 'src/components';\n import { Menu } from 'src/components/Menu';\n import Icons from 'src/components/Icons';\n@@ -30,28 +28,20 @@ import ListViewCard from '.';\n export default {\n   title: 'ListViewCard',\n   component: ListViewCard,\n-  decorators: [withKnobs],\n-};\n-\n-const imgFallbackKnob = {\n-  label: 'Fallback/Loading Image',\n-  options: {\n-    Dashboard: DashboardImg,\n-    Chart: ChartImg,\n-  },\n-  defaultValue: DashboardImg,\n };\n \n export const SupersetListViewCard = () => (\n   <ListViewCard\n     title=\"Superset Card Title\"\n     loading={boolean('loading', false)}\n     url=\"/superset/dashboard/births/\"\n-    imgURL={text('imgURL', 'https://picsum.photos/800/600')}\n-    imgFallbackURL={select(\n-      imgFallbackKnob.label,\n-      imgFallbackKnob.options,\n-      imgFallbackKnob.defaultValue,\n+    imgURL={text(\n+      'imgURL',\n+      'https://images.unsplash.com/photo-1658163724548-29ef00812a54?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80',\n+    )}\n+    imgFallbackURL={text(\n+      'imgURL',\n+      'https://images.unsplash.com/photo-1658208193219-e859d9771912?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=2670&q=80',\n     )}\n     description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit...\"\n     coverLeft=\"Left Section\""
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/sqllab/tabs.test.ts": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -30,8 +30,10 @@ describe('SqlLab query tabs', () => {\n       const initialUntitledCount = Math.max(\n         0,\n         ...tabs\n-          .map((i, tabItem) =>\n-            Number(tabItem.textContent?.match(/Untitled Query (\\d+)/)?.[1]),\n+          .map(\n+            (i, tabItem) =>\n+              Number(tabItem.textContent?.match(/Untitled Query (\\d+)/)?.[1]) ||\n+              0,\n           )\n           .toArray(),\n       );"
        }
    ],
    "superset-frontend/src/SqlLab/App.jsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -67,6 +67,9 @@ const sqlLabPersistStateConfig = {\n             ...state[path],\n             queries: emptyQueryResults(state[path].queries),\n             queryEditors: clearQueryEditors(state[path].queryEditors),\n+            unsavedQueryEditor: clearQueryEditors([\n+              state[path].unsavedQueryEditor,\n+            ])[0],\n           };\n         }\n       });\n@@ -91,6 +94,12 @@ const sqlLabPersistStateConfig = {\n       const result = {\n         ...initialState,\n         ...persistedState,\n+        sqlLab: {\n+          ...(persistedState?.sqlLab || {}),\n+          // Overwrite initialState over persistedState for sqlLab\n+          // since a logic in getInitialState overrides the value from persistedState\n+          ...initialState.sqlLab,\n+        },\n       };\n       // Filter out any user data that may have been persisted in an older version.\n       // Get user from bootstrap data instead, every time"
        }
    ],
    "superset-frontend/src/SqlLab/actions/sqlLab.js": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -123,6 +123,17 @@ const fieldConverter = mapping => obj =>\n const convertQueryToServer = fieldConverter(queryServerMapping);\n const convertQueryToClient = fieldConverter(queryClientMapping);\n \n+export function getUpToDateQuery(rootState, queryEditor, key) {\n+  const {\n+    sqlLab: { unsavedQueryEditor },\n+  } = rootState;\n+  const id = key ?? queryEditor.id;\n+  return {\n+    ...queryEditor,\n+    ...(id === unsavedQueryEditor.id && unsavedQueryEditor),\n+  };\n+}\n+\n export function resetState() {\n   return { type: RESET_STATE };\n }\n@@ -167,24 +178,26 @@ export function scheduleQuery(query) {\n       );\n }\n \n-export function estimateQueryCost(query) {\n-  const { dbId, schema, sql, templateParams } = query;\n-  const endpoint =\n-    schema === null\n-      ? `/superset/estimate_query_cost/${dbId}/`\n-      : `/superset/estimate_query_cost/${dbId}/${schema}/`;\n-  return dispatch =>\n-    Promise.all([\n-      dispatch({ type: COST_ESTIMATE_STARTED, query }),\n+export function estimateQueryCost(queryEditor) {\n+  return (dispatch, getState) => {\n+    const { dbId, schema, sql, selectedText, templateParams } =\n+      getUpToDateQuery(getState(), queryEditor);\n+    const requestSql = selectedText || sql;\n+    const endpoint =\n+      schema === null\n+        ? `/superset/estimate_query_cost/${dbId}/`\n+        : `/superset/estimate_query_cost/${dbId}/${schema}/`;\n+    return Promise.all([\n+      dispatch({ type: COST_ESTIMATE_STARTED, query: queryEditor }),\n       SupersetClient.post({\n         endpoint,\n         postPayload: {\n-          sql,\n+          sql: requestSql,\n           templateParams: JSON.parse(templateParams || '{}'),\n         },\n       })\n         .then(({ json }) =>\n-          dispatch({ type: COST_ESTIMATE_RETURNED, query, json }),\n+          dispatch({ type: COST_ESTIMATE_RETURNED, query: queryEditor, json }),\n         )\n         .catch(response =>\n           getClientErrorObject(response).then(error => {\n@@ -194,12 +207,13 @@ export function estimateQueryCost(query) {\n               t('Failed at retrieving results');\n             return dispatch({\n               type: COST_ESTIMATE_FAILED,\n-              query,\n+              query: queryEditor,\n               error: message,\n             });\n           }),\n         ),\n     ]);\n+  };\n }\n \n export function startQuery(query) {\n@@ -357,15 +371,58 @@ export function runQuery(query) {\n   };\n }\n \n+export function runQueryFromSqlEditor(\n+  database,\n+  queryEditor,\n+  defaultQueryLimit,\n+  tempTable,\n+  ctas,\n+  ctasMethod,\n+) {\n+  return function (dispatch, getState) {\n+    const qe = getUpToDateQuery(getState(), queryEditor, queryEditor.id);\n+    const query = {\n+      dbId: qe.dbId,\n+      sql: qe.selectedText || qe.sql,\n+      sqlEditorId: qe.id,\n+      tab: qe.name,\n+      schema: qe.schema,\n+      tempTable,\n+      templateParams: qe.templateParams,\n+      queryLimit: qe.queryLimit || defaultQueryLimit,\n+      runAsync: database ? database.allow_run_async : false,\n+      ctas,\n+      ctas_method: ctasMethod,\n+      updateTabState: !qe.selectedText,\n+    };\n+    dispatch(runQuery(query));\n+  };\n+}\n+\n export function reRunQuery(query) {\n   // run Query with a new id\n   return function (dispatch) {\n     dispatch(runQuery({ ...query, id: shortid.generate() }));\n   };\n }\n \n-export function validateQuery(query) {\n-  return function (dispatch) {\n+export function validateQuery(queryEditor, sql) {\n+  return function (dispatch, getState) {\n+    const {\n+      sqlLab: { unsavedQueryEditor },\n+    } = getState();\n+    const qe = {\n+      ...queryEditor,\n+      ...(queryEditor.id === unsavedQueryEditor.id && unsavedQueryEditor),\n+    };\n+\n+    const query = {\n+      dbId: qe.dbId,\n+      sql,\n+      sqlEditorId: qe.id,\n+      schema: qe.schema,\n+      templateParams: qe.templateParams,\n+    };\n     dispatch(startQueryValidation(query));\n \n     const postPayload = {\n@@ -620,6 +677,7 @@ export function switchQueryEditor(queryEditor, displayLimit) {\n   return function (dispatch) {\n     if (\n       isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE) &&\n+      queryEditor &&\n       !queryEditor.loaded\n     ) {\n       SupersetClient.get({\n@@ -723,6 +781,17 @@ export function removeQueryEditor(queryEditor) {\n   };\n }\n \n+export function removeAllOtherQueryEditors(queryEditor) {\n+  return function (dispatch, getState) {\n+    const { sqlLab } = getState();\n+    sqlLab.queryEditors?.forEach(otherQueryEditor => {\n+      if (otherQueryEditor.id !== queryEditor.id) {\n+        dispatch(removeQueryEditor(otherQueryEditor));\n+      }\n+    });\n+  };\n+}\n+\n export function removeQuery(query) {\n   return function (dispatch) {\n     const sync = isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)\n@@ -921,8 +990,9 @@ export function queryEditorSetSql(queryEditor, sql) {\n   return { type: QUERY_EDITOR_SET_SQL, queryEditor, sql };\n }\n \n-export function queryEditorSetAndSaveSql(queryEditor, sql) {\n-  return function (dispatch) {\n+export function queryEditorSetAndSaveSql(targetQueryEditor, sql) {\n+  return function (dispatch, getState) {\n+    const queryEditor = getUpToDateQuery(getState(), targetQueryEditor);\n     // saved query and set tab state use this action\n     dispatch(queryEditorSetSql(queryEditor, sql));\n     if (isFeatureEnabled(FeatureFlag.SQLLAB_BACKEND_PERSISTENCE)) {"
        },
        {
            "15b9f83150a5ac47ada5253b69e54df019bfb2a1": "@@ -375,7 +375,7 @@ export function validateQuery(query) {\n     };\n \n     return SupersetClient.post({\n-      endpoint: `/api/v1/database/${query.dbId}/validate_sql`,\n+      endpoint: `/api/v1/database/${query.dbId}/validate_sql/`,\n       body: JSON.stringify(postPayload),\n       headers: { 'Content-Type': 'application/json' },\n     })"
        }
    ],
    "superset-frontend/src/SqlLab/actions/sqlLab.test.js": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -24,22 +24,21 @@ import thunk from 'redux-thunk';\n import shortid from 'shortid';\n import * as featureFlags from 'src/featureFlags';\n import * as actions from 'src/SqlLab/actions/sqlLab';\n-import { defaultQueryEditor, query } from '../fixtures';\n+import { defaultQueryEditor, query, initialState } from 'src/SqlLab/fixtures';\n \n const middlewares = [thunk];\n const mockStore = configureMockStore(middlewares);\n \n describe('async actions', () => {\n   const mockBigNumber = '9223372036854775807';\n   const queryEditor = {\n+    ...defaultQueryEditor,\n     id: 'abcd',\n     autorun: false,\n-    dbId: null,\n     latestQueryId: null,\n-    selectedText: null,\n     sql: 'SELECT *\\nFROM\\nWHERE',\n     name: 'Untitled Query 1',\n-    schemaOptions: [{ value: 'main', label: 'main', name: 'main' }],\n+    schemaOptions: [{ value: 'main', label: 'main', title: 'main' }],\n   };\n \n   let dispatch;\n@@ -65,20 +64,20 @@ describe('async actions', () => {\n \n     const makeRequest = () => {\n       const request = actions.saveQuery(query);\n-      return request(dispatch);\n+      return request(dispatch, () => initialState);\n     };\n \n     it('posts to the correct url', () => {\n       expect.assertions(1);\n \n-      const store = mockStore({});\n+      const store = mockStore(initialState);\n       return store.dispatch(actions.saveQuery(query)).then(() => {\n         expect(fetchMock.calls(saveQueryEndpoint)).toHaveLength(1);\n       });\n     });\n \n     it('posts the correct query object', () => {\n-      const store = mockStore({});\n+      const store = mockStore(initialState);\n       return store.dispatch(actions.saveQuery(query)).then(() => {\n         const call = fetchMock.calls(saveQueryEndpoint)[0];\n         const formData = call[1].body;\n@@ -107,7 +106,7 @@ describe('async actions', () => {\n     it('onSave calls QUERY_EDITOR_SAVED and QUERY_EDITOR_SET_TITLE', () => {\n       expect.assertions(1);\n \n-      const store = mockStore({});\n+      const store = mockStore(initialState);\n       const expectedActionTypes = [\n         actions.QUERY_EDITOR_SAVED,\n         actions.QUERY_EDITOR_SET_TITLE,\n@@ -191,7 +190,7 @@ describe('async actions', () => {\n   describe('runQuery without query params', () => {\n     const makeRequest = () => {\n       const request = actions.runQuery(query);\n-      return request(dispatch);\n+      return request(dispatch, () => initialState);\n     };\n \n     it('makes the fetch request', () => {\n@@ -224,7 +223,9 @@ describe('async actions', () => {\n \n       const store = mockStore({});\n       const expectedActionTypes = [actions.START_QUERY, actions.QUERY_SUCCESS];\n-      return store.dispatch(actions.runQuery(query)).then(() => {\n+      const { dispatch } = store;\n+      const request = actions.runQuery(query);\n+      return request(dispatch, () => initialState).then(() => {\n         expect(store.getActions().map(a => a.type)).toEqual(\n           expectedActionTypes,\n         );\n@@ -242,7 +243,9 @@ describe('async actions', () => {\n \n       const store = mockStore({});\n       const expectedActionTypes = [actions.START_QUERY, actions.QUERY_FAILED];\n-      return store.dispatch(actions.runQuery(query)).then(() => {\n+      const { dispatch } = store;\n+      const request = actions.runQuery(query);\n+      return request(dispatch, () => initialState).then(() => {\n         expect(store.getActions().map(a => a.type)).toEqual(\n           expectedActionTypes,\n         );\n@@ -265,15 +268,19 @@ describe('async actions', () => {\n \n     const makeRequest = () => {\n       const request = actions.runQuery(query);\n-      return request(dispatch);\n+      return request(dispatch, () => initialState);\n     };\n \n-    it('makes the fetch request', () =>\n-      makeRequest().then(() => {\n-        expect(\n-          fetchMock.calls('glob:*/superset/sql_json/?foo=bar'),\n-        ).toHaveLength(1);\n-      }));\n+    it('makes the fetch request', async () => {\n+      const runQueryEndpointWithParams = 'glob:*/superset/sql_json/?foo=bar';\n+      fetchMock.post(\n+        runQueryEndpointWithParams,\n+        `{ \"data\": ${mockBigNumber} }`,\n+      );\n+      await makeRequest().then(() => {\n+        expect(fetchMock.calls(runQueryEndpointWithParams)).toHaveLength(1);\n+      });\n+    });\n   });\n \n   describe('reRunQuery', () => {\n@@ -291,10 +298,12 @@ describe('async actions', () => {\n         sqlLab: {\n           tabHistory: [id],\n           queryEditors: [{ id, name: 'Dummy query editor' }],\n+          unsavedQueryEditor: {},\n         },\n       };\n       const store = mockStore(state);\n-      store.dispatch(actions.reRunQuery(query));\n+      const request = actions.reRunQuery(query);\n+      request(store.dispatch, store.getState);\n       expect(store.getActions()[0].query.id).toEqual('abcd');\n     });\n   });\n@@ -351,6 +360,7 @@ describe('async actions', () => {\n         sqlLab: {\n           tabHistory: [id],\n           queryEditors: [{ id, name: 'Dummy query editor' }],\n+          unsavedQueryEditor: {},\n         },\n       };\n       const store = mockStore(state);\n@@ -369,11 +379,10 @@ describe('async actions', () => {\n           },\n         },\n       ];\n-      return store\n-        .dispatch(actions.cloneQueryToNewTab(query, true))\n-        .then(() => {\n-          expect(store.getActions()).toEqual(expectedActions);\n-        });\n+      const request = actions.cloneQueryToNewTab(query, true);\n+      return request(store.dispatch, store.getState).then(() => {\n+        expect(store.getActions()).toEqual(expectedActions);\n+      });\n     });\n   });\n \n@@ -389,18 +398,17 @@ describe('async actions', () => {\n     it('creates new query editor', () => {\n       expect.assertions(1);\n \n-      const store = mockStore({});\n+      const store = mockStore(initialState);\n       const expectedActions = [\n         {\n           type: actions.ADD_QUERY_EDITOR,\n           queryEditor,\n         },\n       ];\n-      return store\n-        .dispatch(actions.addQueryEditor(defaultQueryEditor))\n-        .then(() => {\n-          expect(store.getActions()).toEqual(expectedActions);\n-        });\n+      const request = actions.addQueryEditor(defaultQueryEditor);\n+      return request(store.dispatch, store.getState).then(() => {\n+        expect(store.getActions()).toEqual(expectedActions);\n+      });\n     });\n   });\n \n@@ -648,14 +656,12 @@ describe('async actions', () => {\n         it('updates the tab state in the backend', () => {\n           expect.assertions(2);\n \n-          const store = mockStore({});\n-\n-          return store\n-            .dispatch(actions.queryEditorSetAndSaveSql(queryEditor, sql))\n-            .then(() => {\n-              expect(store.getActions()).toEqual(expectedActions);\n-              expect(fetchMock.calls(updateTabStateEndpoint)).toHaveLength(1);\n-            });\n+          const store = mockStore(initialState);\n+          const request = actions.queryEditorSetAndSaveSql(queryEditor, sql);\n+          return request(store.dispatch, store.getState).then(() => {\n+            expect(store.getActions()).toEqual(expectedActions);\n+            expect(fetchMock.calls(updateTabStateEndpoint)).toHaveLength(1);\n+          });\n         });\n       });\n       describe('with backend persistence flag off', () => {\n@@ -666,9 +672,9 @@ describe('async actions', () => {\n               feature => !(feature === 'SQLLAB_BACKEND_PERSISTENCE'),\n             );\n \n-          const store = mockStore({});\n-\n-          store.dispatch(actions.queryEditorSetAndSaveSql(queryEditor, sql));\n+          const store = mockStore(initialState);\n+          const request = actions.queryEditorSetAndSaveSql(queryEditor, sql);\n+          request(store.dispatch, store.getState);\n \n           expect(store.getActions()).toEqual(expectedActions);\n           expect(fetchMock.calls(updateTabStateEndpoint)).toHaveLength(0);\n@@ -770,7 +776,7 @@ describe('async actions', () => {\n         const database = { disable_data_preview: false, id: 1 };\n         const tableName = 'table';\n         const schemaName = 'schema';\n-        const store = mockStore({});\n+        const store = mockStore(initialState);\n         const expectedActionTypes = [\n           actions.MERGE_TABLE, // addTable\n           actions.MERGE_TABLE, // getTableMetadata\n@@ -780,20 +786,24 @@ describe('async actions', () => {\n           actions.MERGE_TABLE, // addTable\n           actions.QUERY_SUCCESS, // querySuccess\n         ];\n-        return store\n-          .dispatch(actions.addTable(query, database, tableName, schemaName))\n-          .then(() => {\n-            expect(store.getActions().map(a => a.type)).toEqual(\n-              expectedActionTypes,\n-            );\n-            expect(fetchMock.calls(updateTableSchemaEndpoint)).toHaveLength(1);\n-            expect(fetchMock.calls(getTableMetadataEndpoint)).toHaveLength(1);\n-            expect(fetchMock.calls(getExtraTableMetadataEndpoint)).toHaveLength(\n-              1,\n-            );\n-            // tab state is not updated, since the query is a data preview\n-            expect(fetchMock.calls(updateTabStateEndpoint)).toHaveLength(0);\n-          });\n+        const request = actions.addTable(\n+          query,\n+          database,\n+          tableName,\n+          schemaName,\n+        );\n+        return request(store.dispatch, store.getState).then(() => {\n+          expect(store.getActions().map(a => a.type)).toEqual(\n+            expectedActionTypes,\n+          );\n+          expect(fetchMock.calls(updateTableSchemaEndpoint)).toHaveLength(1);\n+          expect(fetchMock.calls(getTableMetadataEndpoint)).toHaveLength(1);\n+          expect(fetchMock.calls(getExtraTableMetadataEndpoint)).toHaveLength(\n+            1,\n+          );\n+          // tab state is not updated, since the query is a data preview\n+          expect(fetchMock.calls(updateTabStateEndpoint)).toHaveLength(0);\n+        });\n       });\n     });\n "
        }
    ],
    "superset-frontend/src/SqlLab/components/AceEditorWrapper/AceEditorWrapper.test.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -0,0 +1,129 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import configureStore from 'redux-mock-store';\n+import thunk from 'redux-thunk';\n+import { render, waitFor } from 'spec/helpers/testing-library';\n+import { QueryEditor } from 'src/SqlLab/types';\n+import { Store } from 'redux';\n+import { initialState, defaultQueryEditor } from 'src/SqlLab/fixtures';\n+import {\n+  queryEditorSetSelectedText,\n+  queryEditorSetFunctionNames,\n+  addTable,\n+} from 'src/SqlLab/actions/sqlLab';\n+import AceEditorWrapper from 'src/SqlLab/components/AceEditorWrapper';\n+import { AsyncAceEditorProps } from 'src/components/AsyncAceEditor';\n+\n+const middlewares = [thunk];\n+const mockStore = configureStore(middlewares);\n+\n+jest.mock('src/components/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select\" />\n+));\n+jest.mock('src/components/Select/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select-select\" />\n+));\n+jest.mock('src/components/Select/AsyncSelect', () => () => (\n+  <div data-test=\"mock-deprecated-async-select\" />\n+));\n+\n+jest.mock('src/components/AsyncAceEditor', () => ({\n+  FullSQLEditor: (props: AsyncAceEditorProps) => (\n+    <div data-test=\"react-ace\">{JSON.stringify(props)}</div>\n+  ),\n+}));\n+\n+const setup = (queryEditor: QueryEditor, store?: Store) =>\n+  render(\n+    <AceEditorWrapper\n+      queryEditor={queryEditor}\n+      actions={{\n+        queryEditorSetSelectedText,\n+        queryEditorSetFunctionNames,\n+        addTable,\n+      }}\n+      height=\"100px\"\n+      hotkeys={[]}\n+      database={{}}\n+      onChange={jest.fn()}\n+      onBlur={jest.fn()}\n+      autocomplete\n+    />,\n+    {\n+      useRedux: true,\n+      ...(store && { store }),\n+    },\n+  );\n+\n+describe('AceEditorWrapper', () => {\n+  it('renders ace editor including sql value', async () => {\n+    const { getByTestId } = setup(defaultQueryEditor, mockStore(initialState));\n+    await waitFor(() => expect(getByTestId('react-ace')).toBeInTheDocument());\n+\n+    expect(getByTestId('react-ace')).toHaveTextContent(\n+      JSON.stringify({ value: defaultQueryEditor.sql }).slice(1, -1),\n+    );\n+  });\n+\n+  it('renders sql from unsaved change', () => {\n+    const expectedSql = 'SELECT updated_column\\nFROM updated_table\\nWHERE';\n+    const { getByTestId } = setup(\n+      defaultQueryEditor,\n+      mockStore({\n+        ...initialState,\n+        sqlLab: {\n+          ...initialState.sqlLab,\n+          unsavedQueryEditor: {\n+            id: defaultQueryEditor.id,\n+            sql: expectedSql,\n+          },\n+        },\n+      }),\n+    );\n+\n+    expect(getByTestId('react-ace')).toHaveTextContent(\n+      JSON.stringify({ value: expectedSql }).slice(1, -1),\n+    );\n+  });\n+\n+  it('renders current sql for unrelated unsaved changes', () => {\n+    const expectedSql = 'SELECT updated_column\\nFROM updated_table\\nWHERE';\n+    const { getByTestId } = setup(\n+      defaultQueryEditor,\n+      mockStore({\n+        ...initialState,\n+        sqlLab: {\n+          ...initialState.sqlLab,\n+          unsavedQueryEditor: {\n+            id: `${defaultQueryEditor.id}-other`,\n+            sql: expectedSql,\n+          },\n+        },\n+      }),\n+    );\n+\n+    expect(getByTestId('react-ace')).not.toHaveTextContent(\n+      JSON.stringify({ value: expectedSql }).slice(1, -1),\n+    );\n+    expect(getByTestId('react-ace')).toHaveTextContent(\n+      JSON.stringify({ value: defaultQueryEditor.sql }).slice(1, -1),\n+    );\n+  });\n+});"
        }
    ],
    "superset-frontend/src/SqlLab/components/AceEditorWrapper/index.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -17,6 +17,7 @@\n  * under the License.\n  */\n import React from 'react';\n+import { connect } from 'react-redux';\n import { areArraysShallowEqual } from 'src/reduxUtils';\n import sqlKeywords from 'src/SqlLab/utils/sqlKeywords';\n import {\n@@ -30,7 +31,7 @@ import {\n   AceCompleterKeyword,\n   FullSQLEditor as AceEditor,\n } from 'src/components/AsyncAceEditor';\n-import { QueryEditor } from 'src/SqlLab/types';\n+import { QueryEditor, SchemaOption, SqlLabRootState } from 'src/SqlLab/types';\n \n type HotKey = {\n   key: string;\n@@ -39,7 +40,13 @@ type HotKey = {\n   func: () => void;\n };\n \n-interface Props {\n+type OwnProps = {\n+  queryEditor: QueryEditor;\n+  extendedTables: Array<{ name: string; columns: any[] }>;\n+  autocomplete: boolean;\n+  onChange: (sql: string) => void;\n+  onBlur: (sql: string) => void;\n+  database: any;\n   actions: {\n     queryEditorSetSelectedText: (edit: any, text: null | string) => void;\n     queryEditorSetFunctionNames: (queryEditor: object, dbId: number) => void;\n@@ -50,19 +57,19 @@ interface Props {\n       schema: any,\n     ) => void;\n   };\n-  autocomplete: boolean;\n-  onBlur: (sql: string) => void;\n+  hotkeys: HotKey[];\n+  height: string;\n+};\n+\n+type ReduxProps = {\n+  queryEditor: QueryEditor;\n   sql: string;\n-  database: any;\n-  schemas: any[];\n+  schemas: SchemaOption[];\n   tables: any[];\n   functionNames: string[];\n-  extendedTables: Array<{ name: string; columns: any[] }>;\n-  queryEditor: QueryEditor;\n-  height: string;\n-  hotkeys: HotKey[];\n-  onChange: (sql: string) => void;\n-}\n+};\n+\n+type Props = ReduxProps & OwnProps;\n \n interface State {\n   sql: string;\n@@ -286,4 +293,22 @@ class AceEditorWrapper extends React.PureComponent<Props, State> {\n   }\n }\n \n-export default AceEditorWrapper;\n+function mapStateToProps(\n+  { sqlLab: { unsavedQueryEditor } }: SqlLabRootState,\n+  { queryEditor }: OwnProps,\n+) {\n+  const currentQueryEditor = {\n+    ...queryEditor,\n+    ...(queryEditor.id === unsavedQueryEditor.id && unsavedQueryEditor),\n+  };\n+  return {\n+    queryEditor: currentQueryEditor,\n+    sql: currentQueryEditor.sql,\n+    schemas: currentQueryEditor.schemaOptions || [],\n+    tables: currentQueryEditor.tableOptions,\n+    functionNames: currentQueryEditor.functionNames,\n+  };\n+}\n+export default connect<ReduxProps, {}, OwnProps>(mapStateToProps)(\n+  AceEditorWrapper,\n+);"
        }
    ],
    "superset-frontend/src/SqlLab/components/EstimateQueryCostButton/EstimateQueryCostButton.test.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -0,0 +1,93 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import configureStore from 'redux-mock-store';\n+import thunk from 'redux-thunk';\n+import { render } from 'spec/helpers/testing-library';\n+import { Store } from 'redux';\n+import { initialState, defaultQueryEditor } from 'src/SqlLab/fixtures';\n+\n+import EstimateQueryCostButton, {\n+  EstimateQueryCostButtonProps,\n+} from 'src/SqlLab/components/EstimateQueryCostButton';\n+\n+const middlewares = [thunk];\n+const mockStore = configureStore(middlewares);\n+\n+jest.mock('src/components/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select\" />\n+));\n+jest.mock('src/components/Select/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select-select\" />\n+));\n+jest.mock('src/components/Select/AsyncSelect', () => () => (\n+  <div data-test=\"mock-deprecated-async-select\" />\n+));\n+\n+const setup = (props: Partial<EstimateQueryCostButtonProps>, store?: Store) =>\n+  render(\n+    <EstimateQueryCostButton\n+      queryEditor={defaultQueryEditor}\n+      getEstimate={jest.fn()}\n+      {...props}\n+    />,\n+    {\n+      useRedux: true,\n+      ...(store && { store }),\n+    },\n+  );\n+\n+describe('EstimateQueryCostButton', () => {\n+  it('renders EstimateQueryCostButton', async () => {\n+    const { queryByText } = setup({}, mockStore(initialState));\n+\n+    expect(queryByText('Estimate cost')).toBeTruthy();\n+  });\n+\n+  it('renders label for selected query', async () => {\n+    const queryEditorWithSelectedText = {\n+      ...defaultQueryEditor,\n+      selectedText: 'SELECT',\n+    };\n+    const { queryByText } = setup(\n+      { queryEditor: queryEditorWithSelectedText },\n+      mockStore(initialState),\n+    );\n+\n+    expect(queryByText('Estimate selected query cost')).toBeTruthy();\n+  });\n+\n+  it('renders label for selected query from unsaved', async () => {\n+    const { queryByText } = setup(\n+      {},\n+      mockStore({\n+        ...initialState,\n+        sqlLab: {\n+          ...initialState.sqlLab,\n+          unsavedQueryEditor: {\n+            id: defaultQueryEditor.id,\n+            selectedText: 'SELECT',\n+          },\n+        },\n+      }),\n+    );\n+\n+    expect(queryByText('Estimate selected query cost')).toBeTruthy();\n+  });\n+});"
        }
    ],
    "superset-frontend/src/SqlLab/components/EstimateQueryCostButton/index.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -24,23 +24,37 @@ import Button from 'src/components/Button';\n import Loading from 'src/components/Loading';\n import ModalTrigger from 'src/components/ModalTrigger';\n import { EmptyWrapperType } from 'src/components/TableView/TableView';\n+import {\n+  SqlLabRootState,\n+  QueryCostEstimate,\n+  QueryEditor,\n+} from 'src/SqlLab/types';\n+import { getUpToDateQuery } from 'src/SqlLab/actions/sqlLab';\n+import { useSelector } from 'react-redux';\n \n-interface EstimateQueryCostButtonProps {\n+export interface EstimateQueryCostButtonProps {\n   getEstimate: Function;\n-  queryCostEstimate: Record<string, any>;\n-  selectedText?: string;\n+  queryEditor: QueryEditor;\n   tooltip?: string;\n   disabled?: boolean;\n }\n \n const EstimateQueryCostButton = ({\n   getEstimate,\n-  queryCostEstimate = {},\n-  selectedText,\n+  queryEditor,\n   tooltip = '',\n   disabled = false,\n }: EstimateQueryCostButtonProps) => {\n-  const { cost } = queryCostEstimate;\n+  const queryCostEstimate = useSelector<\n+    SqlLabRootState,\n+    QueryCostEstimate | undefined\n+  >(state => state.sqlLab.queryCostEstimates?.[queryEditor.id]);\n+  const selectedText = useSelector<SqlLabRootState, string | undefined>(\n+    rootState =>\n+      (getUpToDateQuery(rootState, queryEditor) as unknown as QueryEditor)\n+        .selectedText,\n+  );\n+  const { cost } = queryCostEstimate || {};\n   const tableData = useMemo(() => (Array.isArray(cost) ? cost : []), [cost]);\n   const columns = useMemo(\n     () =>\n@@ -57,16 +71,16 @@ const EstimateQueryCostButton = ({\n   };\n \n   const renderModalBody = () => {\n-    if (queryCostEstimate.error !== null) {\n+    if (queryCostEstimate?.error) {\n       return (\n         <Alert\n           key=\"query-estimate-error\"\n           type=\"error\"\n-          message={queryCostEstimate.error}\n+          message={queryCostEstimate?.error}\n         />\n       );\n     }\n-    if (queryCostEstimate.completed) {\n+    if (queryCostEstimate?.completed) {\n       return (\n         <TableView\n           columns={columns}"
        }
    ],
    "superset-frontend/src/SqlLab/components/QueryLimitSelect/QueryLimitSelect.test.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -0,0 +1,137 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import configureStore from 'redux-mock-store';\n+import thunk from 'redux-thunk';\n+import { Store } from 'redux';\n+\n+import { render, fireEvent, waitFor } from 'spec/helpers/testing-library';\n+import userEvent from '@testing-library/user-event';\n+import { initialState, defaultQueryEditor } from 'src/SqlLab/fixtures';\n+import QueryLimitSelect, {\n+  LIMIT_DROPDOWN,\n+  QueryLimitSelectProps,\n+  convertToNumWithSpaces,\n+} from 'src/SqlLab/components/QueryLimitSelect';\n+\n+const middlewares = [thunk];\n+const mockStore = configureStore(middlewares);\n+\n+jest.mock('src/components/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select\" />\n+));\n+jest.mock('src/components/Select/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select-select\" />\n+));\n+jest.mock('src/components/Select/AsyncSelect', () => () => (\n+  <div data-test=\"mock-deprecated-async-select\" />\n+));\n+jest.mock('src/components/Icons/Icon', () => () => (\n+  <div data-test=\"mock-icons-icon\" />\n+));\n+\n+const defaultQueryLimit = 100;\n+\n+const setup = (props?: Partial<QueryLimitSelectProps>, store?: Store) =>\n+  render(\n+    <QueryLimitSelect\n+      queryEditor={defaultQueryEditor}\n+      maxRow={100000}\n+      defaultQueryLimit={defaultQueryLimit}\n+      {...props}\n+    />,\n+    {\n+      useRedux: true,\n+      ...(store && { store }),\n+    },\n+  );\n+\n+describe('QueryLimitSelect', () => {\n+  it('renders current query limit size', () => {\n+    const queryLimit = 10;\n+    const { getByText } = setup(\n+      {\n+        queryEditor: {\n+          ...defaultQueryEditor,\n+          queryLimit,\n+        },\n+      },\n+      mockStore(initialState),\n+    );\n+    expect(getByText(queryLimit)).toBeInTheDocument();\n+  });\n+\n+  it('renders default query limit for initial queryEditor', () => {\n+    const { getByText } = setup({}, mockStore(initialState));\n+    expect(getByText(defaultQueryLimit)).toBeInTheDocument();\n+  });\n+\n+  it('renders queryLimit from unsavedQueryEditor', () => {\n+    const queryLimit = 10000;\n+    const { getByText } = setup(\n+      {},\n+      mockStore({\n+        ...initialState,\n+        sqlLab: {\n+          ...initialState.sqlLab,\n+          unsavedQueryEditor: {\n+            id: defaultQueryEditor.id,\n+            queryLimit,\n+          },\n+        },\n+      }),\n+    );\n+    expect(getByText(convertToNumWithSpaces(queryLimit))).toBeInTheDocument();\n+  });\n+\n+  it('renders dropdown select', async () => {\n+    const { baseElement, getByRole } = setup({}, mockStore(initialState));\n+    const dropdown = baseElement.getElementsByClassName(\n+      'ant-dropdown-trigger',\n+    )[0];\n+\n+    userEvent.click(dropdown);\n+    await waitFor(() => expect(getByRole('menu')).toBeInTheDocument());\n+  });\n+\n+  it('dispatches QUERY_EDITOR_SET_QUERY_LIMIT action on dropdown menu click', async () => {\n+    const store = mockStore(initialState);\n+    const expectedIndex = 1;\n+    const { baseElement, getAllByRole, getByRole } = setup({}, store);\n+    const dropdown = baseElement.getElementsByClassName(\n+      'ant-dropdown-trigger',\n+    )[0];\n+\n+    userEvent.click(dropdown);\n+    await waitFor(() => expect(getByRole('menu')).toBeInTheDocument());\n+\n+    const menu = getAllByRole('menuitem')[expectedIndex];\n+    expect(store.getActions()).toEqual([]);\n+    fireEvent.click(menu);\n+    await waitFor(() =>\n+      expect(store.getActions()).toEqual([\n+        {\n+          type: 'QUERY_EDITOR_SET_QUERY_LIMIT',\n+          queryLimit: LIMIT_DROPDOWN[expectedIndex],\n+          queryEditor: defaultQueryEditor,\n+        },\n+      ]),\n+    );\n+  });\n+});"
        }
    ],
    "superset-frontend/src/SqlLab/components/QueryLimitSelect/index.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -0,0 +1,118 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import { useSelector, useDispatch } from 'react-redux';\n+import { styled, useTheme } from '@superset-ui/core';\n+import { AntdDropdown } from 'src/components';\n+import { Menu } from 'src/components/Menu';\n+import Icons from 'src/components/Icons';\n+import { SqlLabRootState, QueryEditor } from 'src/SqlLab/types';\n+import { queryEditorSetQueryLimit } from 'src/SqlLab/actions/sqlLab';\n+\n+export interface QueryLimitSelectProps {\n+  queryEditor: QueryEditor;\n+  maxRow: number;\n+  defaultQueryLimit: number;\n+}\n+\n+export const LIMIT_DROPDOWN = [10, 100, 1000, 10000, 100000];\n+\n+export function convertToNumWithSpaces(num: number) {\n+  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1 ');\n+}\n+\n+const LimitSelectStyled = styled.span`\n+  ${({ theme }) => `\n+    .ant-dropdown-trigger {\n+      align-items: center;\n+      color: ${theme.colors.grayscale.dark2};\n+      display: flex;\n+      font-size: 12px;\n+      margin-right: ${theme.gridUnit * 2}px;\n+      text-decoration: none;\n+      border: 0;\n+      background: transparent;\n+      span {\n+        display: inline-block;\n+        margin-right: ${theme.gridUnit * 2}px;\n+        &:last-of-type: {\n+          margin-right: ${theme.gridUnit * 4}px;\n+        }\n+      }\n+    }\n+  `}\n+`;\n+\n+function renderQueryLimit(\n+  maxRow: number,\n+  setQueryLimit: (limit: number) => void,\n+) {\n+  // Adding SQL_MAX_ROW value to dropdown\n+  LIMIT_DROPDOWN.push(maxRow);\n+\n+  return (\n+    <Menu>\n+      {[...new Set(LIMIT_DROPDOWN)].map(limit => (\n+        <Menu.Item key={`${limit}`} onClick={() => setQueryLimit(limit)}>\n+          {/* // eslint-disable-line no-use-before-define */}\n+          <a role=\"button\">{convertToNumWithSpaces(limit)}</a>{' '}\n+        </Menu.Item>\n+      ))}\n+    </Menu>\n+  );\n+}\n+\n+const QueryLimitSelect = ({\n+  queryEditor,\n+  maxRow,\n+  defaultQueryLimit,\n+}: QueryLimitSelectProps) => {\n+  const queryLimit = useSelector<SqlLabRootState, number>(\n+    ({ sqlLab: { unsavedQueryEditor } }) => {\n+      const updatedQueryEditor = {\n+        ...queryEditor,\n+        ...(unsavedQueryEditor.id === queryEditor.id && unsavedQueryEditor),\n+      };\n+      return updatedQueryEditor.queryLimit || defaultQueryLimit;\n+    },\n+  );\n+  const dispatch = useDispatch();\n+  const setQueryLimit = (updatedQueryLimit: number) =>\n+    dispatch(queryEditorSetQueryLimit(queryEditor, updatedQueryLimit));\n+  const theme = useTheme();\n+\n+  return (\n+    <LimitSelectStyled>\n+      <AntdDropdown\n+        overlay={renderQueryLimit(maxRow, setQueryLimit)}\n+        trigger={['click']}\n+      >\n+        <button type=\"button\" onClick={e => e.preventDefault()}>\n+          <span>LIMIT:</span>\n+          <span className=\"limitDropdown\">\n+            {convertToNumWithSpaces(queryLimit)}\n+          </span>\n+          <Icons.TriangleDown iconColor={theme.colors.grayscale.base} />\n+        </button>\n+      </AntdDropdown>\n+    </LimitSelectStyled>\n+  );\n+};\n+\n+export default QueryLimitSelect;"
        }
    ],
    "superset-frontend/src/SqlLab/components/RunQueryActionButton/RunQueryActionButton.test.jsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -1,53 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *   http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.\n- */\n-import React from 'react';\n-import { mount } from 'enzyme';\n-import { supersetTheme, ThemeProvider } from '@superset-ui/core';\n-import RunQueryActionButton from 'src/SqlLab/components/RunQueryActionButton';\n-import Button from 'src/components/Button';\n-\n-describe('RunQueryActionButton', () => {\n-  let wrapper;\n-  const defaultProps = {\n-    allowAsync: false,\n-    dbId: 1,\n-    queryState: 'pending',\n-    runQuery: () => {}, // eslint-disable-line\n-    selectedText: null,\n-    stopQuery: () => {}, // eslint-disable-line\n-    sql: '',\n-  };\n-\n-  beforeEach(() => {\n-    wrapper = mount(<RunQueryActionButton {...defaultProps} />, {\n-      wrappingComponent: ThemeProvider,\n-      wrappingComponentProps: { theme: supersetTheme },\n-    });\n-  });\n-\n-  it('is a valid react element', () => {\n-    expect(\n-      React.isValidElement(<RunQueryActionButton {...defaultProps} />),\n-    ).toBe(true);\n-  });\n-\n-  it('renders a single Button', () => {\n-    expect(wrapper.find(Button)).toExist();\n-  });\n-});"
        }
    ],
    "superset-frontend/src/SqlLab/components/RunQueryActionButton/RunQueryActionButton.test.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -0,0 +1,151 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import configureStore from 'redux-mock-store';\n+import thunk from 'redux-thunk';\n+import { Store } from 'redux';\n+\n+import { render, fireEvent, waitFor } from 'spec/helpers/testing-library';\n+import { initialState, defaultQueryEditor } from 'src/SqlLab/fixtures';\n+import RunQueryActionButton, {\n+  Props,\n+} from 'src/SqlLab/components/RunQueryActionButton';\n+\n+const middlewares = [thunk];\n+const mockStore = configureStore(middlewares);\n+\n+jest.mock('src/components/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select\" />\n+));\n+jest.mock('src/components/Select/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select-select\" />\n+));\n+jest.mock('src/components/Select/AsyncSelect', () => () => (\n+  <div data-test=\"mock-deprecated-async-select\" />\n+));\n+\n+const defaultProps = {\n+  queryEditor: defaultQueryEditor,\n+  allowAsync: false,\n+  dbId: 1,\n+  queryState: 'ready',\n+  runQuery: jest.fn(),\n+  selectedText: null,\n+  stopQuery: jest.fn(),\n+  overlayCreateAsMenu: null,\n+};\n+\n+const setup = (props?: Partial<Props>, store?: Store) =>\n+  render(<RunQueryActionButton {...defaultProps} {...props} />, {\n+    useRedux: true,\n+    ...(store && { store }),\n+  });\n+\n+describe('RunQueryActionButton', () => {\n+  beforeEach(() => {\n+    defaultProps.runQuery.mockReset();\n+    defaultProps.stopQuery.mockReset();\n+  });\n+\n+  it('renders a single Button', () => {\n+    const { getByRole } = setup({}, mockStore(initialState));\n+    expect(getByRole('button')).toBeInTheDocument();\n+  });\n+\n+  it('renders a label for Run Query', () => {\n+    const { getByText } = setup({}, mockStore(initialState));\n+    expect(getByText('Run')).toBeInTheDocument();\n+  });\n+\n+  it('renders a label for Selected Query', () => {\n+    const { getByText } = setup(\n+      {},\n+      mockStore({\n+        ...initialState,\n+        sqlLab: {\n+          ...initialState.sqlLab,\n+          unsavedQueryEditor: {\n+            id: defaultQueryEditor.id,\n+            selectedText: 'FROM',\n+          },\n+        },\n+      }),\n+    );\n+    expect(getByText('Run selection')).toBeInTheDocument();\n+  });\n+\n+  it('disable button when sql from unsaved changes is empty', () => {\n+    const { getByRole } = setup(\n+      {},\n+      mockStore({\n+        ...initialState,\n+        sqlLab: {\n+          ...initialState.sqlLab,\n+          unsavedQueryEditor: {\n+            id: defaultQueryEditor.id,\n+            sql: '',\n+          },\n+        },\n+      }),\n+    );\n+    const button = getByRole('button');\n+    expect(button).toBeDisabled();\n+  });\n+\n+  it('enable default button for unrelated unsaved changes', () => {\n+    const { getByRole } = setup(\n+      {},\n+      mockStore({\n+        ...initialState,\n+        sqlLab: {\n+          ...initialState.sqlLab,\n+          unsavedQueryEditor: {\n+            id: `${defaultQueryEditor.id}-other`,\n+            sql: '',\n+          },\n+        },\n+      }),\n+    );\n+    const button = getByRole('button');\n+    expect(button).toBeEnabled();\n+  });\n+\n+  it('dispatch runQuery on click', async () => {\n+    const { getByRole } = setup({}, mockStore(initialState));\n+    const button = getByRole('button');\n+    expect(defaultProps.runQuery).toHaveBeenCalledTimes(0);\n+    fireEvent.click(button);\n+    await waitFor(() => expect(defaultProps.runQuery).toHaveBeenCalledTimes(1));\n+  });\n+\n+  describe('on running state', () => {\n+    it('dispatch stopQuery on click', async () => {\n+      const { getByRole } = setup(\n+        { queryState: 'running' },\n+        mockStore(initialState),\n+      );\n+      const button = getByRole('button');\n+      expect(defaultProps.stopQuery).toHaveBeenCalledTimes(0);\n+      fireEvent.click(button);\n+      await waitFor(() =>\n+        expect(defaultProps.stopQuery).toHaveBeenCalledTimes(1),\n+      );\n+    });\n+  });\n+});"
        }
    ],
    "superset-frontend/src/SqlLab/components/RunQueryActionButton/index.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -24,15 +24,20 @@ import Button from 'src/components/Button';\n import Icons from 'src/components/Icons';\n import { DropdownButton } from 'src/components/DropdownButton';\n import { detectOS } from 'src/utils/common';\n-import { QueryButtonProps } from 'src/SqlLab/types';\n+import { shallowEqual, useSelector } from 'react-redux';\n+import {\n+  QueryEditor,\n+  SqlLabRootState,\n+  QueryButtonProps,\n+} from 'src/SqlLab/types';\n+import { getUpToDateQuery } from 'src/SqlLab/actions/sqlLab';\n \n-interface Props {\n+export interface Props {\n+  queryEditor: QueryEditor;\n   allowAsync: boolean;\n   queryState?: string;\n   runQuery: (c?: boolean) => void;\n-  selectedText?: string;\n   stopQuery: () => void;\n-  sql: string;\n   overlayCreateAsMenu: typeof Menu | null;\n }\n \n@@ -83,16 +88,27 @@ const StyledButton = styled.span`\n \n const RunQueryActionButton = ({\n   allowAsync = false,\n+  queryEditor,\n   queryState,\n-  selectedText,\n-  sql = '',\n   overlayCreateAsMenu,\n   runQuery,\n   stopQuery,\n }: Props) => {\n   const theme = useTheme();\n-\n   const userOS = detectOS();\n+  const { selectedText, sql } = useSelector<\n+    SqlLabRootState,\n+    Pick<QueryEditor, 'selectedText' | 'sql'>\n+  >(rootState => {\n+    const currentQueryEditor = getUpToDateQuery(\n+      rootState,\n+      queryEditor,\n+    ) as unknown as QueryEditor;\n+    return {\n+      selectedText: currentQueryEditor.selectedText,\n+      sql: currentQueryEditor.sql,\n+    };\n+  }, shallowEqual);\n \n   const shouldShowStopBtn =\n     !!queryState && ['running', 'pending'].indexOf(queryState) > -1;\n@@ -101,7 +117,7 @@ const RunQueryActionButton = ({\n     ? (DropdownButton as React.FC)\n     : Button;\n \n-  const isDisabled = !sql.trim();\n+  const isDisabled = !sql || !sql.trim();\n \n   const stopButtonTooltipText = useMemo(\n     () =>"
        }
    ],
    "superset-frontend/src/SqlLab/components/SaveQuery/SaveQuery.test.jsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -17,18 +17,19 @@\n  * under the License.\n  */\n import React from 'react';\n+import configureStore from 'redux-mock-store';\n+import thunk from 'redux-thunk';\n import { render, screen, waitFor } from 'spec/helpers/testing-library';\n import userEvent from '@testing-library/user-event';\n import SaveQuery from 'src/SqlLab/components/SaveQuery';\n-import { databases } from 'src/SqlLab/fixtures';\n+import { initialState, databases } from 'src/SqlLab/fixtures';\n \n const mockedProps = {\n-  query: {\n+  queryEditor: {\n     dbId: 1,\n     schema: 'main',\n     sql: 'SELECT * FROM t',\n   },\n-  defaultLabel: 'untitled',\n   animation: false,\n   database: databases.result[0],\n   onUpdate: () => {},\n@@ -43,17 +44,26 @@ const splitSaveBtnProps = {\n   },\n };\n \n+const middlewares = [thunk];\n+const mockStore = configureStore(middlewares);\n+\n describe('SavedQuery', () => {\n   it('renders a non-split save button when allows_virtual_table_explore is not enabled', () => {\n-    render(<SaveQuery {...mockedProps} />, { useRedux: true });\n+    render(<SaveQuery {...mockedProps} />, {\n+      useRedux: true,\n+      store: mockStore(initialState),\n+    });\n \n     const saveBtn = screen.getByRole('button', { name: /save/i });\n \n     expect(saveBtn).toBeVisible();\n   });\n \n   it('renders a save query modal when user clicks save button', () => {\n-    render(<SaveQuery {...mockedProps} />, { useRedux: true });\n+    render(<SaveQuery {...mockedProps} />, {\n+      useRedux: true,\n+      store: mockStore(initialState),\n+    });\n \n     const saveBtn = screen.getByRole('button', { name: /save/i });\n     userEvent.click(saveBtn);\n@@ -66,7 +76,10 @@ describe('SavedQuery', () => {\n   });\n \n   it('renders the save query modal UI', () => {\n-    render(<SaveQuery {...mockedProps} />, { useRedux: true });\n+    render(<SaveQuery {...mockedProps} />, {\n+      useRedux: true,\n+      store: mockStore(initialState),\n+    });\n \n     const saveBtn = screen.getByRole('button', { name: /save/i });\n     userEvent.click(saveBtn);\n@@ -100,12 +113,15 @@ describe('SavedQuery', () => {\n   it('renders a \"save as new\" and \"update\" button if query already exists', () => {\n     const props = {\n       ...mockedProps,\n-      query: {\n+      queryEditor: {\n         ...mockedProps.query,\n         remoteId: '42',\n       },\n     };\n-    render(<SaveQuery {...props} />, { useRedux: true });\n+    render(<SaveQuery {...props} />, {\n+      useRedux: true,\n+      store: mockStore(initialState),\n+    });\n \n     const saveBtn = screen.getByRole('button', { name: /save/i });\n     userEvent.click(saveBtn);\n@@ -118,7 +134,10 @@ describe('SavedQuery', () => {\n   });\n \n   it('renders a split save button when allows_virtual_table_explore is enabled', async () => {\n-    render(<SaveQuery {...splitSaveBtnProps} />, { useRedux: true });\n+    render(<SaveQuery {...splitSaveBtnProps} />, {\n+      useRedux: true,\n+      store: mockStore(initialState),\n+    });\n \n     await waitFor(() => {\n       const saveBtn = screen.getByRole('button', { name: /save/i });\n@@ -130,7 +149,10 @@ describe('SavedQuery', () => {\n   });\n \n   it('renders a save dataset modal when user clicks \"save dataset\" menu item', async () => {\n-    render(<SaveQuery {...splitSaveBtnProps} />, { useRedux: true });\n+    render(<SaveQuery {...splitSaveBtnProps} />, {\n+      useRedux: true,\n+      store: mockStore(initialState),\n+    });\n \n     await waitFor(() => {\n       const caretBtn = screen.getByRole('button', { name: /caret-down/i });\n@@ -146,7 +168,10 @@ describe('SavedQuery', () => {\n   });\n \n   it('renders the save dataset modal UI', async () => {\n-    render(<SaveQuery {...splitSaveBtnProps} />, { useRedux: true });\n+    render(<SaveQuery {...splitSaveBtnProps} />, {\n+      useRedux: true,\n+      store: mockStore(initialState),\n+    });\n \n     await waitFor(() => {\n       const caretBtn = screen.getByRole('button', { name: /caret-down/i });"
        }
    ],
    "superset-frontend/src/SqlLab/components/SaveQuery/index.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -17,6 +17,7 @@\n  * under the License.\n  */\n import React, { useState, useEffect } from 'react';\n+import { useSelector, shallowEqual } from 'react-redux';\n import { Row, Col } from 'src/components';\n import { Input, TextArea } from 'src/components/Input';\n import { t, styled } from '@superset-ui/core';\n@@ -25,12 +26,16 @@ import { Menu } from 'src/components/Menu';\n import { Form, FormItem } from 'src/components/Form';\n import Modal from 'src/components/Modal';\n import SaveDatasetActionButton from 'src/SqlLab/components/SaveDatasetActionButton';\n-import { SaveDatasetModal } from 'src/SqlLab/components/SaveDatasetModal';\n+import {\n+  SaveDatasetModal,\n+  ISaveableDatasource,\n+} from 'src/SqlLab/components/SaveDatasetModal';\n import { getDatasourceAsSaveableDataset } from 'src/utils/datasourceUtils';\n+import { QueryEditor, SqlLabRootState } from 'src/SqlLab/types';\n \n interface SaveQueryProps {\n-  query: QueryPayload;\n-  defaultLabel: string;\n+  queryEditor: QueryEditor;\n+  columns: ISaveableDatasource['columns'];\n   onSave: (arg0: QueryPayload) => void;\n   onUpdate: (arg0: QueryPayload) => void;\n   saveQueryWarning: string | null;\n@@ -76,13 +81,22 @@ const Styles = styled.span`\n `;\n \n export default function SaveQuery({\n-  query,\n-  defaultLabel = t('Undefined'),\n+  queryEditor,\n   onSave = () => {},\n   onUpdate,\n   saveQueryWarning = null,\n   database,\n+  columns,\n }: SaveQueryProps) {\n+  const query = useSelector<SqlLabRootState, QueryEditor>(\n+    ({ sqlLab: { unsavedQueryEditor } }) => ({\n+      ...queryEditor,\n+      ...(queryEditor.id === unsavedQueryEditor.id && unsavedQueryEditor),\n+      columns,\n+    }),\n+    shallowEqual,\n+  );\n+  const defaultLabel = query.name || query.description || t('Undefined');\n   const [description, setDescription] = useState<string>(\n     query.description || '',\n   );\n@@ -100,11 +114,12 @@ export default function SaveQuery({\n     </Menu>\n   );\n \n-  const queryPayload = () => ({\n-    ...query,\n-    name: label,\n-    description,\n-  });\n+  const queryPayload = () =>\n+    ({\n+      ...query,\n+      name: label,\n+      description,\n+    } as any as QueryPayload);\n \n   useEffect(() => {\n     if (!isSaved) setLabel(defaultLabel);"
        }
    ],
    "superset-frontend/src/SqlLab/components/SqlEditor/SqlEditor.test.jsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -40,15 +40,44 @@ import {\n } from 'src/SqlLab/actions/sqlLab';\n import { EmptyStateBig } from 'src/components/EmptyState';\n import waitForComponentToPaint from 'spec/helpers/waitForComponentToPaint';\n-import { initialState, queries, table } from 'src/SqlLab/fixtures';\n+import {\n+  initialState,\n+  queries,\n+  table,\n+  defaultQueryEditor,\n+} from 'src/SqlLab/fixtures';\n \n const MOCKED_SQL_EDITOR_HEIGHT = 500;\n \n fetchMock.get('glob:*/api/v1/database/*', { result: [] });\n \n const middlewares = [thunk];\n const mockStore = configureStore(middlewares);\n-const store = mockStore(initialState);\n+const store = mockStore({\n+  ...initialState,\n+  sqlLab: {\n+    ...initialState.sqlLab,\n+    databases: {\n+      dbid1: {\n+        allow_ctas: false,\n+        allow_cvas: false,\n+        allow_dml: false,\n+        allow_file_upload: false,\n+        allow_multi_schema_metadata_fetch: false,\n+        allow_run_async: false,\n+        backend: 'postgresql',\n+        database_name: 'examples',\n+        expose_in_sqllab: true,\n+        force_ctas_schema: null,\n+        id: 1,\n+      },\n+    },\n+    unsavedQueryEditor: {\n+      id: defaultQueryEditor.id,\n+      dbId: 'dbid1',\n+    },\n+  },\n+});\n \n describe('SqlEditor', () => {\n   const mockedProps = {\n@@ -57,21 +86,9 @@ describe('SqlEditor', () => {\n       queryEditorSetSelectedText,\n       queryEditorSetSchemaOptions,\n       addDangerToast: jest.fn(),\n+      removeDataPreview: jest.fn(),\n     },\n-    database: {\n-      allow_ctas: false,\n-      allow_cvas: false,\n-      allow_dml: false,\n-      allow_file_upload: false,\n-      allow_multi_schema_metadata_fetch: false,\n-      allow_run_async: false,\n-      backend: 'postgresql',\n-      database_name: 'examples',\n-      expose_in_sqllab: true,\n-      force_ctas_schema: null,\n-      id: 1,\n-    },\n-    queryEditorId: initialState.sqlLab.queryEditors[0].id,\n+    queryEditor: initialState.sqlLab.queryEditors[0],\n     latestQuery: queries[0],\n     tables: [table],\n     getHeight: () => '100px',\n@@ -94,8 +111,8 @@ describe('SqlEditor', () => {\n     );\n \n   it('does not render SqlEditor if no db selected', () => {\n-    const database = {};\n-    const updatedProps = { ...mockedProps, database };\n+    const queryEditor = initialState.sqlLab.queryEditors[1];\n+    const updatedProps = { ...mockedProps, queryEditor };\n     const wrapper = buildWrapper(updatedProps);\n     expect(wrapper.find(EmptyStateBig)).toExist();\n   });"
        }
    ],
    "superset-frontend/src/SqlLab/components/SqlEditor/index.jsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -43,10 +43,10 @@ import {\n   persistEditorHeight,\n   postStopQuery,\n   queryEditorSetAutorun,\n-  queryEditorSetQueryLimit,\n   queryEditorSetSql,\n   queryEditorSetAndSaveSql,\n   queryEditorSetTemplateParams,\n+  runQueryFromSqlEditor,\n   runQuery,\n   saveQuery,\n   addSavedQueryToTabState,\n@@ -79,8 +79,8 @@ import SqlEditorLeftBar from '../SqlEditorLeftBar';\n import AceEditorWrapper from '../AceEditorWrapper';\n import RunQueryActionButton from '../RunQueryActionButton';\n import { newQueryTabName } from '../../utils/newQueryTabName';\n+import QueryLimitSelect from '../QueryLimitSelect';\n \n-const LIMIT_DROPDOWN = [10, 100, 1000, 10000, 100000];\n const SQL_EDITOR_PADDING = 10;\n const INITIAL_NORTH_PERCENT = 30;\n const INITIAL_SOUTH_PERCENT = 70;\n@@ -96,26 +96,6 @@ const validatorMap =\n   bootstrapData?.common?.conf?.SQL_VALIDATORS_BY_ENGINE || {};\n const scheduledQueriesConf = bootstrapData?.common?.conf?.SCHEDULED_QUERIES;\n \n-const LimitSelectStyled = styled.span`\n-  ${({ theme }) => `\n-    .ant-dropdown-trigger {\n-      align-items: center;\n-      color: ${theme.colors.grayscale.dark2};\n-      display: flex;\n-      font-size: 12px;\n-      margin-right: ${theme.gridUnit * 2}px;\n-      text-decoration: none;\n-      span {\n-        display: inline-block;\n-        margin-right: ${theme.gridUnit * 2}px;\n-        &:last-of-type: {\n-          margin-right: ${theme.gridUnit * 4}px;\n-        }\n-      }\n-    }\n-  `}\n-`;\n-\n const StyledToolbar = styled.div`\n   padding: ${({ theme }) => theme.gridUnit * 2}px;\n   background: ${({ theme }) => theme.colors.grayscale.light5};\n@@ -154,7 +134,7 @@ const propTypes = {\n   tables: PropTypes.array.isRequired,\n   editorQueries: PropTypes.array.isRequired,\n   dataPreviewQueries: PropTypes.array.isRequired,\n-  queryEditorId: PropTypes.string.isRequired,\n+  queryEditor: PropTypes.object.isRequired,\n   hideLeftBar: PropTypes.bool,\n   defaultQueryLimit: PropTypes.number.isRequired,\n   maxRow: PropTypes.number.isRequired,\n@@ -205,7 +185,6 @@ class SqlEditor extends React.PureComponent {\n     );\n     this.queryPane = this.queryPane.bind(this);\n     this.getHotkeyConfig = this.getHotkeyConfig.bind(this);\n-    this.renderQueryLimit = this.renderQueryLimit.bind(this);\n     this.getAceEditorAndSouthPaneHeights =\n       this.getAceEditorAndSouthPaneHeights.bind(this);\n     this.getSqlEditorHeight = this.getSqlEditorHeight.bind(this);\n@@ -382,21 +361,10 @@ class SqlEditor extends React.PureComponent {\n     this.props.queryEditorSetAndSaveSql(this.props.queryEditor, sql);\n   }\n \n-  setQueryLimit(queryLimit) {\n-    this.props.queryEditorSetQueryLimit(this.props.queryEditor, queryLimit);\n-  }\n-\n   getQueryCostEstimate() {\n     if (this.props.database) {\n       const qe = this.props.queryEditor;\n-      const query = {\n-        dbId: qe.dbId,\n-        sql: qe.selectedText ? qe.selectedText : this.props.queryEditor.sql,\n-        sqlEditorId: qe.id,\n-        schema: qe.schema,\n-        templateParams: qe.templateParams,\n-      };\n-      this.props.estimateQueryCost(query);\n+      this.props.estimateQueryCost(qe);\n     }\n   }\n \n@@ -425,16 +393,9 @@ class SqlEditor extends React.PureComponent {\n   }\n \n   requestValidation(sql) {\n-    if (this.props.database) {\n-      const qe = this.props.queryEditor;\n-      const query = {\n-        dbId: qe.dbId,\n-        sql,\n-        sqlEditorId: qe.id,\n-        schema: qe.schema,\n-        templateParams: qe.templateParams,\n-      };\n-      this.props.validateQuery(query);\n+    const { database, queryEditor, validateQuery } = this.props;\n+    if (database) {\n+      validateQuery(queryEditor, sql);\n     }\n   }\n \n@@ -458,25 +419,22 @@ class SqlEditor extends React.PureComponent {\n   }\n \n   startQuery(ctas = false, ctas_method = CtasEnum.TABLE) {\n-    const qe = this.props.queryEditor;\n-    const query = {\n-      dbId: qe.dbId,\n-      sql: qe.selectedText ? qe.selectedText : qe.sql,\n-      sqlEditorId: qe.id,\n-      tab: qe.name,\n-      schema: qe.schema,\n-      tempTable: ctas ? this.state.ctas : '',\n-      templateParams: qe.templateParams,\n-      queryLimit: qe.queryLimit || this.props.defaultQueryLimit,\n-      runAsync: this.props.database\n-        ? this.props.database.allow_run_async\n-        : false,\n+    const {\n+      database,\n+      runQueryFromSqlEditor,\n+      setActiveSouthPaneTab,\n+      queryEditor,\n+      defaultQueryLimit,\n+    } = this.props;\n+    runQueryFromSqlEditor(\n+      database,\n+      queryEditor,\n+      defaultQueryLimit,\n+      ctas ? this.state.ctas : '',\n       ctas,\n       ctas_method,\n-      updateTabState: !qe.selectedText,\n-    };\n-    this.props.runQuery(query);\n-    this.props.setActiveSouthPaneTab('Results');\n+    );\n+    setActiveSouthPaneTab('Results');\n   }\n \n   stopQuery() {\n@@ -529,11 +487,7 @@ class SqlEditor extends React.PureComponent {\n             onBlur={this.setQueryEditorSql}\n             onChange={this.onSqlChanged}\n             queryEditor={this.props.queryEditor}\n-            sql={this.props.queryEditor.sql}\n             database={this.props.database}\n-            schemas={this.props.queryEditor.schemaOptions}\n-            tables={this.props.queryEditor.tableOptions}\n-            functionNames={this.props.queryEditor.functionNames}\n             extendedTables={this.props.tables}\n             height={`${aceEditorHeight}px`}\n             hotkeys={hotkeys}\n@@ -577,7 +531,7 @@ class SqlEditor extends React.PureComponent {\n               onChange={params => {\n                 this.props.actions.queryEditorSetTemplateParams(qe, params);\n               }}\n-              code={qe.templateParams}\n+              queryEditor={qe}\n             />\n           </Menu.Item>\n         )}\n@@ -599,25 +553,6 @@ class SqlEditor extends React.PureComponent {\n     );\n   }\n \n-  renderQueryLimit() {\n-    // Adding SQL_MAX_ROW value to dropdown\n-    const { maxRow } = this.props;\n-    LIMIT_DROPDOWN.push(maxRow);\n-\n-    return (\n-      <Menu>\n-        {[...new Set(LIMIT_DROPDOWN)].map(limit => (\n-          <Menu.Item key={`${limit}`} onClick={() => this.setQueryLimit(limit)}>\n-            {/* // eslint-disable-line no-use-before-define */}\n-            <a role=\"button\" styling=\"link\">\n-              {this.convertToNumWithSpaces(limit)}\n-            </a>{' '}\n-          </Menu.Item>\n-        ))}\n-      </Menu>\n-    );\n-  }\n-\n   async saveQuery(query) {\n     const { queryEditor: qe, actions } = this.props;\n     const savedQuery = await actions.saveQuery(query);\n@@ -673,11 +608,10 @@ class SqlEditor extends React.PureComponent {\n                   ? this.props.database.allow_run_async\n                   : false\n               }\n+              queryEditor={qe}\n               queryState={this.props.latestQuery?.state}\n               runQuery={this.runQuery}\n-              selectedText={qe.selectedText}\n               stopQuery={this.stopQuery}\n-              sql={this.props.queryEditor.sql}\n               overlayCreateAsMenu={showMenu ? runMenuBtn : null}\n             />\n           </span>\n@@ -687,27 +621,17 @@ class SqlEditor extends React.PureComponent {\n               <span>\n                 <EstimateQueryCostButton\n                   getEstimate={this.getQueryCostEstimate}\n-                  queryCostEstimate={qe.queryCostEstimate}\n-                  selectedText={qe.selectedText}\n+                  queryEditor={qe}\n                   tooltip={t('Estimate the cost before running a query')}\n                 />\n               </span>\n             )}\n           <span>\n-            <LimitSelectStyled>\n-              <AntdDropdown overlay={this.renderQueryLimit()} trigger=\"click\">\n-                <a onClick={e => e.preventDefault()}>\n-                  <span>LIMIT:</span>\n-                  <span className=\"limitDropdown\">\n-                    {this.convertToNumWithSpaces(\n-                      this.props.queryEditor.queryLimit ||\n-                        this.props.defaultQueryLimit,\n-                    )}\n-                  </span>\n-                  <Icons.TriangleDown iconColor={theme.colors.grayscale.base} />\n-                </a>\n-              </AntdDropdown>\n-            </LimitSelectStyled>\n+            <QueryLimitSelect\n+              queryEditor={this.props.queryEditor}\n+              maxRow={this.props.maxRow}\n+              defaultQueryLimit={this.props.defaultQueryLimit}\n+            />\n           </span>\n           {this.props.latestQuery && (\n             <Timer\n@@ -721,11 +645,8 @@ class SqlEditor extends React.PureComponent {\n         <div className=\"rightItems\">\n           <span>\n             <SaveQuery\n-              query={{\n-                ...qe,\n-                columns: this.props.latestQuery?.results?.columns || [],\n-              }}\n-              defaultLabel={qe.name || qe.description}\n+              queryEditor={qe}\n+              columns={this.props.latestQuery?.results?.columns || []}\n               onSave={this.saveQuery}\n               onUpdate={this.props.actions.updateSavedQuery}\n               saveQueryWarning={this.props.saveQueryWarning}\n@@ -832,12 +753,22 @@ class SqlEditor extends React.PureComponent {\n SqlEditor.defaultProps = defaultProps;\n SqlEditor.propTypes = propTypes;\n \n-function mapStateToProps({ sqlLab }, props) {\n-  const queryEditor = sqlLab.queryEditors.find(\n-    editor => editor.id === props.queryEditorId,\n-  );\n-\n-  return { sqlLab, ...props, queryEditor, queryEditors: sqlLab.queryEditors };\n+function mapStateToProps({ sqlLab }, { queryEditor }) {\n+  let { latestQueryId, dbId } = queryEditor;\n+  if (sqlLab.unsavedQueryEditor.id === queryEditor.id) {\n+    const { latestQueryId: unsavedQID, dbId: unsavedDBID } =\n+      sqlLab.unsavedQueryEditor;\n+    latestQueryId = unsavedQID || latestQueryId;\n+    dbId = unsavedDBID || dbId;\n+  }\n+  const database = sqlLab.databases[dbId];\n+  const latestQuery = sqlLab.queries[latestQueryId];\n+\n+  return {\n+    queryEditors: sqlLab.queryEditors,\n+    latestQuery,\n+    database,\n+  };\n }\n \n function mapDispatchToProps(dispatch) {\n@@ -848,10 +779,10 @@ function mapDispatchToProps(dispatch) {\n       persistEditorHeight,\n       postStopQuery,\n       queryEditorSetAutorun,\n-      queryEditorSetQueryLimit,\n       queryEditorSetSql,\n       queryEditorSetAndSaveSql,\n       queryEditorSetTemplateParams,\n+      runQueryFromSqlEditor,\n       runQuery,\n       saveQuery,\n       addSavedQueryToTabState,"
        }
    ],
    "superset-frontend/src/SqlLab/components/SqlEditorLeftBar/index.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -32,7 +32,7 @@ import Collapse from 'src/components/Collapse';\n import Icons from 'src/components/Icons';\n import { TableSelectorMultiple } from 'src/components/TableSelector';\n import { IconTooltip } from 'src/components/IconTooltip';\n-import { QueryEditor } from 'src/SqlLab/types';\n+import { QueryEditor, SchemaOption } from 'src/SqlLab/types';\n import { DatabaseObject } from 'src/components/DatabaseSelector';\n import { EmptyStateSmall } from 'src/components/EmptyState';\n import {\n@@ -55,7 +55,10 @@ interface actionsTypes {\n   setDatabases: (arg0: any) => {};\n   addDangerToast: (msg: string) => void;\n   queryEditorSetSchema: (queryEditor: QueryEditor, schema?: string) => void;\n-  queryEditorSetSchemaOptions: () => void;\n+  queryEditorSetSchemaOptions: (\n+    queryEditor: QueryEditor,\n+    options: SchemaOption[],\n+  ) => void;\n   queryEditorSetTableOptions: (\n     queryEditor: QueryEditor,\n     options: Array<any>,\n@@ -70,7 +73,6 @@ interface SqlEditorLeftBarProps {\n   actions: actionsTypes & TableElementProps['actions'];\n   database: DatabaseObject;\n   setEmptyState: Dispatch<SetStateAction<boolean>>;\n-  showDisabled: boolean;\n }\n \n const StyledScrollbarContainer = styled.div`\n@@ -239,6 +241,15 @@ export default function SqlEditorLeftBar({\n     [actions],\n   );\n \n+  const handleSchemasLoad = React.useCallback(\n+    (options: Array<any>) => {\n+      if (queryEditorRef.current) {\n+        actions.queryEditorSetSchemaOptions(queryEditorRef.current, options);\n+      }\n+    },\n+    [actions],\n+  );\n+\n   return (\n     <div className=\"SqlEditorLeftBar\">\n       <TableSelectorMultiple\n@@ -249,7 +260,7 @@ export default function SqlEditorLeftBar({\n         handleError={actions.addDangerToast}\n         onDbChange={onDbChange}\n         onSchemaChange={handleSchemaChange}\n-        onSchemasLoad={actions.queryEditorSetSchemaOptions}\n+        onSchemasLoad={handleSchemasLoad}\n         onTableSelectChange={onTablesChange}\n         onTablesLoad={handleTablesLoad}\n         schema={queryEditor.schema}"
        }
    ],
    "superset-frontend/src/SqlLab/components/SqlEditorTabHeader/SqlEditorTabHeader.test.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -0,0 +1,220 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import configureStore from 'redux-mock-store';\n+import thunk from 'redux-thunk';\n+import {\n+  fireEvent,\n+  screen,\n+  render,\n+  waitFor,\n+} from 'spec/helpers/testing-library';\n+import userEvent from '@testing-library/user-event';\n+import { QueryEditor } from 'src/SqlLab/types';\n+import {\n+  initialState,\n+  defaultQueryEditor,\n+  extraQueryEditor1,\n+  extraQueryEditor2,\n+} from 'src/SqlLab/fixtures';\n+import { Store } from 'redux';\n+import {\n+  REMOVE_QUERY_EDITOR,\n+  QUERY_EDITOR_SET_TITLE,\n+  ADD_QUERY_EDITOR,\n+  QUERY_EDITOR_TOGGLE_LEFT_BAR,\n+} from 'src/SqlLab/actions/sqlLab';\n+import SqlEditorTabHeader from 'src/SqlLab/components/SqlEditorTabHeader';\n+\n+jest.mock('src/components/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select\" />\n+));\n+jest.mock('src/components/Select/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select-select\" />\n+));\n+jest.mock('src/components/Select/AsyncSelect', () => () => (\n+  <div data-test=\"mock-async-select\" />\n+));\n+\n+const middlewares = [thunk];\n+const mockStore = configureStore(middlewares);\n+const setup = (queryEditor: QueryEditor, store?: Store) =>\n+  render(<SqlEditorTabHeader queryEditor={queryEditor} />, {\n+    useRedux: true,\n+    ...(store && { store }),\n+  });\n+\n+describe('SqlEditorTabHeader', () => {\n+  it('renders name', () => {\n+    const { queryByText } = setup(defaultQueryEditor, mockStore(initialState));\n+    expect(queryByText(defaultQueryEditor.name)).toBeTruthy();\n+    expect(queryByText(extraQueryEditor1.name)).toBeFalsy();\n+    expect(queryByText(extraQueryEditor2.name)).toBeFalsy();\n+  });\n+\n+  it('renders name from unsaved changes', () => {\n+    const expectedTitle = 'updated title';\n+    const { queryByText } = setup(\n+      defaultQueryEditor,\n+      mockStore({\n+        ...initialState,\n+        sqlLab: {\n+          ...initialState.sqlLab,\n+          unsavedQueryEditor: {\n+            id: defaultQueryEditor.id,\n+            name: expectedTitle,\n+          },\n+        },\n+      }),\n+    );\n+    expect(queryByText(expectedTitle)).toBeTruthy();\n+    expect(queryByText(defaultQueryEditor.name)).toBeFalsy();\n+    expect(queryByText(extraQueryEditor1.name)).toBeFalsy();\n+    expect(queryByText(extraQueryEditor2.name)).toBeFalsy();\n+  });\n+\n+  it('renders current name for unrelated unsaved changes', () => {\n+    const unrelatedTitle = 'updated title';\n+    const { queryByText } = setup(\n+      defaultQueryEditor,\n+      mockStore({\n+        ...initialState,\n+        sqlLab: {\n+          ...initialState.sqlLab,\n+          unsavedQueryEditor: {\n+            id: `${defaultQueryEditor.id}-other`,\n+            name: unrelatedTitle,\n+          },\n+        },\n+      }),\n+    );\n+    expect(queryByText(defaultQueryEditor.name)).toBeTruthy();\n+    expect(queryByText(unrelatedTitle)).toBeFalsy();\n+    expect(queryByText(extraQueryEditor1.name)).toBeFalsy();\n+    expect(queryByText(extraQueryEditor2.name)).toBeFalsy();\n+  });\n+\n+  describe('with dropdown menus', () => {\n+    let store = mockStore();\n+    beforeEach(async () => {\n+      store = mockStore(initialState);\n+      const { getByTestId } = setup(defaultQueryEditor, store);\n+      const dropdown = getByTestId('dropdown-trigger');\n+\n+      userEvent.click(dropdown);\n+    });\n+\n+    it('should dispatch removeQueryEditor action', async () => {\n+      await waitFor(() =>\n+        expect(screen.getByTestId('close-tab-menu-option')).toBeInTheDocument(),\n+      );\n+\n+      fireEvent.click(screen.getByTestId('close-tab-menu-option'));\n+\n+      const actions = store.getActions();\n+      await waitFor(() =>\n+        expect(actions[0]).toEqual({\n+          type: REMOVE_QUERY_EDITOR,\n+          queryEditor: defaultQueryEditor,\n+        }),\n+      );\n+    });\n+\n+    it('should dispatch queryEditorSetTitle action', async () => {\n+      await waitFor(() =>\n+        expect(screen.getByTestId('close-tab-menu-option')).toBeInTheDocument(),\n+      );\n+      const expectedTitle = 'typed text';\n+      const mockPrompt = jest\n+        .spyOn(window, 'prompt')\n+        .mockImplementation(() => expectedTitle);\n+      fireEvent.click(screen.getByTestId('rename-tab-menu-option'));\n+\n+      const actions = store.getActions();\n+      await waitFor(() =>\n+        expect(actions[0]).toEqual({\n+          type: QUERY_EDITOR_SET_TITLE,\n+          name: expectedTitle,\n+          queryEditor: expect.objectContaining({\n+            id: defaultQueryEditor.id,\n+          }),\n+        }),\n+      );\n+      mockPrompt.mockClear();\n+    });\n+\n+    it('should dispatch toggleLeftBar action', async () => {\n+      await waitFor(() =>\n+        expect(screen.getByTestId('close-tab-menu-option')).toBeInTheDocument(),\n+      );\n+      fireEvent.click(screen.getByTestId('toggle-menu-option'));\n+\n+      const actions = store.getActions();\n+      await waitFor(() =>\n+        expect(actions[0]).toEqual({\n+          type: QUERY_EDITOR_TOGGLE_LEFT_BAR,\n+          hideLeftBar: !defaultQueryEditor.hideLeftBar,\n+          queryEditor: expect.objectContaining({\n+            id: defaultQueryEditor.id,\n+          }),\n+        }),\n+      );\n+    });\n+\n+    it('should dispatch removeAllOtherQueryEditors action', async () => {\n+      await waitFor(() =>\n+        expect(screen.getByTestId('close-tab-menu-option')).toBeInTheDocument(),\n+      );\n+      fireEvent.click(screen.getByTestId('close-all-other-menu-option'));\n+\n+      const actions = store.getActions();\n+      await waitFor(() =>\n+        expect(actions).toEqual([\n+          {\n+            type: REMOVE_QUERY_EDITOR,\n+            queryEditor: initialState.sqlLab.queryEditors[1],\n+          },\n+          {\n+            type: REMOVE_QUERY_EDITOR,\n+            queryEditor: initialState.sqlLab.queryEditors[2],\n+          },\n+        ]),\n+      );\n+    });\n+\n+    it('should dispatch cloneQueryToNewTab action', async () => {\n+      await waitFor(() =>\n+        expect(screen.getByTestId('close-tab-menu-option')).toBeInTheDocument(),\n+      );\n+      fireEvent.click(screen.getByTestId('clone-tab-menu-option'));\n+\n+      const actions = store.getActions();\n+      await waitFor(() =>\n+        expect(actions[0]).toEqual({\n+          type: ADD_QUERY_EDITOR,\n+          queryEditor: expect.objectContaining({\n+            name: `Copy of ${defaultQueryEditor.name}`,\n+            sql: defaultQueryEditor.sql,\n+            autorun: false,\n+          }),\n+        }),\n+      );\n+    });\n+  });\n+});"
        }
    ],
    "superset-frontend/src/SqlLab/components/SqlEditorTabHeader/index.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -0,0 +1,147 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React, { useMemo } from 'react';\n+import { bindActionCreators } from 'redux';\n+import { useSelector, useDispatch, shallowEqual } from 'react-redux';\n+import { Dropdown } from 'src/components/Dropdown';\n+import { Menu } from 'src/components/Menu';\n+import { styled, t, QueryState } from '@superset-ui/core';\n+import {\n+  removeQueryEditor,\n+  removeAllOtherQueryEditors,\n+  queryEditorSetTitle,\n+  cloneQueryToNewTab,\n+  toggleLeftBar,\n+} from 'src/SqlLab/actions/sqlLab';\n+import { QueryEditor, SqlLabRootState } from 'src/SqlLab/types';\n+import TabStatusIcon from '../TabStatusIcon';\n+\n+const TabTitleWrapper = styled.div`\n+  display: flex;\n+  align-items: center;\n+`;\n+const TabTitle = styled.span`\n+  margin-right: ${({ theme }) => theme.gridUnit * 2}px;\n+  text-transform: none;\n+`;\n+\n+interface Props {\n+  queryEditor: QueryEditor;\n+}\n+\n+const SqlEditorTabHeader: React.FC<Props> = ({ queryEditor }) => {\n+  const qe = useSelector<SqlLabRootState, QueryEditor>(\n+    ({ sqlLab: { unsavedQueryEditor } }) => ({\n+      ...queryEditor,\n+      ...(queryEditor.id === unsavedQueryEditor.id && unsavedQueryEditor),\n+    }),\n+    shallowEqual,\n+  );\n+  const queryStatus = useSelector<SqlLabRootState, QueryState>(\n+    ({ sqlLab }) => sqlLab.queries[qe.latestQueryId || '']?.state || '',\n+  );\n+  const dispatch = useDispatch();\n+  const actions = useMemo(\n+    () =>\n+      bindActionCreators(\n+        {\n+          removeQueryEditor,\n+          removeAllOtherQueryEditors,\n+          queryEditorSetTitle,\n+          cloneQueryToNewTab,\n+          toggleLeftBar,\n+        },\n+        dispatch,\n+      ),\n+    [dispatch],\n+  );\n+\n+  function renameTab() {\n+    const newTitle = prompt(t('Enter a new title for the tab'));\n+    if (newTitle) {\n+      actions.queryEditorSetTitle(qe, newTitle);\n+    }\n+  }\n+\n+  return (\n+    <TabTitleWrapper>\n+      <Dropdown\n+        trigger={['click']}\n+        overlay={\n+          <Menu style={{ width: 176 }}>\n+            <Menu.Item\n+              className=\"close-btn\"\n+              key=\"1\"\n+              onClick={() => actions.removeQueryEditor(qe)}\n+              data-test=\"close-tab-menu-option\"\n+            >\n+              <div className=\"icon-container\">\n+                <i className=\"fa fa-close\" />\n+              </div>\n+              {t('Close tab')}\n+            </Menu.Item>\n+            <Menu.Item\n+              key=\"2\"\n+              onClick={renameTab}\n+              data-test=\"rename-tab-menu-option\"\n+            >\n+              <div className=\"icon-container\">\n+                <i className=\"fa fa-i-cursor\" />\n+              </div>\n+              {t('Rename tab')}\n+            </Menu.Item>\n+            <Menu.Item\n+              key=\"3\"\n+              onClick={() => actions.toggleLeftBar(qe)}\n+              data-test=\"toggle-menu-option\"\n+            >\n+              <div className=\"icon-container\">\n+                <i className=\"fa fa-cogs\" />\n+              </div>\n+              {qe.hideLeftBar ? t('Expand tool bar') : t('Hide tool bar')}\n+            </Menu.Item>\n+            <Menu.Item\n+              key=\"4\"\n+              onClick={() => actions.removeAllOtherQueryEditors(qe)}\n+              data-test=\"close-all-other-menu-option\"\n+            >\n+              <div className=\"icon-container\">\n+                <i className=\"fa fa-times-circle-o\" />\n+              </div>\n+              {t('Close all other tabs')}\n+            </Menu.Item>\n+            <Menu.Item\n+              key=\"5\"\n+              onClick={() => actions.cloneQueryToNewTab(qe, false)}\n+              data-test=\"clone-tab-menu-option\"\n+            >\n+              <div className=\"icon-container\">\n+                <i className=\"fa fa-files-o\" />\n+              </div>\n+              {t('Duplicate tab')}\n+            </Menu.Item>\n+          </Menu>\n+        }\n+      />\n+      <TabTitle>{qe.name}</TabTitle> <TabStatusIcon tabState={queryStatus} />{' '}\n+    </TabTitleWrapper>\n+  );\n+};\n+\n+export default SqlEditorTabHeader;"
        }
    ],
    "superset-frontend/src/SqlLab/components/TabbedSqlEditors/TabbedSqlEditors.test.jsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -30,6 +30,7 @@ import { EditableTabs } from 'src/components/Tabs';\n import TabbedSqlEditors from 'src/SqlLab/components/TabbedSqlEditors';\n import SqlEditor from 'src/SqlLab/components/SqlEditor';\n import { table, initialState } from 'src/SqlLab/fixtures';\n+import { newQueryTabName } from 'src/SqlLab/utils/newQueryTabName';\n \n fetchMock.get('glob:*/api/v1/database/*', {});\n fetchMock.get('glob:*/savedqueryviewapi/api/get/*', {});\n@@ -150,18 +151,6 @@ describe('TabbedSqlEditors', () => {\n       );\n     });\n   });\n-  it('should rename Tab', () => {\n-    global.prompt = () => 'new title';\n-    wrapper = getWrapper();\n-    sinon.stub(wrapper.instance().props.actions, 'queryEditorSetTitle');\n-\n-    wrapper.instance().renameTab(queryEditors[0]);\n-    expect(\n-      wrapper.instance().props.actions.queryEditorSetTitle.getCall(0).args[1],\n-    ).toBe('new title');\n-\n-    delete global.prompt;\n-  });\n   it('should removeQueryEditor', () => {\n     wrapper = getWrapper();\n     sinon.stub(wrapper.instance().props.actions, 'removeQueryEditor');\n@@ -183,11 +172,11 @@ describe('TabbedSqlEditors', () => {\n   it('should properly increment query tab name', () => {\n     wrapper = getWrapper();\n     sinon.stub(wrapper.instance().props.actions, 'addQueryEditor');\n-\n+    const newTitle = newQueryTabName(wrapper.instance().props.queryEditors);\n     wrapper.instance().newQueryEditor();\n     expect(\n       wrapper.instance().props.actions.addQueryEditor.getCall(0).args[0].name,\n-    ).toContain('Untitled Query 2');\n+    ).toContain(newTitle);\n   });\n   it('should duplicate query editor', () => {\n     wrapper = getWrapper();"
        }
    ],
    "superset-frontend/src/SqlLab/components/TabbedSqlEditors/index.jsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -18,9 +18,7 @@\n  */\n import React from 'react';\n import PropTypes from 'prop-types';\n-import { Dropdown } from 'src/components/Dropdown';\n import { EditableTabs } from 'src/components/Tabs';\n-import { Menu } from 'src/components/Menu';\n import { connect } from 'react-redux';\n import { bindActionCreators } from 'redux';\n import URI from 'urijs';\n@@ -33,7 +31,7 @@ import * as Actions from 'src/SqlLab/actions/sqlLab';\n import { EmptyStateBig } from 'src/components/EmptyState';\n import { newQueryTabName } from '../../utils/newQueryTabName';\n import SqlEditor from '../SqlEditor';\n-import TabStatusIcon from '../TabStatusIcon';\n+import SqlEditorTabHeader from '../SqlEditorTabHeader';\n \n const propTypes = {\n   actions: PropTypes.object.isRequired,\n@@ -44,7 +42,6 @@ const propTypes = {\n   databases: PropTypes.object.isRequired,\n   queries: PropTypes.object.isRequired,\n   queryEditors: PropTypes.array,\n-  requestedQuery: PropTypes.object,\n   tabHistory: PropTypes.array.isRequired,\n   tables: PropTypes.array.isRequired,\n   offline: PropTypes.bool,\n@@ -54,16 +51,10 @@ const propTypes = {\n const defaultProps = {\n   queryEditors: [],\n   offline: false,\n-  requestedQuery: null,\n   saveQueryWarning: null,\n   scheduleQueryWarning: null,\n };\n \n-const TabTitleWrapper = styled.div`\n-  display: flex;\n-  align-items: center;\n-`;\n-\n const StyledTab = styled.span`\n   line-height: 24px;\n `;\n@@ -86,10 +77,6 @@ class TabbedSqlEditors extends React.PureComponent {\n       dataPreviewQueries: [],\n     };\n     this.removeQueryEditor = this.removeQueryEditor.bind(this);\n-    this.renameTab = this.renameTab.bind(this);\n-    this.toggleLeftBar = this.toggleLeftBar.bind(this);\n-    this.removeAllOtherQueryEditors =\n-      this.removeAllOtherQueryEditors.bind(this);\n     this.duplicateQueryEditor = this.duplicateQueryEditor.bind(this);\n     this.handleSelect = this.handleSelect.bind(this);\n     this.handleEdit = this.handleEdit.bind(this);\n@@ -236,14 +223,6 @@ class TabbedSqlEditors extends React.PureComponent {\n     window.history.replaceState({}, document.title, this.state.sqlLabUrl);\n   }\n \n-  renameTab(qe) {\n-    /* eslint no-alert: 0 */\n-    const newTitle = prompt(t('Enter a new title for the tab'));\n-    if (newTitle) {\n-      this.props.actions.queryEditorSetTitle(qe, newTitle);\n-    }\n-  }\n-\n   activeQueryEditor() {\n     if (this.props.tabHistory.length === 0) {\n       return this.props.queryEditors[0];\n@@ -304,106 +283,34 @@ class TabbedSqlEditors extends React.PureComponent {\n     this.props.actions.removeQueryEditor(qe);\n   }\n \n-  removeAllOtherQueryEditors(cqe) {\n-    this.props.queryEditors.forEach(\n-      qe => qe !== cqe && this.removeQueryEditor(qe),\n-    );\n-  }\n-\n   duplicateQueryEditor(qe) {\n     this.props.actions.cloneQueryToNewTab(qe, false);\n   }\n \n-  toggleLeftBar(qe) {\n-    this.props.actions.toggleLeftBar(qe);\n-  }\n-\n   render() {\n     const noQueryEditors = this.props.queryEditors?.length === 0;\n-    const editors = this.props.queryEditors.map(qe => {\n-      let latestQuery;\n-      if (qe.latestQueryId) {\n-        latestQuery = this.props.queries[qe.latestQueryId];\n-      }\n-      let database;\n-      if (qe.dbId) {\n-        database = this.props.databases[qe.dbId];\n-      }\n-      const state = latestQuery ? latestQuery.state : '';\n-\n-      const menu = (\n-        <Menu style={{ width: 176 }}>\n-          <Menu.Item\n-            className=\"close-btn\"\n-            key=\"1\"\n-            onClick={() => this.removeQueryEditor(qe)}\n-            data-test=\"close-tab-menu-option\"\n-          >\n-            <div className=\"icon-container\">\n-              <i className=\"fa fa-close\" />\n-            </div>\n-            {t('Close tab')}\n-          </Menu.Item>\n-          <Menu.Item key=\"2\" onClick={() => this.renameTab(qe)}>\n-            <div className=\"icon-container\">\n-              <i className=\"fa fa-i-cursor\" />\n-            </div>\n-            {t('Rename tab')}\n-          </Menu.Item>\n-          <Menu.Item key=\"3\" onClick={() => this.toggleLeftBar(qe)}>\n-            <div className=\"icon-container\">\n-              <i className=\"fa fa-cogs\" />\n-            </div>\n-            {qe.hideLeftBar ? t('Expand tool bar') : t('Hide tool bar')}\n-          </Menu.Item>\n-          <Menu.Item\n-            key=\"4\"\n-            onClick={() => this.removeAllOtherQueryEditors(qe)}\n-          >\n-            <div className=\"icon-container\">\n-              <i className=\"fa fa-times-circle-o\" />\n-            </div>\n-            {t('Close all other tabs')}\n-          </Menu.Item>\n-          <Menu.Item key=\"5\" onClick={() => this.duplicateQueryEditor(qe)}>\n-            <div className=\"icon-container\">\n-              <i className=\"fa fa-files-o\" />\n-            </div>\n-            {t('Duplicate tab')}\n-          </Menu.Item>\n-        </Menu>\n-      );\n-      const tabHeader = (\n-        <TabTitleWrapper>\n-          <Dropdown overlay={menu} trigger={['click']} />\n-          <TabTitle>{qe.name}</TabTitle> <TabStatusIcon tabState={state} />{' '}\n-        </TabTitleWrapper>\n-      );\n-      return (\n-        <EditableTabs.TabPane\n-          key={qe.id}\n-          tab={tabHeader}\n-          // for tests - key prop isn't handled by enzyme well bcs it's a react keyword\n-          data-key={qe.id}\n-        >\n-          <SqlEditor\n-            tables={this.props.tables.filter(xt => xt.queryEditorId === qe.id)}\n-            queryEditorId={qe.id}\n-            editorQueries={this.state.queriesArray}\n-            dataPreviewQueries={this.state.dataPreviewQueries}\n-            latestQuery={latestQuery}\n-            database={database}\n-            actions={this.props.actions}\n-            hideLeftBar={qe.hideLeftBar}\n-            defaultQueryLimit={this.props.defaultQueryLimit}\n-            maxRow={this.props.maxRow}\n-            displayLimit={this.props.displayLimit}\n-            saveQueryWarning={this.props.saveQueryWarning}\n-            scheduleQueryWarning={this.props.scheduleQueryWarning}\n-          />\n-        </EditableTabs.TabPane>\n-      );\n-    });\n+    const editors = this.props.queryEditors?.map(qe => (\n+      <EditableTabs.TabPane\n+        key={qe.id}\n+        tab={<SqlEditorTabHeader queryEditor={qe} />}\n+        // for tests - key prop isn't handled by enzyme well bcs it's a react keyword\n+        data-key={qe.id}\n+      >\n+        <SqlEditor\n+          tables={this.props.tables.filter(xt => xt.queryEditorId === qe.id)}\n+          queryEditor={qe}\n+          editorQueries={this.state.queriesArray}\n+          dataPreviewQueries={this.state.dataPreviewQueries}\n+          actions={this.props.actions}\n+          hideLeftBar={qe.hideLeftBar}\n+          defaultQueryLimit={this.props.defaultQueryLimit}\n+          maxRow={this.props.maxRow}\n+          displayLimit={this.props.displayLimit}\n+          saveQueryWarning={this.props.saveQueryWarning}\n+          scheduleQueryWarning={this.props.scheduleQueryWarning}\n+        />\n+      </EditableTabs.TabPane>\n+    ));\n \n     const emptyTab = (\n       <StyledTab>\n@@ -472,7 +379,7 @@ class TabbedSqlEditors extends React.PureComponent {\n TabbedSqlEditors.propTypes = propTypes;\n TabbedSqlEditors.defaultProps = defaultProps;\n \n-function mapStateToProps({ sqlLab, common, requestedQuery }) {\n+function mapStateToProps({ sqlLab, common }) {\n   return {\n     databases: sqlLab.databases,\n     queryEditors: sqlLab.queryEditors,\n@@ -486,7 +393,6 @@ function mapStateToProps({ sqlLab, common, requestedQuery }) {\n     maxRow: common.conf.SQL_MAX_ROW,\n     saveQueryWarning: common.conf.SQLLAB_SAVE_WARNING_MESSAGE,\n     scheduleQueryWarning: common.conf.SQLLAB_SCHEDULE_WARNING_MESSAGE,\n-    requestedQuery,\n   };\n }\n function mapDispatchToProps(dispatch) {"
        }
    ],
    "superset-frontend/src/SqlLab/components/TemplateParamsEditor/TemplateParamsEditor.test.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -17,38 +17,100 @@\n  * under the License.\n  */\n \n-import React, { ReactNode } from 'react';\n+import React from 'react';\n+import configureStore from 'redux-mock-store';\n+import thunk from 'redux-thunk';\n+import { Store } from 'redux';\n import {\n   render,\n   fireEvent,\n   getByText,\n   waitFor,\n } from 'spec/helpers/testing-library';\n-import { ThemeProvider, supersetTheme } from '@superset-ui/core';\n+import { initialState, defaultQueryEditor } from 'src/SqlLab/fixtures';\n \n-import TemplateParamsEditor from 'src/SqlLab/components/TemplateParamsEditor';\n+import TemplateParamsEditor, {\n+  Props,\n+} from 'src/SqlLab/components/TemplateParamsEditor';\n \n-const ThemeWrapper = ({ children }: { children: ReactNode }) => (\n-  <ThemeProvider theme={supersetTheme}>{children}</ThemeProvider>\n-);\n+jest.mock('src/components/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select\" />\n+));\n+jest.mock('src/components/Select/Select', () => () => (\n+  <div data-test=\"mock-deprecated-select-select\" />\n+));\n+jest.mock('src/components/Select/AsyncSelect', () => () => (\n+  <div data-test=\"mock-async-select\" />\n+));\n+jest.mock('src/components/AsyncAceEditor', () => ({\n+  ConfigEditor: ({ value }: { value: string }) => (\n+    <div data-test=\"mock-async-ace-editor\">{value}</div>\n+  ),\n+}));\n+\n+const middlewares = [thunk];\n+const mockStore = configureStore(middlewares);\n+const setup = (otherProps: Partial<Props> = {}, store?: Store) =>\n+  render(\n+    <TemplateParamsEditor\n+      language=\"json\"\n+      onChange={() => {}}\n+      queryEditor={defaultQueryEditor}\n+      {...otherProps}\n+    />,\n+    {\n+      useRedux: true,\n+      store: mockStore(initialState),\n+      ...(store && { store }),\n+    },\n+  );\n \n describe('TemplateParamsEditor', () => {\n   it('should render with a title', () => {\n-    const { container } = render(\n-      <TemplateParamsEditor code=\"FOO\" language=\"json\" onChange={() => {}} />,\n-      { wrapper: ThemeWrapper },\n-    );\n+    const { container } = setup();\n     expect(container.querySelector('div[role=\"button\"]')).toBeInTheDocument();\n   });\n \n   it('should open a modal with the ace editor', async () => {\n-    const { container, baseElement } = render(\n-      <TemplateParamsEditor code=\"FOO\" language=\"json\" onChange={() => {}} />,\n-      { wrapper: ThemeWrapper },\n+    const { container, getByTestId } = setup();\n+    fireEvent.click(getByText(container, 'Parameters'));\n+    await waitFor(() => {\n+      expect(getByTestId('mock-async-ace-editor')).toBeInTheDocument();\n+    });\n+  });\n+\n+  it('renders templateParams', async () => {\n+    const { container, getByTestId } = setup();\n+    fireEvent.click(getByText(container, 'Parameters'));\n+    await waitFor(() => {\n+      expect(getByTestId('mock-async-ace-editor')).toBeInTheDocument();\n+    });\n+    expect(getByTestId('mock-async-ace-editor')).toHaveTextContent(\n+      defaultQueryEditor.templateParams,\n+    );\n+  });\n+\n+  it('renders code from unsaved changes', async () => {\n+    const expectedCode = 'custom code value';\n+    const { container, getByTestId } = setup(\n+      {},\n+      mockStore({\n+        ...initialState,\n+        sqlLab: {\n+          ...initialState.sqlLab,\n+          unsavedQueryEditor: {\n+            id: defaultQueryEditor.id,\n+            templateParams: expectedCode,\n+          },\n+        },\n+      }),\n     );\n     fireEvent.click(getByText(container, 'Parameters'));\n     await waitFor(() => {\n-      expect(baseElement.querySelector('#ace-editor')).toBeInTheDocument();\n+      expect(getByTestId('mock-async-ace-editor')).toBeInTheDocument();\n     });\n+    expect(getByTestId('mock-async-ace-editor')).toHaveTextContent(\n+      expectedCode,\n+    );\n   });\n });"
        }
    ],
    "superset-frontend/src/SqlLab/components/TemplateParamsEditor/index.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -26,24 +26,34 @@ import ModalTrigger from 'src/components/ModalTrigger';\n import { ConfigEditor } from 'src/components/AsyncAceEditor';\n import { FAST_DEBOUNCE } from 'src/constants';\n import { Tooltip } from 'src/components/Tooltip';\n+import { useSelector } from 'react-redux';\n+import { QueryEditor, SqlLabRootState } from 'src/SqlLab/types';\n+import { getUpToDateQuery } from 'src/SqlLab/actions/sqlLab';\n \n const StyledConfigEditor = styled(ConfigEditor)`\n   &.ace_editor {\n     border: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n   }\n `;\n \n+export type Props = {\n+  queryEditor: QueryEditor;\n+  language: 'yaml' | 'json';\n+  onChange: () => void;\n+};\n+\n function TemplateParamsEditor({\n-  code = '{}',\n+  queryEditor,\n   language,\n   onChange = () => {},\n-}: {\n-  code: string;\n-  language: 'yaml' | 'json';\n-  onChange: () => void;\n-}) {\n+}: Props) {\n   const [parsedJSON, setParsedJSON] = useState({});\n   const [isValid, setIsValid] = useState(true);\n+  const code = useSelector<SqlLabRootState, string>(\n+    rootState =>\n+      (getUpToDateQuery(rootState, queryEditor) as unknown as QueryEditor)\n+        .templateParams || '{}',\n+  );\n \n   useEffect(() => {\n     try {"
        }
    ],
    "superset-frontend/src/SqlLab/fixtures.ts": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -178,18 +178,38 @@ export const table = {\n export const defaultQueryEditor = {\n   id: 'dfsadfs',\n   autorun: false,\n-  dbId: null,\n+  dbId: undefined,\n   latestQueryId: null,\n-  selectedText: null,\n+  selectedText: undefined,\n   sql: 'SELECT *\\nFROM\\nWHERE',\n   name: 'Untitled Query 1',\n+  schema: 'main',\n+  remoteId: null,\n+  tableOptions: [],\n+  functionNames: [],\n+  hideLeftBar: false,\n   schemaOptions: [\n     {\n       value: 'main',\n       label: 'main',\n-      name: 'main',\n+      title: 'main',\n     },\n   ],\n+  templateParams: '{}',\n+};\n+\n+export const extraQueryEditor1 = {\n+  ...defaultQueryEditor,\n+  id: 'diekd23',\n+  sql: 'SELECT *\\nFROM\\nWHERE\\nLIMIT',\n+  name: 'Untitled Query 2',\n+};\n+\n+export const extraQueryEditor2 = {\n+  ...defaultQueryEditor,\n+  id: 'owkdi998',\n+  sql: 'SELECT *\\nFROM\\nWHERE\\nGROUP BY',\n+  name: 'Untitled Query 3',\n };\n \n export const queries = [\n@@ -640,13 +660,14 @@ export const initialState = {\n     alerts: [],\n     queries: {},\n     databases: {},\n-    queryEditors: [defaultQueryEditor],\n+    queryEditors: [defaultQueryEditor, extraQueryEditor1, extraQueryEditor2],\n     tabHistory: [defaultQueryEditor.id],\n     tables: [],\n     workspaceQueries: [],\n     queriesLastUpdate: 0,\n     activeSouthPaneTab: 'Results',\n     user: { user },\n+    unsavedQueryEditor: {},\n   },\n   messageToasts: [],\n   common: {"
        }
    ],
    "superset-frontend/src/SqlLab/reducers/getInitialState.js": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -37,7 +37,7 @@ export default function getInitialState({\n    * To allow for a transparent migration, the initial state is a combination\n    * of the backend state (if any) with the browser state (if any).\n    */\n-  const queryEditors = [];\n+  let queryEditors = {};\n   const defaultQueryEditor = {\n     id: null,\n     loaded: true,\n@@ -55,13 +55,9 @@ export default function getInitialState({\n       errors: [],\n       completed: false,\n     },\n-    queryCostEstimate: {\n-      cost: null,\n-      completed: false,\n-      error: null,\n-    },\n     hideLeftBar: false,\n   };\n+  let unsavedQueryEditor = {};\n \n   /**\n    * Load state from the backend. This will be empty if the feature flag\n@@ -102,7 +98,10 @@ export default function getInitialState({\n         name: label,\n       };\n     }\n-    queryEditors.push(queryEditor);\n+    queryEditors = {\n+      ...queryEditors,\n+      [queryEditor.id]: queryEditor,\n+    };\n   });\n \n   const tabHistory = activeTab ? [activeTab.id.toString()] : [];\n@@ -160,15 +159,22 @@ export default function getInitialState({\n       // migration was successful\n       localStorage.removeItem('redux');\n     } else {\n+      unsavedQueryEditor = sqlLab.unsavedQueryEditor || {};\n       // add query editors and tables to state with a special flag so they can\n       // be migrated if the `SQLLAB_BACKEND_PERSISTENCE` feature flag is on\n-      sqlLab.queryEditors.forEach(qe =>\n-        queryEditors.push({\n-          ...qe,\n-          inLocalStorage: true,\n-          loaded: true,\n-        }),\n-      );\n+      sqlLab.queryEditors.forEach(qe => {\n+        queryEditors = {\n+          ...queryEditors,\n+          [qe.id]: {\n+            ...queryEditors[qe.id],\n+            ...qe,\n+            name: qe.title || qe.name,\n+            ...(unsavedQueryEditor.id === qe.id && unsavedQueryEditor),\n+            inLocalStorage: true,\n+            loaded: true,\n+          },\n+        };\n+      });\n       sqlLab.tables.forEach(table =>\n         tables.push({ ...table, inLocalStorage: true }),\n       );\n@@ -186,11 +192,13 @@ export default function getInitialState({\n       databases,\n       offline: false,\n       queries,\n-      queryEditors,\n+      queryEditors: Object.values(queryEditors),\n       tabHistory,\n       tables,\n       queriesLastUpdate: Date.now(),\n       user,\n+      unsavedQueryEditor,\n+      queryCostEstimates: {},\n     },\n     requestedQuery,\n     messageToasts: getToastsFromPyFlashMessages("
        }
    ],
    "superset-frontend/src/SqlLab/reducers/sqlLab.js": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -31,12 +31,28 @@ import {\n   extendArr,\n } from '../../reduxUtils';\n \n+function alterUnsavedQueryEditorState(state, updatedState, id) {\n+  return {\n+    ...(state.unsavedQueryEditor.id === id && state.unsavedQueryEditor),\n+    ...(id ? { id, ...updatedState } : state.unsavedQueryEditor),\n+  };\n+}\n+\n export default function sqlLabReducer(state = {}, action) {\n   const actionHandlers = {\n     [actions.ADD_QUERY_EDITOR]() {\n-      const tabHistory = state.tabHistory.slice();\n-      tabHistory.push(action.queryEditor.id);\n-      const newState = { ...state, tabHistory };\n+      const mergeUnsavedState = alterInArr(\n+        state,\n+        'queryEditors',\n+        state.unsavedQueryEditor,\n+        {\n+          ...state.unsavedQueryEditor,\n+        },\n+      );\n+      const newState = {\n+        ...mergeUnsavedState,\n+        tabHistory: [...state.tabHistory, action.queryEditor.id],\n+      };\n       return addToArr(newState, 'queryEditors', action.queryEditor);\n     },\n     [actions.QUERY_EDITOR_SAVED]() {\n@@ -66,9 +82,14 @@ export default function sqlLabReducer(state = {}, action) {\n       );\n     },\n     [actions.CLONE_QUERY_TO_NEW_TAB]() {\n-      const progenitor = state.queryEditors.find(\n+      const queryEditor = state.queryEditors.find(\n         qe => qe.id === state.tabHistory[state.tabHistory.length - 1],\n       );\n+      const progenitor = {\n+        ...queryEditor,\n+        ...(state.unsavedQueryEditor.id === queryEditor.id &&\n+          state.unsavedQueryEditor),\n+      };\n       const qe = {\n         remoteId: progenitor.remoteId,\n         name: t('Copy of %s', progenitor.name),\n@@ -79,7 +100,14 @@ export default function sqlLabReducer(state = {}, action) {\n         queryLimit: action.query.queryLimit,\n         maxRow: action.query.maxRow,\n       };\n-      return sqlLabReducer(state, actions.addQueryEditor(qe));\n+      const stateWithoutUnsavedState = {\n+        ...state,\n+        unsavedQueryEditor: {},\n+      };\n+      return sqlLabReducer(\n+        stateWithoutUnsavedState,\n+        actions.addQueryEditor(qe),\n+      );\n     },\n     [actions.REMOVE_QUERY_EDITOR]() {\n       let newState = removeFromArr(state, 'queryEditors', action.queryEditor);\n@@ -183,16 +211,20 @@ export default function sqlLabReducer(state = {}, action) {\n       };\n     },\n     [actions.START_QUERY_VALIDATION]() {\n-      let newState = { ...state };\n-      const sqlEditor = { id: action.query.sqlEditorId };\n-      newState = alterInArr(newState, 'queryEditors', sqlEditor, {\n-        validationResult: {\n-          id: action.query.id,\n-          errors: [],\n-          completed: false,\n-        },\n-      });\n-      return newState;\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            validationResult: {\n+              id: action.query.id,\n+              errors: [],\n+              completed: false,\n+            },\n+          },\n+          action.query.sqlEditorId,\n+        ),\n+      };\n     },\n     [actions.QUERY_VALIDATION_RETURNED]() {\n       // If the server is very slow about answering us, we might get validation\n@@ -202,21 +234,29 @@ export default function sqlLabReducer(state = {}, action) {\n       // We don't care about any but the most recent because validations are\n       // only valid for the SQL text they correspond to -- once the SQL has\n       // changed, the old validation doesn't tell us anything useful anymore.\n-      const qe = getFromArr(state.queryEditors, action.query.sqlEditorId);\n+      const qe = {\n+        ...getFromArr(state.queryEditors, action.query.sqlEditorId),\n+        ...(state.unsavedQueryEditor.id === action.query.sqlEditorId &&\n+          state.unsavedQueryEditor),\n+      };\n       if (qe.validationResult.id !== action.query.id) {\n         return state;\n       }\n       // Otherwise, persist the results on the queryEditor state\n-      let newState = { ...state };\n-      const sqlEditor = { id: action.query.sqlEditorId };\n-      newState = alterInArr(newState, 'queryEditors', sqlEditor, {\n-        validationResult: {\n-          id: action.query.id,\n-          errors: action.results,\n-          completed: true,\n-        },\n-      });\n-      return newState;\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            validationResult: {\n+              id: action.query.id,\n+              errors: action.results,\n+              completed: true,\n+            },\n+          },\n+          action.query.sqlEditorId,\n+        ),\n+      };\n     },\n     [actions.QUERY_VALIDATION_FAILED]() {\n       // If the server is very slow about answering us, we might get validation\n@@ -250,45 +290,52 @@ export default function sqlLabReducer(state = {}, action) {\n       return newState;\n     },\n     [actions.COST_ESTIMATE_STARTED]() {\n-      let newState = { ...state };\n-      const sqlEditor = { id: action.query.sqlEditorId };\n-      newState = alterInArr(newState, 'queryEditors', sqlEditor, {\n-        queryCostEstimate: {\n-          completed: false,\n-          cost: null,\n-          error: null,\n+      return {\n+        ...state,\n+        queryCostEstimates: {\n+          ...state.queryCostEstimates,\n+          [action.query.sqlEditorId]: {\n+            completed: false,\n+            cost: null,\n+            error: null,\n+          },\n         },\n-      });\n-      return newState;\n+      };\n     },\n     [actions.COST_ESTIMATE_RETURNED]() {\n-      let newState = { ...state };\n-      const sqlEditor = { id: action.query.sqlEditorId };\n-      newState = alterInArr(newState, 'queryEditors', sqlEditor, {\n-        queryCostEstimate: {\n-          completed: true,\n-          cost: action.json,\n-          error: null,\n+      return {\n+        ...state,\n+        queryCostEstimates: {\n+          ...state.queryCostEstimates,\n+          [action.query.sqlEditorId]: {\n+            completed: true,\n+            cost: action.json,\n+            error: null,\n+          },\n         },\n-      });\n-      return newState;\n+      };\n     },\n     [actions.COST_ESTIMATE_FAILED]() {\n-      let newState = { ...state };\n-      const sqlEditor = { id: action.query.sqlEditorId };\n-      newState = alterInArr(newState, 'queryEditors', sqlEditor, {\n-        queryCostEstimate: {\n-          completed: false,\n-          cost: null,\n-          error: action.error,\n+      return {\n+        ...state,\n+        queryCostEstimates: {\n+          ...state.queryCostEstimates,\n+          [action.query.sqlEditorId]: {\n+            completed: false,\n+            cost: null,\n+            error: action.error,\n+          },\n         },\n-      });\n-      return newState;\n+      };\n     },\n     [actions.START_QUERY]() {\n       let newState = { ...state };\n       if (action.query.sqlEditorId) {\n-        const qe = getFromArr(state.queryEditors, action.query.sqlEditorId);\n+        const qe = {\n+          ...getFromArr(state.queryEditors, action.query.sqlEditorId),\n+          ...(action.query.sqlEditorId === state.unsavedQueryEditor.id &&\n+            state.unsavedQueryEditor),\n+        };\n         if (qe.latestQueryId && state.queries[qe.latestQueryId]) {\n           const newResults = {\n             ...state.queries[qe.latestQueryId].results,\n@@ -303,10 +350,17 @@ export default function sqlLabReducer(state = {}, action) {\n         newState.activeSouthPaneTab = action.query.id;\n       }\n       newState = addToObject(newState, 'queries', action.query);\n-      const sqlEditor = { id: action.query.sqlEditorId };\n-      return alterInArr(newState, 'queryEditors', sqlEditor, {\n-        latestQueryId: action.query.id,\n-      });\n+\n+      return {\n+        ...newState,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            latestQueryId: action.query.id,\n+          },\n+          action.query.sqlEditorId,\n+        ),\n+      };\n     },\n     [actions.STOP_QUERY]() {\n       return alterInObject(state, 'queries', action.query, {\n@@ -371,14 +425,41 @@ export default function sqlLabReducer(state = {}, action) {\n         qeIds.indexOf(action.queryEditor?.id) > -1 &&\n         state.tabHistory[state.tabHistory.length - 1] !== action.queryEditor.id\n       ) {\n-        const tabHistory = state.tabHistory.slice();\n-        tabHistory.push(action.queryEditor.id);\n-        return { ...state, tabHistory };\n+        const mergeUnsavedState = alterInArr(\n+          state,\n+          'queryEditors',\n+          state.unsavedQueryEditor,\n+          {\n+            ...state.unsavedQueryEditor,\n+          },\n+        );\n+        return {\n+          ...(action.queryEditor.id === state.unsavedQueryEditor.id\n+            ? alterInObject(\n+                mergeUnsavedState,\n+                'queryEditors',\n+                action.queryEditor,\n+                {\n+                  ...action.queryEditor,\n+                  ...state.unsavedQueryEditor,\n+                },\n+              )\n+            : mergeUnsavedState),\n+          tabHistory: [...state.tabHistory, action.queryEditor.id],\n+        };\n       }\n       return state;\n     },\n     [actions.LOAD_QUERY_EDITOR]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n+      const mergeUnsavedState = alterInArr(\n+        state,\n+        'queryEditors',\n+        state.unsavedQueryEditor,\n+        {\n+          ...state.unsavedQueryEditor,\n+        },\n+      );\n+      return alterInArr(mergeUnsavedState, 'queryEditors', action.queryEditor, {\n         ...action.queryEditor,\n       });\n     },\n@@ -441,70 +522,161 @@ export default function sqlLabReducer(state = {}, action) {\n       return { ...state, queries };\n     },\n     [actions.QUERY_EDITOR_SETDB]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        dbId: action.dbId,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            dbId: action.dbId,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_SET_FUNCTION_NAMES]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        functionNames: action.functionNames,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            functionNames: action.functionNames,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_SET_SCHEMA]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        schema: action.schema,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            schema: action.schema,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_SET_SCHEMA_OPTIONS]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        schemaOptions: action.options,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            schemaOptions: action.options,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_SET_TABLE_OPTIONS]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        tableOptions: action.options,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            tableOptions: action.options,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_SET_TITLE]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        name: action.name,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            name: action.name,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_SET_SQL]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        sql: action.sql,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            sql: action.sql,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_SET_QUERY_LIMIT]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        queryLimit: action.queryLimit,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            queryLimit: action.queryLimit,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_SET_TEMPLATE_PARAMS]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        templateParams: action.templateParams,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            templateParams: action.templateParams,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_SET_SELECTED_TEXT]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        selectedText: action.sql,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            selectedText: action.sql,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_SET_AUTORUN]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        autorun: action.autorun,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            autorun: action.autorun,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_PERSIST_HEIGHT]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        northPercent: action.northPercent,\n-        southPercent: action.southPercent,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            northPercent: action.northPercent,\n+            southPercent: action.southPercent,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.QUERY_EDITOR_TOGGLE_LEFT_BAR]() {\n-      return alterInArr(state, 'queryEditors', action.queryEditor, {\n-        hideLeftBar: action.hideLeftBar,\n-      });\n+      return {\n+        ...state,\n+        unsavedQueryEditor: alterUnsavedQueryEditorState(\n+          state,\n+          {\n+            hideLeftBar: action.hideLeftBar,\n+          },\n+          action.queryEditor.id,\n+        ),\n+      };\n     },\n     [actions.SET_DATABASES]() {\n       const databases = {};"
        }
    ],
    "superset-frontend/src/SqlLab/reducers/sqlLab.test.js": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -39,23 +39,55 @@ describe('sqlLabReducer', () => {\n       qe = newState.queryEditors.find(e => e.id === 'abcd');\n     });\n     it('should add a query editor', () => {\n-      expect(newState.queryEditors).toHaveLength(2);\n+      expect(newState.queryEditors).toHaveLength(\n+        initialState.queryEditors.length + 1,\n+      );\n+    });\n+    it('should merge the current unsaved changes when adding a query editor', () => {\n+      const expectedTitle = 'new updated title';\n+      const updateAction = {\n+        type: actions.QUERY_EDITOR_SET_TITLE,\n+        queryEditor: initialState.queryEditors[0],\n+        name: expectedTitle,\n+      };\n+      newState = sqlLabReducer(newState, updateAction);\n+      const addAction = {\n+        type: actions.ADD_QUERY_EDITOR,\n+        queryEditor: { ...initialState.queryEditors[0], id: 'efgh' },\n+      };\n+      newState = sqlLabReducer(newState, addAction);\n+\n+      expect(newState.queryEditors[0].name).toEqual(expectedTitle);\n+      expect(\n+        newState.queryEditors[newState.queryEditors.length - 1].id,\n+      ).toEqual('efgh');\n     });\n     it('should remove a query editor', () => {\n-      expect(newState.queryEditors).toHaveLength(2);\n+      expect(newState.queryEditors).toHaveLength(\n+        initialState.queryEditors.length + 1,\n+      );\n       const action = {\n         type: actions.REMOVE_QUERY_EDITOR,\n         queryEditor: qe,\n       };\n       newState = sqlLabReducer(newState, action);\n-      expect(newState.queryEditors).toHaveLength(1);\n+      expect(newState.queryEditors).toHaveLength(\n+        initialState.queryEditors.length,\n+      );\n     });\n     it('should set q query editor active', () => {\n+      const expectedTitle = 'new updated title';\n       const addQueryEditorAction = {\n         type: actions.ADD_QUERY_EDITOR,\n         queryEditor: { ...initialState.queryEditors[0], id: 'abcd' },\n       };\n       newState = sqlLabReducer(newState, addQueryEditorAction);\n+      const updateAction = {\n+        type: actions.QUERY_EDITOR_SET_TITLE,\n+        queryEditor: initialState.queryEditors[1],\n+        name: expectedTitle,\n+      };\n+      newState = sqlLabReducer(newState, updateAction);\n       const setActiveQueryEditorAction = {\n         type: actions.SET_ACTIVE_QUERY_EDITOR,\n         queryEditor: defaultQueryEditor,\n@@ -64,6 +96,7 @@ describe('sqlLabReducer', () => {\n       expect(newState.tabHistory[newState.tabHistory.length - 1]).toBe(\n         defaultQueryEditor.id,\n       );\n+      expect(newState.queryEditors[1].name).toEqual(expectedTitle);\n     });\n     it('should not fail while setting DB', () => {\n       const dbId = 9;\n@@ -73,7 +106,8 @@ describe('sqlLabReducer', () => {\n         dbId,\n       };\n       newState = sqlLabReducer(newState, action);\n-      expect(newState.queryEditors[1].dbId).toBe(dbId);\n+      expect(newState.unsavedQueryEditor.dbId).toBe(dbId);\n+      expect(newState.unsavedQueryEditor.id).toBe(qe.id);\n     });\n     it('should not fail while setting schema', () => {\n       const schema = 'foo';\n@@ -83,27 +117,31 @@ describe('sqlLabReducer', () => {\n         schema,\n       };\n       newState = sqlLabReducer(newState, action);\n-      expect(newState.queryEditors[1].schema).toBe(schema);\n+      expect(newState.unsavedQueryEditor.schema).toBe(schema);\n+      expect(newState.unsavedQueryEditor.id).toBe(qe.id);\n     });\n     it('should not fail while setting autorun', () => {\n       const action = {\n         type: actions.QUERY_EDITOR_SET_AUTORUN,\n         queryEditor: qe,\n       };\n       newState = sqlLabReducer(newState, { ...action, autorun: false });\n-      expect(newState.queryEditors[1].autorun).toBe(false);\n+      expect(newState.unsavedQueryEditor.autorun).toBe(false);\n+      expect(newState.unsavedQueryEditor.id).toBe(qe.id);\n       newState = sqlLabReducer(newState, { ...action, autorun: true });\n-      expect(newState.queryEditors[1].autorun).toBe(true);\n+      expect(newState.unsavedQueryEditor.autorun).toBe(true);\n+      expect(newState.unsavedQueryEditor.id).toBe(qe.id);\n     });\n     it('should not fail while setting title', () => {\n       const title = 'Untitled Query 1';\n       const action = {\n         type: actions.QUERY_EDITOR_SET_TITLE,\n         queryEditor: qe,\n-        title,\n+        name: title,\n       };\n       newState = sqlLabReducer(newState, action);\n-      expect(newState.queryEditors[0].name).toBe(title);\n+      expect(newState.unsavedQueryEditor.name).toBe(title);\n+      expect(newState.unsavedQueryEditor.id).toBe(qe.id);\n     });\n     it('should not fail while setting Sql', () => {\n       const sql = 'SELECT nothing from dev_null';\n@@ -113,7 +151,8 @@ describe('sqlLabReducer', () => {\n         sql,\n       };\n       newState = sqlLabReducer(newState, action);\n-      expect(newState.queryEditors[1].sql).toBe(sql);\n+      expect(newState.unsavedQueryEditor.sql).toBe(sql);\n+      expect(newState.unsavedQueryEditor.id).toBe(qe.id);\n     });\n     it('should not fail while setting queryLimit', () => {\n       const queryLimit = 101;\n@@ -123,7 +162,8 @@ describe('sqlLabReducer', () => {\n         queryLimit,\n       };\n       newState = sqlLabReducer(newState, action);\n-      expect(newState.queryEditors[1].queryLimit).toEqual(queryLimit);\n+      expect(newState.unsavedQueryEditor.queryLimit).toBe(queryLimit);\n+      expect(newState.unsavedQueryEditor.id).toBe(qe.id);\n     });\n     it('should set selectedText', () => {\n       const selectedText = 'TEST';\n@@ -132,9 +172,10 @@ describe('sqlLabReducer', () => {\n         queryEditor: newState.queryEditors[0],\n         sql: selectedText,\n       };\n-      expect(newState.queryEditors[0].selectedText).toBeNull();\n+      expect(newState.queryEditors[0].selectedText).toBeFalsy();\n       newState = sqlLabReducer(newState, action);\n-      expect(newState.queryEditors[0].selectedText).toBe(selectedText);\n+      expect(newState.unsavedQueryEditor.selectedText).toBe(selectedText);\n+      expect(newState.unsavedQueryEditor.id).toBe(newState.queryEditors[0].id);\n     });\n   });\n   describe('Tables', () => {"
        }
    ],
    "superset-frontend/src/SqlLab/types.ts": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -32,16 +32,26 @@ export type QueryDictionary = {\n };\n \n export interface QueryEditor {\n+  id: string;\n   dbId?: number;\n   name: string;\n   schema: string;\n   autorun: boolean;\n   sql: string;\n   remoteId: number | null;\n+  tableOptions: any[];\n+  schemaOptions?: SchemaOption[];\n+  functionNames: string[];\n   validationResult?: {\n     completed: boolean;\n     errors: SupersetError[];\n   };\n+  hideLeftBar?: boolean;\n+  latestQueryId?: string | null;\n+  templateParams?: string;\n+  selectedText?: string;\n+  queryLimit?: number;\n+  description?: string;\n }\n \n export type toastState = {\n@@ -59,13 +69,15 @@ export type SqlLabRootState = {\n     databases: Record<string, any>;\n     dbConnect: boolean;\n     offline: boolean;\n-    queries: Query[];\n+    queries: Record<string, Query>;\n     queryEditors: QueryEditor[];\n     tabHistory: string[]; // default is activeTab ? [activeTab.id.toString()] : []\n     tables: Record<string, any>[];\n     queriesLastUpdate: number;\n     user: UserWithPermissionsAndRoles;\n     errorMessage: string | null;\n+    unsavedQueryEditor: Partial<QueryEditor>;\n+    queryCostEstimates?: Record<string, QueryCostEstimate>;\n   };\n   localStorageUsageInKilobytes: number;\n   messageToasts: toastState[];\n@@ -113,3 +125,15 @@ export interface DatasetOptionAutocomplete {\n   datasetId: number;\n   owners: [DatasetOwner];\n }\n+\n+export interface SchemaOption {\n+  value: string;\n+  label: string;\n+  title: string;\n+}\n+\n+export interface QueryCostEstimate {\n+  completed: string;\n+  cost: Record<string, any>[];\n+  error: string;\n+}"
        }
    ],
    "superset-frontend/src/SqlLab/utils/newQueryTabName.test.ts": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -17,9 +17,11 @@\n  * under the License.\n  */\n \n+import { defaultQueryEditor } from 'src/SqlLab/fixtures';\n import { newQueryTabName } from './newQueryTabName';\n \n const emptyEditor = {\n+  ...defaultQueryEditor,\n   title: '',\n   schema: '',\n   autorun: false,"
        }
    ],
    "superset-frontend/src/components/Dropdown/index.tsx": [
        {
            "f77b910e2cc9f1bd90ac0f3a9097ec5d394b582d": "@@ -66,7 +66,7 @@ const MenuDotsWrapper = styled.div`\n   padding-left: ${({ theme }) => theme.gridUnit}px;\n `;\n \n-export interface DropdownProps {\n+export interface DropdownProps extends DropDownProps {\n   overlay: React.ReactElement;\n }\n "
        }
    ],
    "superset-frontend/plugins/legacy-plugin-chart-world-map/src/WorldMap.js": [
        {
            "4ca4a5c7cb185ac7d318ef5349fbb23cd7ce1fd1": "@@ -50,6 +50,7 @@ const formatter = getNumberFormatter();\n \n function WorldMap(element, props) {\n   const {\n+    entity,\n     data,\n     width,\n     height,\n@@ -61,6 +62,8 @@ function WorldMap(element, props) {\n     colorScheme,\n     sliceId,\n     theme,\n+    onContextMenu,\n+    inContextMenu,\n   } = props;\n   const div = d3.select(element);\n   div.classed('superset-legacy-chart-world-map', true);\n@@ -102,6 +105,22 @@ function WorldMap(element, props) {\n     mapData[d.country] = d;\n   });\n \n+  const handleContextMenu = source => {\n+    const pointerEvent = d3.event;\n+    pointerEvent.preventDefault();\n+    const val = source.id || source.country;\n+    const formattedVal = mapData[val].name;\n+    const filters = [\n+      {\n+        col: entity,\n+        op: '==',\n+        val,\n+        formattedVal,\n+      },\n+    ];\n+    onContextMenu(filters, pointerEvent.offsetX, pointerEvent.offsetY);\n+  };\n+\n   const map = new Datamap({\n     element,\n     width,\n@@ -111,8 +130,8 @@ function WorldMap(element, props) {\n       defaultFill: theme.colors.grayscale.light2,\n     },\n     geographyConfig: {\n-      popupOnHover: true,\n-      highlightOnHover: true,\n+      popupOnHover: !inContextMenu,\n+      highlightOnHover: !inContextMenu,\n       borderWidth: 1,\n       borderColor: theme.colors.grayscale.light5,\n       highlightBorderColor: theme.colors.grayscale.light5,\n@@ -127,15 +146,15 @@ function WorldMap(element, props) {\n       borderWidth: 1,\n       borderOpacity: 1,\n       borderColor: color,\n-      popupOnHover: true,\n+      popupOnHover: !inContextMenu,\n       radius: null,\n       popupTemplate: (geo, d) =>\n         `<div class=\"hoverinfo\"><strong>${d.name}</strong><br>${formatter(\n           d.m2,\n         )}</div>`,\n       fillOpacity: 0.5,\n       animate: true,\n-      highlightOnHover: true,\n+      highlightOnHover: !inContextMenu,\n       highlightFillColor: color,\n       highlightBorderColor: theme.colors.grayscale.dark2,\n       highlightBorderWidth: 2,\n@@ -144,6 +163,11 @@ function WorldMap(element, props) {\n       exitDelay: 100,\n       key: JSON.stringify,\n     },\n+    done: datamap => {\n+      datamap.svg\n+        .selectAll('.datamaps-subunit')\n+        .on('contextmenu', handleContextMenu);\n+    },\n   });\n \n   map.updateChoropleth(mapData);\n@@ -153,7 +177,8 @@ function WorldMap(element, props) {\n     div\n       .selectAll('circle.datamaps-bubble')\n       .style('fill', color)\n-      .style('stroke', color);\n+      .style('stroke', color)\n+      .on('contextmenu', handleContextMenu);\n   }\n }\n "
        }
    ],
    "superset-frontend/plugins/legacy-plugin-chart-world-map/src/transformProps.js": [
        {
            "4ca4a5c7cb185ac7d318ef5349fbb23cd7ce1fd1": "@@ -19,8 +19,11 @@\n import { rgb } from 'd3-color';\n \n export default function transformProps(chartProps) {\n-  const { width, height, formData, queriesData } = chartProps;\n+  const { width, height, formData, queriesData, hooks, inContextMenu } =\n+    chartProps;\n+  const { onContextMenu } = hooks;\n   const {\n+    entity,\n     maxBubbleSize,\n     showBubbles,\n     linearColorScheme,\n@@ -32,6 +35,7 @@ export default function transformProps(chartProps) {\n   const { r, g, b } = colorPicker;\n \n   return {\n+    entity,\n     data: queriesData[0].data,\n     width,\n     height,\n@@ -42,5 +46,7 @@ export default function transformProps(chartProps) {\n     colorBy,\n     colorScheme,\n     sliceId,\n+    onContextMenu,\n+    inContextMenu,\n   };\n }"
        }
    ],
    "superset-frontend/src/assets/images/empty-dataset.svg": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,38 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<svg width=\"152\" height=\"152\" viewBox=\"0 0 152 152\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n+<path d=\"M44.5 1C45.0523 1 45.5 1.44772 45.5 2V45C45.5 45.5523 45.0523 46 44.5 46H1.5C0.947716 46 0.5 45.5523 0.5 45V2C0.5 1.44772 0.947716 1 1.5 1L44.5 1Z\" fill=\"white\"/>\n+<path d=\"M97.5 1C98.0523 1 98.5 1.44772 98.5 2V45C98.5 45.5523 98.0523 46 97.5 46H54.5C53.9477 46 53.5 45.5523 53.5 45V2C53.5 1.44772 53.9477 1 54.5 1L97.5 1Z\" fill=\"white\"/>\n+<path d=\"M150.5 1C151.052 1 151.5 1.44772 151.5 2V45C151.5 45.5523 151.052 46 150.5 46H107.5C106.948 46 106.5 45.5523 106.5 45V2C106.5 1.44772 106.948 1 107.5 1L150.5 1Z\" fill=\"white\"/>\n+<path d=\"M44.5 54C45.0523 54 45.5 54.4477 45.5 55V98C45.5 98.5523 45.0523 99 44.5 99H1.5C0.947716 99 0.5 98.5523 0.5 98V55C0.5 54.4477 0.947716 54 1.5 54H44.5Z\" fill=\"white\"/>\n+<path d=\"M97.5 54C98.0523 54 98.5 54.4477 98.5 55V98C98.5 98.5523 98.0523 99 97.5 99H54.5C53.9477 99 53.5 98.5523 53.5 98V55C53.5 54.4477 53.9477 54 54.5 54H97.5Z\" fill=\"white\"/>\n+<path d=\"M150.5 54C151.052 54 151.5 54.4477 151.5 55V98C151.5 98.5523 151.052 99 150.5 99H107.5C106.948 99 106.5 98.5523 106.5 98V55C106.5 54.4477 106.948 54 107.5 54H150.5Z\" fill=\"white\"/>\n+<path d=\"M44.5 106C45.0523 106 45.5 106.448 45.5 107V150C45.5 150.552 45.0523 151 44.5 151H1.5C0.947716 151 0.5 150.552 0.5 150V107C0.5 106.448 0.947716 106 1.5 106H44.5Z\" fill=\"white\"/>\n+<path d=\"M97.5 106C98.0523 106 98.5 106.448 98.5 107V150C98.5 150.552 98.0523 151 97.5 151H54.5C53.9477 151 53.5 150.552 53.5 150V107C53.5 106.448 53.9477 106 54.5 106H97.5Z\" fill=\"white\"/>\n+<path d=\"M150.5 106C151.052 106 151.5 106.448 151.5 107V150C151.5 150.552 151.052 151 150.5 151H107.5C106.948 151 106.5 150.552 106.5 150V107C106.5 106.448 106.948 106 107.5 106H150.5Z\" fill=\"white\"/>\n+<path d=\"M44.5 1C45.0523 1 45.5 1.44772 45.5 2V45C45.5 45.5523 45.0523 46 44.5 46H1.5C0.947716 46 0.5 45.5523 0.5 45V2C0.5 1.44772 0.947716 1 1.5 1L44.5 1Z\" stroke=\"#E0E0E0\"/>\n+<path d=\"M97.5 1C98.0523 1 98.5 1.44772 98.5 2V45C98.5 45.5523 98.0523 46 97.5 46H54.5C53.9477 46 53.5 45.5523 53.5 45V2C53.5 1.44772 53.9477 1 54.5 1L97.5 1Z\" stroke=\"#E0E0E0\"/>\n+<path d=\"M150.5 1C151.052 1 151.5 1.44772 151.5 2V45C151.5 45.5523 151.052 46 150.5 46H107.5C106.948 46 106.5 45.5523 106.5 45V2C106.5 1.44772 106.948 1 107.5 1L150.5 1Z\" stroke=\"#E0E0E0\"/>\n+<path d=\"M44.5 54C45.0523 54 45.5 54.4477 45.5 55V98C45.5 98.5523 45.0523 99 44.5 99H1.5C0.947716 99 0.5 98.5523 0.5 98V55C0.5 54.4477 0.947716 54 1.5 54H44.5Z\" stroke=\"#E0E0E0\"/>\n+<path d=\"M97.5 54C98.0523 54 98.5 54.4477 98.5 55V98C98.5 98.5523 98.0523 99 97.5 99H54.5C53.9477 99 53.5 98.5523 53.5 98V55C53.5 54.4477 53.9477 54 54.5 54H97.5Z\" stroke=\"#E0E0E0\"/>\n+<path d=\"M150.5 54C151.052 54 151.5 54.4477 151.5 55V98C151.5 98.5523 151.052 99 150.5 99H107.5C106.948 99 106.5 98.5523 106.5 98V55C106.5 54.4477 106.948 54 107.5 54H150.5Z\" stroke=\"#E0E0E0\"/>\n+<path d=\"M44.5 106C45.0523 106 45.5 106.448 45.5 107V150C45.5 150.552 45.0523 151 44.5 151H1.5C0.947716 151 0.5 150.552 0.5 150V107C0.5 106.448 0.947716 106 1.5 106H44.5Z\" stroke=\"#E0E0E0\"/>\n+<path d=\"M97.5 106C98.0523 106 98.5 106.448 98.5 107V150C98.5 150.552 98.0523 151 97.5 151H54.5C53.9477 151 53.5 150.552 53.5 150V107C53.5 106.448 53.9477 106 54.5 106H97.5Z\" stroke=\"#E0E0E0\"/>\n+<path d=\"M150.5 106C151.052 106 151.5 106.448 151.5 107V150C151.5 150.552 151.052 151 150.5 151H107.5C106.948 151 106.5 150.552 106.5 150V107C106.5 106.448 106.948 106 107.5 106H150.5Z\" stroke=\"#E0E0E0\"/>\n+</svg>"
        }
    ],
    "superset-frontend/src/assets/images/empty-table.svg": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,22 @@\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<svg width=\"81\" height=\"82\" viewBox=\"0 0 81 82\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n+<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M76.5 1H4.5C2.29086 1 0.5 2.79086 0.5 5V77C0.5 79.2091 2.29086 81 4.5 81H76.5C78.7091 81 80.5 79.2091 80.5 77V5C80.5 2.79086 78.7091 1 76.5 1ZM36.5 73H8.5V57H36.5V73ZM36.5 49H8.5V33H36.5V49ZM72.5 73H44.5V57H72.5V73ZM72.5 49H44.5V33H72.5V49ZM72.5 25H8.5V9H72.5V25Z\" fill=\"#F7F7F7\"/>\n+<path d=\"M36.5 73V73.5H37V73H36.5ZM8.5 73H8V73.5H8.5V73ZM8.5 57V56.5H8V57H8.5ZM36.5 57H37V56.5H36.5V57ZM36.5 49V49.5H37V49H36.5ZM8.5 49H8V49.5H8.5V49ZM8.5 33V32.5H8V33H8.5ZM36.5 33H37V32.5H36.5V33ZM72.5 73V73.5H73V73H72.5ZM44.5 73H44V73.5H44.5V73ZM44.5 57V56.5H44V57H44.5ZM72.5 57H73V56.5H72.5V57ZM72.5 49V49.5H73V49H72.5ZM44.5 49H44V49.5H44.5V49ZM44.5 33V32.5H44V33H44.5ZM72.5 33H73V32.5H72.5V33ZM72.5 25V25.5H73V25H72.5ZM8.5 25H8V25.5H8.5V25ZM8.5 9V8.5H8V9H8.5ZM72.5 9H73V8.5H72.5V9ZM76.5 0.5H4.5V1.5H76.5V0.5ZM4.5 0.5C2.01472 0.5 0 2.51472 0 5H1C1 3.067 2.567 1.5 4.5 1.5V0.5ZM0 5V77H1V5H0ZM0 77C0 79.4853 2.01472 81.5 4.5 81.5V80.5C2.567 80.5 1 78.933 1 77H0ZM4.5 81.5H76.5V80.5H4.5V81.5ZM76.5 81.5C78.9853 81.5 81 79.4853 81 77H80C80 78.933 78.433 80.5 76.5 80.5V81.5ZM81 77V5H80V77H81ZM81 5C81 2.51472 78.9853 0.5 76.5 0.5V1.5C78.433 1.5 80 3.067 80 5H81ZM36.5 72.5H8.5V73.5H36.5V72.5ZM9 73V57H8V73H9ZM8.5 57.5H36.5V56.5H8.5V57.5ZM36 57V73H37V57H36ZM36.5 48.5H8.5V49.5H36.5V48.5ZM9 49V33H8V49H9ZM8.5 33.5H36.5V32.5H8.5V33.5ZM36 33V49H37V33H36ZM72.5 72.5H44.5V73.5H72.5V72.5ZM45 73V57H44V73H45ZM44.5 57.5H72.5V56.5H44.5V57.5ZM72 57V73H73V57H72ZM72.5 48.5H44.5V49.5H72.5V48.5ZM45 49V33H44V49H45ZM44.5 33.5H72.5V32.5H44.5V33.5ZM72 33V49H73V33H72ZM72.5 24.5H8.5V25.5H72.5V24.5ZM9 25V9H8V25H9ZM8.5 9.5H72.5V8.5H8.5V9.5ZM72 9V25H73V9H72Z\" fill=\"#E0E0E0\"/>\n+</svg>"
        }
    ],
    "superset-frontend/src/components/EmptyState/index.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -37,6 +37,7 @@ export interface EmptyStateSmallProps {\n export interface EmptyStateProps extends EmptyStateSmallProps {\n   buttonText?: ReactNode;\n   buttonAction?: React.MouseEventHandler<HTMLElement>;\n+  className?: string;\n }\n \n export interface ImageContainerProps {\n@@ -152,8 +153,9 @@ export const EmptyStateBig = ({\n   description,\n   buttonAction,\n   buttonText,\n+  className,\n }: EmptyStateProps) => (\n-  <EmptyStateContainer>\n+  <EmptyStateContainer className={className}>\n     <ImageContainer image={image} size={EmptyStateSize.Big} />\n     <TextContainer\n       css={(theme: SupersetTheme) =>"
        }
    ],
    "superset-frontend/src/explore/components/ExploreChartHeader/index.jsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -119,9 +119,7 @@ export const ExploreChartHeader = ({\n   };\n \n   useEffect(() => {\n-    if (dashboardId) {\n-      fetchChartDashboardData();\n-    }\n+    if (dashboardId) fetchChartDashboardData();\n   }, []);\n \n   const openPropertiesModal = () => {"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/AddDataset/AddDataset.test.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,42 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import { render, screen } from 'spec/helpers/testing-library';\n+import AddDataset from 'src/views/CRUD/data/dataset/AddDataset';\n+\n+describe('AddDataset', () => {\n+  it('renders a blank state AddDataset', () => {\n+    render(<AddDataset />);\n+\n+    const blankeStateImgs = screen.getAllByRole('img', { name: /empty/i });\n+\n+    // Header\n+    expect(screen.getByText(/header/i)).toBeVisible();\n+    // Left panel\n+    expect(blankeStateImgs[0]).toBeVisible();\n+    expect(screen.getByText(/no database tables found/i)).toBeVisible();\n+    // Database panel\n+    expect(blankeStateImgs[1]).toBeVisible();\n+    expect(screen.getByText(/select dataset source/i)).toBeVisible();\n+    // Footer\n+    expect(screen.getByText(/footer/i)).toBeVisible();\n+\n+    expect(blankeStateImgs.length).toBe(2);\n+  });\n+});"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/AddDataset/DatasetPanel/DatasetPanel.test.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,41 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import { render, screen } from 'spec/helpers/testing-library';\n+import DatasetPanel from 'src/views/CRUD/data/dataset/AddDataset/DatasetPanel';\n+\n+describe('DatasetPanel', () => {\n+  it('renders a blank state DatasetPanel', () => {\n+    render(<DatasetPanel />);\n+\n+    const blankDatasetImg = screen.getByRole('img', { name: /empty/i });\n+    const blankDatasetTitle = screen.getByText(/select dataset source/i);\n+    const blankDatasetDescription = screen.getByText(\n+      /datasets can be created from database tables or sql queries\\. select a database table to the left or to open sql lab\\. from there you can save the query as a dataset\\./i,\n+    );\n+    const sqlLabLink = screen.getByRole('button', {\n+      name: /create dataset from sql query/i,\n+    });\n+\n+    expect(blankDatasetImg).toBeVisible();\n+    expect(blankDatasetTitle).toBeVisible();\n+    expect(blankDatasetDescription).toBeVisible();\n+    expect(sqlLabLink).toBeVisible();\n+  });\n+});"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/AddDataset/DatasetPanel/index.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,55 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import { t, styled } from '@superset-ui/core';\n+import { EmptyStateBig } from 'src/components/EmptyState';\n+\n+const StyledEmptyStateBig = styled(EmptyStateBig)`\n+  p {\n+    width: ${({ theme }) => theme.gridUnit * 115}px;\n+  }\n+`;\n+\n+const renderDescription = () => (\n+  <>\n+    {t(\n+      'Datasets can be created from database tables or SQL queries. Select a database table to the left or ',\n+    )}\n+    <span\n+      role=\"button\"\n+      onClick={() => {\n+        window.location.href = `/superset/sqllab`;\n+      }}\n+      tabIndex={0}\n+    >\n+      {t('create dataset from SQL query')}\n+    </span>\n+    {t(' to open SQL Lab. From there you can save the query as a dataset.')}\n+  </>\n+);\n+\n+export default function DatasetPanel() {\n+  return (\n+    <StyledEmptyStateBig\n+      image=\"empty-dataset.svg\"\n+      title={t('Select dataset source')}\n+      description={renderDescription()}\n+    />\n+  );\n+}"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/AddDataset/Footer/Footer.test.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -17,7 +17,13 @@\n  * under the License.\n  */\n import React from 'react';\n+import { render, screen } from 'spec/helpers/testing-library';\n+import Footer from 'src/views/CRUD/data/dataset/AddDataset/Footer';\n \n-export default function DatasetPanel() {\n-  return <div>Dataset Panel</div>;\n-}\n+describe('Footer', () => {\n+  it('renders a blank state Footer', () => {\n+    render(<Footer />);\n+\n+    expect(screen.getByText(/footer/i)).toBeVisible();\n+  });\n+});"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/AddDataset/Header/Header.test.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,29 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import { render, screen } from 'spec/helpers/testing-library';\n+import Header from 'src/views/CRUD/data/dataset/AddDataset/Header';\n+\n+describe('Header', () => {\n+  it('renders a blank state Header', () => {\n+    render(<Header />);\n+\n+    expect(screen.getByText(/header/i)).toBeVisible();\n+  });\n+});"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/AddDataset/LeftPanel/LeftPanel.test.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,31 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import { render, screen } from 'spec/helpers/testing-library';\n+import LeftPanel from 'src/views/CRUD/data/dataset/AddDataset/LeftPanel';\n+\n+describe('LeftPanel', () => {\n+  it('renders a blank state LeftPanel', () => {\n+    render(<LeftPanel />);\n+\n+    expect(screen.getByRole('img', { name: /empty/i })).toBeVisible();\n+    expect(screen.getByText(/no database tables found/i)).toBeVisible();\n+    expect(screen.getByText(/try selecting a different schema/i)).toBeVisible();\n+  });\n+});"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/AddDataset/LeftPanel/index.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -17,7 +17,17 @@\n  * under the License.\n  */\n import React from 'react';\n+import { t } from '@superset-ui/core';\n+import { EmptyStateMedium } from 'src/components/EmptyState';\n \n export default function LeftPanel() {\n-  return <div>Left Panel</div>;\n+  return (\n+    <>\n+      <EmptyStateMedium\n+        image=\"empty-table.svg\"\n+        title={t('No database tables found')}\n+        description={t('Try selecting a different schema')}\n+      />\n+    </>\n+  );\n }"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/AddDataset/RightPanel/RightPanel.test.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,29 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import { render, screen } from 'spec/helpers/testing-library';\n+import RightPanel from 'src/views/CRUD/data/dataset/AddDataset/RightPanel';\n+\n+describe('RightPanel', () => {\n+  it('renders a blank state RightPanel', () => {\n+    render(<RightPanel />);\n+\n+    expect(screen.getByText(/right panel/i)).toBeVisible();\n+  });\n+});"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/AddDataset/index.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -17,13 +17,12 @@\n  * under the License.\n  */\n import React from 'react';\n-// import React, { useReducer, Reducer } from 'react';\n import Header from './Header';\n import DatasetPanel from './DatasetPanel';\n import LeftPanel from './LeftPanel';\n-import RightPanel from './RightPanel';\n import Footer from './Footer';\n import { DatasetActionType, DatasetObject, DSReducerActionType } from './types';\n+import DatasetLayout from '../DatasetLayout';\n \n export function datasetReducer(\n   state: Partial<DatasetObject> | null,\n@@ -61,22 +60,19 @@ export function datasetReducer(\n   }\n }\n \n-export default function DatasetPage() {\n+export default function AddDataset() {\n   // this is commented out for now, but can be commented in as the component\n   // is built up. Uncomment the useReducer in imports too\n   // const [dataset, setDataset] = useReducer<\n   //   Reducer<Partial<DatasetObject> | null, DSReducerActionType>\n   // >(datasetReducer, null);\n \n   return (\n-    <div>\n-      <Header />\n-      <LeftPanel />\n-      <div css={{ display: 'flex' }}>\n-        <DatasetPanel />\n-        <Footer />\n-      </div>\n-      <RightPanel />\n-    </div>\n+    <DatasetLayout\n+      header={Header()}\n+      leftPanel={LeftPanel()}\n+      datasetPanel={DatasetPanel()}\n+      footer={Footer()}\n+    />\n   );\n }"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/DatasetLayout/DatasetLayout.test.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import { render, screen } from 'spec/helpers/testing-library';\n+import DatasetLayout from 'src/views/CRUD/data/dataset/DatasetLayout';\n+import Header from 'src/views/CRUD/data/dataset/AddDataset/Header';\n+import LeftPanel from 'src/views/CRUD/data/dataset/AddDataset/LeftPanel';\n+import DatasetPanel from 'src/views/CRUD/data/dataset/AddDataset/DatasetPanel';\n+import RightPanel from 'src/views/CRUD/data/dataset/AddDataset/RightPanel';\n+import Footer from 'src/views/CRUD/data/dataset/AddDataset/Footer';\n+\n+describe('DatasetLayout', () => {\n+  it('renders nothing when no components are passed in', () => {\n+    render(<DatasetLayout />);\n+    const layoutWrapper = screen.getByTestId('dataset-layout-wrapper');\n+\n+    expect(layoutWrapper).toHaveTextContent('');\n+  });\n+\n+  it('renders a Header when passed in', () => {\n+    render(<DatasetLayout header={Header()} />);\n+\n+    expect(screen.getByText(/header/i)).toBeVisible();\n+  });\n+\n+  it('renders a LeftPanel when passed in', () => {\n+    render(<DatasetLayout leftPanel={LeftPanel()} />);\n+\n+    expect(screen.getByRole('img', { name: /empty/i })).toBeVisible();\n+    expect(screen.getByText(/no database tables found/i)).toBeVisible();\n+  });\n+\n+  it('renders a DatasetPanel when passed in', () => {\n+    render(<DatasetLayout datasetPanel={DatasetPanel()} />);\n+\n+    const blankDatasetImg = screen.getByRole('img', { name: /empty/i });\n+    const blankDatasetTitle = screen.getByText(/select dataset source/i);\n+\n+    expect(blankDatasetImg).toBeVisible();\n+    expect(blankDatasetTitle).toBeVisible();\n+  });\n+\n+  it('renders a RightPanel when passed in', () => {\n+    render(<DatasetLayout rightPanel={RightPanel()} />);\n+\n+    expect(screen.getByText(/right panel/i)).toBeVisible();\n+  });\n+\n+  it('renders a Footer when passed in', () => {\n+    render(<DatasetLayout footer={Footer()} />);\n+\n+    expect(screen.getByText(/footer/i)).toBeVisible();\n+  });\n+});"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/DatasetLayout/index.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,72 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React, { ReactElement, JSXElementConstructor } from 'react';\n+import {\n+  StyledLayoutWrapper,\n+  LeftColumn,\n+  RightColumn,\n+  OuterRow,\n+  PanelRow,\n+  FooterRow,\n+  StyledHeader,\n+  StyledLeftPanel,\n+  StyledDatasetPanel,\n+  StyledRightPanel,\n+  StyledFooter,\n+} from 'src/views/CRUD/data/dataset/styles';\n+\n+interface DatasetLayoutProps {\n+  header?: ReactElement<any, string | JSXElementConstructor<any>> | null;\n+  leftPanel?: ReactElement<any, string | JSXElementConstructor<any>> | null;\n+  datasetPanel?: ReactElement<any, string | JSXElementConstructor<any>> | null;\n+  rightPanel?: ReactElement<any, string | JSXElementConstructor<any>> | null;\n+  footer?: ReactElement<any, string | JSXElementConstructor<any>> | null;\n+}\n+\n+export default function DatasetLayout({\n+  header,\n+  leftPanel,\n+  datasetPanel,\n+  rightPanel,\n+  footer,\n+}: DatasetLayoutProps) {\n+  return (\n+    <StyledLayoutWrapper data-test=\"dataset-layout-wrapper\">\n+      {header && <StyledHeader>{header}</StyledHeader>}\n+      <OuterRow>\n+        <LeftColumn>\n+          {leftPanel && <StyledLeftPanel>{leftPanel}</StyledLeftPanel>}\n+        </LeftColumn>\n+\n+        <RightColumn>\n+          <PanelRow>\n+            {datasetPanel && (\n+              <StyledDatasetPanel>{datasetPanel}</StyledDatasetPanel>\n+            )}\n+            {rightPanel && <StyledRightPanel>{rightPanel}</StyledRightPanel>}\n+          </PanelRow>\n+\n+          <FooterRow>\n+            {footer && <StyledFooter>{footer}</StyledFooter>}\n+          </FooterRow>\n+        </RightColumn>\n+      </OuterRow>\n+    </StyledLayoutWrapper>\n+  );\n+}"
        }
    ],
    "superset-frontend/src/views/CRUD/data/dataset/styles.ts": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -0,0 +1,95 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import { styled } from '@superset-ui/core';\n+\n+export const StyledLayoutWrapper = styled.div`\n+  flex-grow: 1;\n+  display: flex;\n+  flex-direction: column;\n+  background-color: ${({ theme }) => theme.colors.grayscale.light5};\n+`;\n+\n+const Column = styled.div`\n+  width: 100%;\n+  height: 100%;\n+  flex-direction: column;\n+`;\n+\n+export const LeftColumn = styled(Column)`\n+  width: ${({ theme }) => theme.gridUnit * 80}px;\n+  height: auto;\n+`;\n+\n+export const RightColumn = styled(Column)`\n+  height: auto;\n+  display: flex;\n+  flex: 1 0 auto;\n+  width: auto;\n+`;\n+\n+const Row = styled.div`\n+  width: 100%;\n+  height: 100%;\n+  display: flex;\n+  flex-direction: row;\n+`;\n+\n+export const OuterRow = styled(Row)`\n+  flex: 1 0 auto;\n+`;\n+\n+export const PanelRow = styled(Row)`\n+  flex: 1 0 auto;\n+  height: auto;\n+`;\n+\n+export const FooterRow = styled(Row)`\n+  flex: 0 0 auto;\n+  height: ${({ theme }) => theme.gridUnit * 16}px;\n+`;\n+\n+export const StyledHeader = styled.div`\n+  flex: 0 0 auto;\n+  height: ${({ theme }) => theme.gridUnit * 16}px;\n+  border-bottom: 2px solid ${({ theme }) => theme.colors.grayscale.light2};\n+  color: ${({ theme }) => theme.colors.error.base};\n+`;\n+\n+export const StyledLeftPanel = styled.div`\n+  width: ${({ theme }) => theme.gridUnit * 80}px;\n+  height: 100%;\n+  border-right: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n+`;\n+\n+export const StyledDatasetPanel = styled.div`\n+  width: 100%;\n+`;\n+\n+export const StyledRightPanel = styled.div`\n+  border-left: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n+  color: ${({ theme }) => theme.colors.success.base};\n+`;\n+\n+export const StyledFooter = styled.div`\n+  height: ${({ theme }) => theme.gridUnit * 16}px;\n+  width: 100%;\n+  border-top: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n+  border-bottom: 1px solid ${({ theme }) => theme.colors.grayscale.light2};\n+  color: ${({ theme }) => theme.colors.info.base};\n+`;"
        }
    ],
    "superset-frontend/src/views/routes.tsx": [
        {
            "6094274f0b017b4a456cd78c3039a57be2d63fc5": "@@ -82,10 +82,10 @@ const DatasetList = lazy(\n     ),\n );\n \n-const DatasetPage = lazy(\n+const AddDataset = lazy(\n   () =>\n     import(\n-      /* webpackChunkName: \"DatasetEditor\" */ 'src/views/CRUD/data/dataset/DatasetPage/index'\n+      /* webpackChunkName: \"DatasetEditor\" */ 'src/views/CRUD/data/dataset/AddDataset/index'\n     ),\n );\n \n@@ -199,11 +199,11 @@ export const routes: Routes = [\n   },\n   {\n     path: '/dataset/add/',\n-    Component: DatasetPage,\n+    Component: AddDataset,\n   },\n   {\n     path: '/dataset/:datasetId',\n-    Component: DatasetPage,\n+    Component: AddDataset,\n   },\n ];\n "
        }
    ],
    "superset-frontend/packages/superset-ui-core/src/query/types/Query.ts": [
        {
            "52648ecd7f6158473ec198e1ade9a5a69008b752": "@@ -32,26 +32,33 @@ import { PostProcessingRule } from './PostProcessing';\n import { JsonObject } from '../../connection';\n import { TimeGranularity } from '../../time-format';\n \n-export type QueryObjectFilterClause = {\n+export type BaseQueryObjectFilterClause = {\n   col: QueryFormColumn;\n   grain?: TimeGranularity;\n   isExtra?: boolean;\n-} & (\n-  | {\n-      op: BinaryOperator;\n-      val: string | number | boolean | null | Date;\n-      formattedVal?: string;\n-    }\n-  | {\n-      op: SetOperator;\n-      val: (string | number | boolean | null | Date)[];\n-      formattedVal?: string[];\n-    }\n-  | {\n-      op: UnaryOperator;\n-      formattedVal?: string;\n-    }\n-);\n+};\n+\n+export type BinaryQueryObjectFilterClause = BaseQueryObjectFilterClause & {\n+  op: BinaryOperator;\n+  val: string | number | boolean | null | Date;\n+  formattedVal?: string;\n+};\n+\n+export type SetQueryObjectFilterClause = BaseQueryObjectFilterClause & {\n+  op: SetOperator;\n+  val: (string | number | boolean | null | Date)[];\n+  formattedVal?: string[];\n+};\n+\n+export type UnaryQueryObjectFilterClause = BaseQueryObjectFilterClause & {\n+  op: UnaryOperator;\n+  formattedVal?: string;\n+};\n+\n+export type QueryObjectFilterClause =\n+  | BinaryQueryObjectFilterClause\n+  | SetQueryObjectFilterClause\n+  | UnaryQueryObjectFilterClause;\n \n export type QueryObjectExtras = Partial<{\n   /** HAVING condition for Druid */\n@@ -402,4 +409,8 @@ export enum ContributionType {\n   Column = 'column',\n }\n \n+export type DatasourceSamplesQuery = {\n+  filters?: QueryObjectFilterClause[];\n+};\n+\n export default {};"
        },
        {
            "0bf4e56dc3e129d2b9239f055212249ba95521e4": "@@ -39,12 +39,12 @@ export type QueryObjectFilterClause = {\n } & (\n   | {\n       op: BinaryOperator;\n-      val: string | number | boolean;\n+      val: string | number | boolean | null | Date;\n       formattedVal?: string;\n     }\n   | {\n       op: SetOperator;\n-      val: (string | number | boolean)[];\n+      val: (string | number | boolean | null | Date)[];\n       formattedVal?: string[];\n     }\n   | {"
        }
    ],
    "superset-frontend/src/components/Chart/ChartRenderer.jsx": [
        {
            "52648ecd7f6158473ec198e1ade9a5a69008b752": "@@ -30,6 +30,7 @@ import {\n import { Logger, LOG_ACTIONS_RENDER_CHART } from 'src/logger/LogUtils';\n import { EmptyStateBig, EmptyStateSmall } from 'src/components/EmptyState';\n import ChartContextMenu from './ChartContextMenu';\n+import DrillDetailModal from './DrillDetailModal';\n \n const propTypes = {\n   annotationData: PropTypes.object,\n@@ -83,6 +84,7 @@ class ChartRenderer extends React.Component {\n     super(props);\n     this.state = {\n       inContextMenu: false,\n+      drillDetailFilters: null,\n     };\n     this.hasQueryResponseChange = false;\n \n@@ -202,10 +204,7 @@ class ChartRenderer extends React.Component {\n   }\n \n   handleContextMenuSelected(filters) {\n-    const extraFilters = this.props.formData.extra_form_data?.filters || [];\n-    // eslint-disable-next-line no-alert\n-    alert(JSON.stringify(filters.concat(extraFilters)));\n-    this.setState({ inContextMenu: false });\n+    this.setState({ inContextMenu: false, drillDetailFilters: filters });\n   }\n \n   handleContextMenuClosed() {\n@@ -289,12 +288,19 @@ class ChartRenderer extends React.Component {\n     return (\n       <div>\n         {this.props.source === 'dashboard' && (\n-          <ChartContextMenu\n-            ref={this.contextMenuRef}\n-            id={chartId}\n-            onSelection={this.handleContextMenuSelected}\n-            onClose={this.handleContextMenuClosed}\n-          />\n+          <>\n+            <ChartContextMenu\n+              ref={this.contextMenuRef}\n+              id={chartId}\n+              onSelection={this.handleContextMenuSelected}\n+              onClose={this.handleContextMenuClosed}\n+            />\n+            <DrillDetailModal\n+              chartId={chartId}\n+              initialFilters={this.state.drillDetailFilters}\n+              formData={currentFormData}\n+            />\n+          </>\n         )}\n         <SuperChart\n           disableErrorBoundary"
        }
    ],
    "superset-frontend/src/components/Chart/DrillDetailModal.tsx": [
        {
            "52648ecd7f6158473ec198e1ade9a5a69008b752": "@@ -0,0 +1,117 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React, {\n+  useCallback,\n+  useContext,\n+  useEffect,\n+  useMemo,\n+  useState,\n+} from 'react';\n+import { useSelector } from 'react-redux';\n+import { useHistory } from 'react-router-dom';\n+import {\n+  BinaryQueryObjectFilterClause,\n+  css,\n+  QueryFormData,\n+  t,\n+  useTheme,\n+} from '@superset-ui/core';\n+import DrillDetailPane from 'src/dashboard/components/DrillDetailPane';\n+import { DashboardPageIdContext } from 'src/dashboard/containers/DashboardPage';\n+import { Slice } from 'src/types/Chart';\n+import Modal from '../Modal';\n+import Button from '../Button';\n+\n+const DrillDetailModal: React.FC<{\n+  chartId: number;\n+  initialFilters?: BinaryQueryObjectFilterClause[];\n+  formData: QueryFormData;\n+}> = ({ chartId, initialFilters, formData }) => {\n+  const [showModal, setShowModal] = useState(false);\n+  const openModal = useCallback(() => setShowModal(true), []);\n+  const closeModal = useCallback(() => setShowModal(false), []);\n+  const history = useHistory();\n+  const theme = useTheme();\n+  const dashboardPageId = useContext(DashboardPageIdContext);\n+  const { slice_name: chartName } = useSelector(\n+    (state: { sliceEntities: { slices: Record<number, Slice> } }) =>\n+      state.sliceEntities.slices[chartId],\n+  );\n+\n+  const exploreUrl = useMemo(\n+    () => `/explore/?dashboard_page_id=${dashboardPageId}&slice_id=${chartId}`,\n+    [chartId, dashboardPageId],\n+  );\n+\n+  const exploreChart = useCallback(() => {\n+    history.push(exploreUrl);\n+  }, [exploreUrl, history]);\n+\n+  //  Trigger modal open when initial filters change\n+  useEffect(() => {\n+    if (initialFilters) {\n+      openModal();\n+    }\n+  }, [initialFilters, openModal]);\n+\n+  return (\n+    <Modal\n+      css={css`\n+        .ant-modal-body {\n+          display: flex;\n+          flex-direction: column;\n+        }\n+      `}\n+      show={showModal}\n+      onHide={closeModal}\n+      title={t('Drill to detail: %s', chartName)}\n+      footer={\n+        <>\n+          <Button\n+            buttonStyle=\"secondary\"\n+            buttonSize=\"small\"\n+            onClick={exploreChart}\n+          >\n+            {t('Edit chart')}\n+          </Button>\n+          <Button buttonStyle=\"primary\" buttonSize=\"small\" onClick={closeModal}>\n+            {t('Close')}\n+          </Button>\n+        </>\n+      }\n+      responsive\n+      resizable\n+      resizableConfig={{\n+        minHeight: theme.gridUnit * 128,\n+        minWidth: theme.gridUnit * 128,\n+        defaultSize: {\n+          width: 'auto',\n+          height: '75vh',\n+        },\n+      }}\n+      draggable\n+      destroyOnClose\n+    >\n+      <DrillDetailPane formData={formData} initialFilters={initialFilters} />\n+    </Modal>\n+  );\n+};\n+\n+export default DrillDetailModal;"
        }
    ],
    "superset-frontend/src/components/Chart/chartAction.js": [
        {
            "52648ecd7f6158473ec198e1ade9a5a69008b752": "@@ -19,7 +19,7 @@\n /* eslint no-undef: 'error' */\n /* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n import moment from 'moment';\n-import { t, SupersetClient } from '@superset-ui/core';\n+import { t, SupersetClient, isDefined } from '@superset-ui/core';\n import { getControlsState } from 'src/explore/store';\n import { isFeatureEnabled, FeatureFlag } from 'src/featureFlags';\n import {\n@@ -603,10 +603,27 @@ export const getDatasourceSamples = async (\n   datasourceId,\n   force,\n   jsonPayload,\n+  perPage,\n+  page,\n ) => {\n-  const endpoint = `/datasource/samples?force=${force}&datasource_type=${datasourceType}&datasource_id=${datasourceId}`;\n   try {\n-    const response = await SupersetClient.post({ endpoint, jsonPayload });\n+    const searchParams = {\n+      force,\n+      datasource_type: datasourceType,\n+      datasource_id: datasourceId,\n+    };\n+\n+    if (isDefined(perPage) && isDefined(page)) {\n+      searchParams.per_page = perPage;\n+      searchParams.page = page;\n+    }\n+\n+    const response = await SupersetClient.post({\n+      endpoint: '/datasource/samples',\n+      jsonPayload,\n+      searchParams,\n+    });\n+\n     return response.json.result;\n   } catch (err) {\n     const clientError = await getClientErrorObject(err);"
        }
    ],
    "superset-frontend/src/dashboard/components/DrillDetailPane/DrillDetailPane.tsx": [
        {
            "52648ecd7f6158473ec198e1ade9a5a69008b752": "@@ -0,0 +1,257 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React, {\n+  useState,\n+  useEffect,\n+  useMemo,\n+  useCallback,\n+  useRef,\n+} from 'react';\n+import { useSelector } from 'react-redux';\n+import {\n+  BinaryQueryObjectFilterClause,\n+  css,\n+  ensureIsArray,\n+  GenericDataType,\n+  t,\n+  useTheme,\n+  QueryFormData,\n+  JsonObject,\n+} from '@superset-ui/core';\n+import Loading from 'src/components/Loading';\n+import { EmptyStateMedium } from 'src/components/EmptyState';\n+import TableView, { EmptyWrapperType } from 'src/components/TableView';\n+import { useTableColumns } from 'src/explore/components/DataTableControl';\n+import { getDatasourceSamples } from 'src/components/Chart/chartAction';\n+import TableControls from './TableControls';\n+import { getDrillPayload } from './utils';\n+\n+type ResultsPage = {\n+  total: number;\n+  data: Record<string, any>[];\n+  colNames: string[];\n+  colTypes: GenericDataType[];\n+};\n+\n+const PAGE_SIZE = 50;\n+\n+export default function DrillDetailPane({\n+  formData,\n+  initialFilters,\n+}: {\n+  formData: QueryFormData;\n+  initialFilters?: BinaryQueryObjectFilterClause[];\n+}) {\n+  const theme = useTheme();\n+  const [pageIndex, setPageIndex] = useState(0);\n+  const lastPageIndex = useRef(pageIndex);\n+  const [filters, setFilters] = useState(initialFilters || []);\n+  const [isLoading, setIsLoading] = useState(false);\n+  const [responseError, setResponseError] = useState('');\n+  const [resultsPages, setResultsPages] = useState<Map<number, ResultsPage>>(\n+    new Map(),\n+  );\n+\n+  const SAMPLES_ROW_LIMIT = useSelector(\n+    (state: { common: { conf: JsonObject } }) =>\n+      state.common.conf.SAMPLES_ROW_LIMIT,\n+  );\n+\n+  //  Extract datasource ID/type from string ID\n+  const [datasourceId, datasourceType] = useMemo(\n+    () => formData.datasource.split('__'),\n+    [formData.datasource],\n+  );\n+\n+  //  Get page of results\n+  const resultsPage = useMemo(() => {\n+    const nextResultsPage = resultsPages.get(pageIndex);\n+    if (nextResultsPage) {\n+      lastPageIndex.current = pageIndex;\n+      return nextResultsPage;\n+    }\n+\n+    return resultsPages.get(lastPageIndex.current);\n+  }, [pageIndex, resultsPages]);\n+\n+  // this is to preserve the order of the columns, even if there are integer values,\n+  // while also only grabbing the first column's keys\n+  const columns = useTableColumns(\n+    resultsPage?.colNames,\n+    resultsPage?.colTypes,\n+    resultsPage?.data,\n+    formData.datasource,\n+  );\n+\n+  //  Disable sorting on columns\n+  const sortDisabledColumns = useMemo(\n+    () =>\n+      columns.map(column => ({\n+        ...column,\n+        disableSortBy: true,\n+      })),\n+    [columns],\n+  );\n+\n+  //  Update page index on pagination click\n+  const onServerPagination = useCallback(({ pageIndex }) => {\n+    setPageIndex(pageIndex);\n+  }, []);\n+\n+  //  Clear cache on reload button click\n+  const handleReload = useCallback(() => {\n+    setResponseError('');\n+    setResultsPages(new Map());\n+    setPageIndex(0);\n+  }, []);\n+\n+  //  Clear cache and reset page index if filters change\n+  useEffect(() => {\n+    setResponseError('');\n+    setResultsPages(new Map());\n+    setPageIndex(0);\n+  }, [filters]);\n+\n+  //  Update cache order if page in cache\n+  useEffect(() => {\n+    if (\n+      resultsPages.has(pageIndex) &&\n+      [...resultsPages.keys()].at(-1) !== pageIndex\n+    ) {\n+      const nextResultsPages = new Map(resultsPages);\n+      nextResultsPages.delete(pageIndex);\n+      setResultsPages(\n+        nextResultsPages.set(\n+          pageIndex,\n+          resultsPages.get(pageIndex) as ResultsPage,\n+        ),\n+      );\n+    }\n+  }, [pageIndex, resultsPages]);\n+\n+  //  Download page of results & trim cache if page not in cache\n+  useEffect(() => {\n+    if (!responseError && !isLoading && !resultsPages.has(pageIndex)) {\n+      setIsLoading(true);\n+      const jsonPayload = getDrillPayload(formData, filters);\n+      const cachePageLimit = Math.ceil(SAMPLES_ROW_LIMIT / PAGE_SIZE);\n+      getDatasourceSamples(\n+        datasourceType,\n+        datasourceId,\n+        false,\n+        jsonPayload,\n+        PAGE_SIZE,\n+        pageIndex + 1,\n+      )\n+        .then(response => {\n+          setResultsPages(\n+            new Map([\n+              ...[...resultsPages.entries()].slice(-cachePageLimit + 1),\n+              [\n+                pageIndex,\n+                {\n+                  total: response.total_count,\n+                  data: response.data,\n+                  colNames: ensureIsArray(response.colnames),\n+                  colTypes: ensureIsArray(response.coltypes),\n+                },\n+              ],\n+            ]),\n+          );\n+          setResponseError('');\n+        })\n+        .catch(error => {\n+          setResponseError(`${error.name}: ${error.message}`);\n+        })\n+        .finally(() => {\n+          setIsLoading(false);\n+        });\n+    }\n+  }, [\n+    SAMPLES_ROW_LIMIT,\n+    datasourceId,\n+    datasourceType,\n+    filters,\n+    formData,\n+    isLoading,\n+    pageIndex,\n+    responseError,\n+    resultsPages,\n+  ]);\n+\n+  let tableContent = null;\n+  if (responseError) {\n+    //  Render error if page download failed\n+    tableContent = (\n+      <pre\n+        css={css`\n+          margin-top: ${theme.gridUnit * 4}px;\n+        `}\n+      >\n+        {responseError}\n+      </pre>\n+    );\n+  } else if (!resultsPages.size) {\n+    //  Render loading if first page hasn't loaded\n+    tableContent = <Loading />;\n+  } else if (resultsPage?.total === 0) {\n+    //  Render empty state if no results are returned for page\n+    const title = t('No rows were returned for this dataset');\n+    tableContent = <EmptyStateMedium image=\"document.svg\" title={title} />;\n+  } else {\n+    //  Render table if at least one page has successfully loaded\n+    tableContent = (\n+      <TableView\n+        columns={sortDisabledColumns}\n+        data={resultsPage?.data || []}\n+        pageSize={PAGE_SIZE}\n+        totalCount={resultsPage?.total}\n+        serverPagination\n+        initialPageIndex={pageIndex}\n+        onServerPagination={onServerPagination}\n+        loading={isLoading}\n+        noDataText={t('No results')}\n+        emptyWrapperType={EmptyWrapperType.Small}\n+        className=\"table-condensed\"\n+        isPaginationSticky\n+        showRowCount={false}\n+        small\n+        css={css`\n+          overflow: auto;\n+          .table {\n+            margin-bottom: 0;\n+          }\n+        `}\n+      />\n+    );\n+  }\n+\n+  return (\n+    <>\n+      <TableControls\n+        filters={filters}\n+        setFilters={setFilters}\n+        totalCount={resultsPage?.total}\n+        loading={isLoading}\n+        onReload={handleReload}\n+      />\n+      {tableContent}\n+    </>\n+  );\n+}"
        }
    ],
    "superset-frontend/src/dashboard/components/DrillDetailPane/TableControls.tsx": [
        {
            "52648ecd7f6158473ec198e1ade9a5a69008b752": "@@ -0,0 +1,138 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import React, { useCallback, useMemo } from 'react';\n+import { Tag } from 'antd';\n+import {\n+  BinaryQueryObjectFilterClause,\n+  css,\n+  isAdhocColumn,\n+  t,\n+  useTheme,\n+} from '@superset-ui/core';\n+import RowCountLabel from 'src/explore/components/RowCountLabel';\n+import Icons from 'src/components/Icons';\n+\n+export default function TableControls({\n+  filters,\n+  setFilters,\n+  totalCount,\n+  loading,\n+  onReload,\n+}: {\n+  filters: BinaryQueryObjectFilterClause[];\n+  setFilters: (filters: BinaryQueryObjectFilterClause[]) => void;\n+  totalCount?: number;\n+  loading: boolean;\n+  onReload: () => void;\n+}) {\n+  const theme = useTheme();\n+  const filterMap: Record<string, BinaryQueryObjectFilterClause> = useMemo(\n+    () =>\n+      Object.assign(\n+        {},\n+        ...filters.map(filter => ({\n+          [isAdhocColumn(filter.col)\n+            ? (filter.col.label as string)\n+            : filter.col]: filter,\n+        })),\n+      ),\n+    [filters],\n+  );\n+\n+  const removeFilter = useCallback(\n+    colName => {\n+      const updatedFilterMap = { ...filterMap };\n+      delete updatedFilterMap[colName];\n+      setFilters([...Object.values(updatedFilterMap)]);\n+    },\n+    [filterMap, setFilters],\n+  );\n+\n+  const filterTags = useMemo(\n+    () =>\n+      Object.entries(filterMap)\n+        .map(([colName, { val, formattedVal }]) => ({\n+          colName,\n+          val: formattedVal ?? val,\n+        }))\n+        .sort((a, b) => a.colName.localeCompare(b.colName)),\n+    [filterMap],\n+  );\n+\n+  return (\n+    <div\n+      css={css`\n+        display: flex;\n+        justify-content: space-between;\n+        padding: ${theme.gridUnit / 2}px 0;\n+      `}\n+    >\n+      <div\n+        css={css`\n+          display: flex;\n+          flex-wrap: wrap;\n+          margin-bottom: -${theme.gridUnit * 4}px;\n+        `}\n+      >\n+        {filterTags.map(({ colName, val }) => (\n+          <Tag\n+            closable\n+            onClose={removeFilter.bind(null, colName)}\n+            key={colName}\n+            css={css`\n+              height: ${theme.gridUnit * 6}px;\n+              display: flex;\n+              align-items: center;\n+              padding: ${theme.gridUnit / 2}px ${theme.gridUnit * 2}px;\n+              margin-right: ${theme.gridUnit * 4}px;\n+              margin-bottom: ${theme.gridUnit * 4}px;\n+              line-height: 1.2;\n+            `}\n+          >\n+            <span\n+              css={css`\n+                margin-right: ${theme.gridUnit}px;\n+              `}\n+            >\n+              {colName}\n+            </span>\n+            <strong>{val}</strong>\n+          </Tag>\n+        ))}\n+      </div>\n+      <div\n+        css={css`\n+          display: flex;\n+          align-items: center;\n+          height: min-content;\n+        `}\n+      >\n+        <RowCountLabel loading={loading && !totalCount} rowcount={totalCount} />\n+        <Icons.ReloadOutlined\n+          iconColor={theme.colors.grayscale.light1}\n+          iconSize=\"l\"\n+          aria-label={t('Reload')}\n+          role=\"button\"\n+          onClick={onReload}\n+        />\n+      </div>\n+    </div>\n+  );\n+}"
        }
    ],
    "superset-frontend/src/dashboard/components/DrillDetailPane/index.ts": [
        {
            "52648ecd7f6158473ec198e1ade9a5a69008b752": "@@ -0,0 +1,20 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+export { default } from './DrillDetailPane';"
        }
    ],
    "superset-frontend/src/dashboard/components/DrillDetailPane/utils.ts": [
        {
            "52648ecd7f6158473ec198e1ade9a5a69008b752": "@@ -0,0 +1,46 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import { omit } from 'lodash';\n+import {\n+  ensureIsArray,\n+  QueryFormData,\n+  BinaryQueryObjectFilterClause,\n+  buildQueryObject,\n+} from '@superset-ui/core';\n+\n+export function getDrillPayload(\n+  queryFormData?: QueryFormData,\n+  drillFilters?: BinaryQueryObjectFilterClause[],\n+) {\n+  if (!queryFormData) {\n+    return undefined;\n+  }\n+  const queryObject = buildQueryObject(queryFormData);\n+  const extras = omit(queryObject.extras, 'having');\n+  const filters = [\n+    ...ensureIsArray(queryObject.filters),\n+    ...ensureIsArray(drillFilters).map(f => omit(f, 'formattedVal')),\n+  ];\n+  return {\n+    granularity: queryObject.granularity,\n+    time_range: queryObject.time_range,\n+    filters,\n+    extras,\n+  };\n+}"
        }
    ],
    "superset-frontend/src/dashboard/components/SliceHeaderControls/index.tsx": [
        {
            "52648ecd7f6158473ec198e1ade9a5a69008b752": "@@ -16,8 +16,19 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-import React, { MouseEvent, Key } from 'react';\n-import { Link, RouteComponentProps, withRouter } from 'react-router-dom';\n+import React, {\n+  MouseEvent,\n+  Key,\n+  ReactChild,\n+  useState,\n+  useCallback,\n+} from 'react';\n+import {\n+  Link,\n+  RouteComponentProps,\n+  useHistory,\n+  withRouter,\n+} from 'react-router-dom';\n import moment from 'moment';\n import {\n   Behavior,\n@@ -26,6 +37,7 @@ import {\n   QueryFormData,\n   styled,\n   t,\n+  useTheme,\n } from '@superset-ui/core';\n import { Menu } from 'src/components/Menu';\n import { NoAnimationDropdown } from 'src/components/Dropdown';\n@@ -40,6 +52,8 @@ import ModalTrigger from 'src/components/ModalTrigger';\n import Button from 'src/components/Button';\n import ViewQueryModal from 'src/explore/components/controls/ViewQueryModal';\n import { ResultsPaneOnDashboard } from 'src/explore/components/DataTablesPane';\n+import Modal from 'src/components/Modal';\n+import DrillDetailPane from 'src/dashboard/components/DrillDetailPane';\n \n const MENU_KEYS = {\n   CROSS_FILTER_SCOPING: 'cross_filter_scoping',\n@@ -52,6 +66,7 @@ const MENU_KEYS = {\n   TOGGLE_CHART_DESCRIPTION: 'toggle_chart_description',\n   VIEW_QUERY: 'view_query',\n   VIEW_RESULTS: 'view_results',\n+  DRILL_TO_DETAIL: 'drill_to_detail',\n };\n \n const VerticalDotsContainer = styled.div`\n@@ -97,6 +112,7 @@ export interface SliceHeaderControlsProps {\n     slice_id: number;\n     slice_description: string;\n     form_data?: { emit_filter?: boolean };\n+    datasource: string;\n   };\n \n   componentId: string;\n@@ -140,6 +156,83 @@ const dropdownIconsStyles = css`\n   }\n `;\n \n+const DashboardChartModalTrigger = ({\n+  exploreUrl,\n+  triggerNode,\n+  modalTitle,\n+  modalBody,\n+}: {\n+  exploreUrl: string;\n+  triggerNode: ReactChild;\n+  modalTitle: ReactChild;\n+  modalBody: ReactChild;\n+}) => {\n+  const [showModal, setShowModal] = useState(false);\n+  const openModal = useCallback(() => setShowModal(true), []);\n+  const closeModal = useCallback(() => setShowModal(false), []);\n+  const history = useHistory();\n+  const exploreChart = () => history.push(exploreUrl);\n+  const theme = useTheme();\n+\n+  return (\n+    <>\n+      <span\n+        data-test=\"span-modal-trigger\"\n+        onClick={openModal}\n+        role=\"button\"\n+        tabIndex={0}\n+      >\n+        {triggerNode}\n+      </span>\n+      {(() => (\n+        <Modal\n+          css={css`\n+            .ant-modal-body {\n+              display: flex;\n+              flex-direction: column;\n+            }\n+          `}\n+          show={showModal}\n+          onHide={closeModal}\n+          title={modalTitle}\n+          footer={\n+            <>\n+              <Button\n+                buttonStyle=\"secondary\"\n+                buttonSize=\"small\"\n+                onClick={exploreChart}\n+              >\n+                {t('Edit chart')}\n+              </Button>\n+              <Button\n+                buttonStyle=\"primary\"\n+                buttonSize=\"small\"\n+                onClick={closeModal}\n+              >\n+                {t('Close')}\n+              </Button>\n+            </>\n+          }\n+          responsive\n+          resizable\n+          resizableConfig={{\n+            minHeight: theme.gridUnit * 128,\n+            minWidth: theme.gridUnit * 128,\n+            defaultSize: {\n+              width: 'auto',\n+              height: '75vh',\n+            },\n+          }}\n+          draggable\n+          destroyOnClose\n+        >\n+          {modalBody}\n+        </Modal>\n+      ))()}\n+    </>\n+  );\n+};\n+\n class SliceHeaderControls extends React.PureComponent<\n   SliceHeaderControlsPropsWithRouter,\n   State\n@@ -339,7 +432,8 @@ class SliceHeaderControls extends React.PureComponent<\n \n         {this.props.supersetCanExplore && (\n           <Menu.Item key={MENU_KEYS.VIEW_RESULTS}>\n-            <ModalTrigger\n+            <DashboardChartModalTrigger\n+              exploreUrl={this.props.exploreUrl}\n               triggerNode={\n                 <span data-test=\"view-query-menu-item\">\n                   {t('View as table')}\n@@ -355,22 +449,26 @@ class SliceHeaderControls extends React.PureComponent<\n                   isVisible\n                 />\n               }\n-              modalFooter={\n-                <Button\n-                  buttonStyle=\"secondary\"\n-                  buttonSize=\"small\"\n-                  onClick={() => this.props.history.push(this.props.exploreUrl)}\n-                >\n-                  {t('Edit chart')}\n-                </Button>\n-              }\n-              draggable\n-              resizable\n-              responsive\n             />\n           </Menu.Item>\n         )}\n \n+        {isFeatureEnabled(FeatureFlag.DRILL_TO_DETAIL) &&\n+          this.props.supersetCanExplore && (\n+            <Menu.Item key={MENU_KEYS.DRILL_TO_DETAIL}>\n+              <DashboardChartModalTrigger\n+                exploreUrl={this.props.exploreUrl}\n+                triggerNode={\n+                  <span data-test=\"view-query-menu-item\">\n+                    {t('Drill to detail')}\n+                  </span>\n+                }\n+                modalTitle={t('Drill to detail: %s', slice.slice_name)}\n+                modalBody={<DrillDetailPane formData={this.props.formData} />}\n+              />\n+            </Menu.Item>\n+          )}\n+\n         {(slice.description || this.props.supersetCanExplore) && (\n           <Menu.Divider />\n         )}"
        }
    ],
    "README.md": [
        {
            "ca98fd84684c30913d30240309aaa52f8a3c3cc0": "@@ -86,38 +86,37 @@ Superset can query data from any SQL-speaking datastore or data engine (Presto,\n Here are some of the major database solutions that are supported:\n \n <p align=\"center\">\n-  <img src=\"superset-frontend/src/assets/images/redshift.png\" alt=\"redshift\" border=\"0\" width=\"106\" height=\"41\"/>\n-  <img src=\"superset-frontend/src/assets/images/google-biquery.png\" alt=\"google-biquery\" border=\"0\" width=\"114\" height=\"43\"/>\n-  <img src=\"superset-frontend/src/assets/images/snowflake.png\" alt=\"snowflake\" border=\"0\" width=\"152\" height=\"46\"/>\n-  <img src=\"superset-frontend/src/assets/images/trino.png\" alt=\"trino\" border=\"0\" width=\"46\" height=\"46\"/>\n-  <img src=\"superset-frontend/src/assets/images/presto.png\" alt=\"presto\" border=\"0\" width=\"152\" height=\"46\"/>\n-  <img src=\"superset-frontend/src/assets/images/databricks.png\" alt=\"databricks\" border=\"0\" width=\"142\" height=\"22\" />\n-  <img src=\"superset-frontend/src/assets/images/druid.png\" alt=\"druid\" border=\"0\" width=\"135\" height=\"37\" />\n-  <img src=\"superset-frontend/src/assets/images/firebolt.png\" alt=\"firebolt\" border=\"0\" width=\"133\" height=\"21.5\" />\n-  <img src=\"superset-frontend/src/assets/images/timescale.png\" alt=\"timescale\" border=\"0\" width=\"102\" height=\"26.8\" />  \n-  <img src=\"superset-frontend/src/assets/images/rockset.png\" alt=\"rockset\" border=\"0\" width=\"125\" height=\"51\" />\n-  <img src=\"superset-frontend/src/assets/images/postgresql.png\" alt=\"postgresql\" border=\"0\" width=\"132\" height=\"81\" />\n-  <img src=\"superset-frontend/src/assets/images/mysql.png\" alt=\"mysql\" border=\"0\" width=\"119\" height=\"62\" />\n-  <img src=\"superset-frontend/src/assets/images/mssql-server.png\" alt=\"mssql-server\" border=\"0\" width=\"93\" height=\"74\" />\n-  <img src=\"superset-frontend/src/assets/images/db2.png\" alt=\"db2\" border=\"0\" width=\"62\" height=\"62\" />\n-  <img src=\"superset-frontend/src/assets/images/sqlite.png\" alt=\"sqlite\" border=\"0\" width=\"102\" height=\"45\" />\n-  <img src=\"superset-frontend/src/assets/images/sybase.png\" alt=\"sybase\" border=\"0\" width=\"128\" height=\"47\" />\n-  <img src=\"superset-frontend/src/assets/images/mariadb.png\" alt=\"mariadb\" border=\"0\" width=\"83\" height=\"63\" />\n-  <img src=\"superset-frontend/src/assets/images/vertica.png\" alt=\"vertica\" border=\"0\" width=\"128\" height=\"40\" />\n-  <img src=\"superset-frontend/src/assets/images/oracle.png\" alt=\"oracle\" border=\"0\" width=\"121\" height=\"66\" />\n-  <img src=\"superset-frontend/src/assets/images/firebird.png\" alt=\"firebird\" border=\"0\" width=\"86\" height=\"56\" />\n-  <img src=\"superset-frontend/src/assets/images/greenplum.png\" alt=\"greenplum\" border=\"0\" width=\"140\" height=\"45\" />\n-  <img src=\"superset-frontend/src/assets/images/clickhouse.png\" alt=\"clickhouse\" border=\"0\" width=\"133\" height=\"34\" />\n-  <img src=\"superset-frontend/src/assets/images/exasol.png\" alt=\"exasol\" border=\"0\" width=\"106\" height=\"59\" />\n-  <img src=\"superset-frontend/src/assets/images/monet-db.png\" alt=\"monet-db\" border=\"0\" width=\"106\" height=\"46\" />\n-  <img src=\"superset-frontend/src/assets/images/apache-kylin.png\" alt=\"apache-kylin\" border=\"0\" width=\"56\" height=\"64\"/>\n-  <img src=\"superset-frontend/src/assets/images/hologres.png\" alt=\"hologres\" border=\"0\" width=\"71\" height=\"64\"/>\n-  <img src=\"superset-frontend/src/assets/images/netezza.png\" alt=\"netezza\" border=\"0\" width=\"64\" height=\"64\"/>\n-  <img src=\"superset-frontend/src/assets/images/pinot.png\" alt=\"pinot\" border=\"0\" width=\"165\" height=\"64\"/>\n-  <img src=\"superset-frontend/src/assets/images/teradata.png\" alt=\"teradata\" border=\"0\" width=\"165\" height=\"64\"/>\n-  <img src=\"superset-frontend/src/assets/images/yugabyte.png\" alt=\"yugabyte\" border=\"0\" width=\"180\" height=\"31\"/>\n+  <img src=\"superset-frontend/src/assets/images/redshift.png\" alt=\"redshift\" border=\"0\" width=\"200\" height=\"80\"/>\n+  <img src=\"superset-frontend/src/assets/images/google-biquery.png\" alt=\"google-biquery\" border=\"0\" width=\"200\" height=\"80\"/>\n+  <img src=\"superset-frontend/src/assets/images/snowflake.png\" alt=\"snowflake\" border=\"0\" width=\"200\" height=\"80\"/>\n+  <img src=\"superset-frontend/src/assets/images/trino.png\" alt=\"trino\" border=\"0\" width=\"200\" height=\"80\"/>\n+  <img src=\"superset-frontend/src/assets/images/presto.png\" alt=\"presto\" border=\"0\" width=\"200\" height=\"80\"/>\n+  <img src=\"superset-frontend/src/assets/images/databricks.png\" alt=\"databricks\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/druid.png\" alt=\"druid\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/firebolt.png\" alt=\"firebolt\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/timescale.png\" alt=\"timescale\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/rockset.png\" alt=\"rockset\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/postgresql.png\" alt=\"postgresql\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/mysql.png\" alt=\"mysql\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/mssql-server.png\" alt=\"mssql-server\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/db2.png\" alt=\"db2\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/sqlite.png\" alt=\"sqlite\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/sybase.png\" alt=\"sybase\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/mariadb.png\" alt=\"mariadb\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/vertica.png\" alt=\"vertica\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/oracle.png\" alt=\"oracle\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/firebird.png\" alt=\"firebird\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/greenplum.png\" alt=\"greenplum\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/clickhouse.png\" alt=\"clickhouse\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/exasol.png\" alt=\"exasol\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/monet-db.png\" alt=\"monet-db\" border=\"0\" width=\"200\" height=\"80\" />\n+  <img src=\"superset-frontend/src/assets/images/apache-kylin.png\" alt=\"apache-kylin\" border=\"0\" width=\"200\" height=\"80\"/>\n+  <img src=\"superset-frontend/src/assets/images/hologres.png\" alt=\"hologres\" border=\"0\" width=\"200\" height=\"80\"/>\n+  <img src=\"superset-frontend/src/assets/images/netezza.png\" alt=\"netezza\" border=\"0\" width=\"200\" height=\"80\"/>\n+  <img src=\"superset-frontend/src/assets/images/pinot.png\" alt=\"pinot\" border=\"0\" width=\"200\" height=\"80\"/>\n+  <img src=\"superset-frontend/src/assets/images/teradata.png\" alt=\"teradata\" border=\"0\" width=\"200\" height=\"80\"/>\n+  <img src=\"superset-frontend/src/assets/images/yugabyte.png\" alt=\"yugabyte\" border=\"0\" width=\"200\" height=\"80\"/>\n </p>\n-\n **A more comprehensive list of supported databases** along with the configuration instructions can be found\n [here](https://superset.apache.org/docs/databases/installing-database-drivers).\n \n@@ -158,7 +157,7 @@ Understanding the Superset Points of View\n   - [Building New Database Connectors](https://preset.io/blog/building-database-connector/)\n   - [Create Your First Dashboard](https://superset.apache.org/docs/creating-charts-dashboards/first-dashboard)\n   - [Comprehensive Tutorial for Contributing Code to Apache Superset\n-](https://preset.io/blog/tutorial-contributing-code-to-apache-superset/)\n+  ](https://preset.io/blog/tutorial-contributing-code-to-apache-superset/)\n - [Resources to master Superset by Preset](https://preset.io/resources/)\n \n - Deploying Superset"
        }
    ],
    "superset-frontend/packages/superset-ui-core/src/query/types/QueryResponse.ts": [
        {
            "0bf4e56dc3e129d2b9239f055212249ba95521e4": "@@ -83,6 +83,7 @@ export interface ChartDataResponseResult {\n export interface TimeseriesChartDataResponseResult\n   extends ChartDataResponseResult {\n   data: TimeseriesDataRecord[];\n+  label_map: Record<string, DataRecordValue[]>;\n }\n \n /**"
        }
    ],
    "superset-frontend/plugins/plugin-chart-echarts/src/Gauge/EchartsGauge.tsx": [
        {
            "0bf4e56dc3e129d2b9239f055212249ba95521e4": "@@ -17,22 +17,21 @@\n  * under the License.\n  */\n import React, { useCallback } from 'react';\n-import { QueryObjectFilterClause } from '@superset-ui/core';\n import { GaugeChartTransformedProps } from './types';\n import Echart from '../components/Echart';\n-import { Event, clickEventHandler } from '../utils/eventHandlers';\n+import { allEventHandlers } from '../utils/eventHandlers';\n \n-export default function EchartsGauge({\n-  height,\n-  width,\n-  echartOptions,\n-  setDataMask,\n-  labelMap,\n-  groupby,\n-  selectedValues,\n-  formData: { emitFilter },\n-  onContextMenu,\n-}: GaugeChartTransformedProps) {\n+export default function EchartsGauge(props: GaugeChartTransformedProps) {\n+  const {\n+    height,\n+    width,\n+    echartOptions,\n+    setDataMask,\n+    labelMap,\n+    groupby,\n+    selectedValues,\n+    formData: { emitFilter },\n+  } = props;\n   const handleChange = useCallback(\n     (values: string[]) => {\n       if (!emitFilter) {\n@@ -69,28 +68,7 @@ export default function EchartsGauge({\n     [groupby, labelMap, setDataMask, selectedValues],\n   );\n \n-  const eventHandlers = {\n-    click: clickEventHandler(selectedValues, handleChange),\n-    contextmenu: (e: Event) => {\n-      if (onContextMenu) {\n-        e.event.stop();\n-        const pointerEvent = e.event.event;\n-        const filters: QueryObjectFilterClause[] = [];\n-        if (groupby.length > 0) {\n-          const values = e.name.split(',');\n-          groupby.forEach((dimension, i) =>\n-            filters.push({\n-              col: dimension,\n-              op: '==',\n-              val: values[i].split(': ')[1],\n-              formattedVal: values[i].split(': ')[1],\n-            }),\n-          );\n-        }\n-        onContextMenu(filters, pointerEvent.offsetX, pointerEvent.offsetY);\n-      }\n-    },\n-  };\n+  const eventHandlers = allEventHandlers(props, handleChange);\n \n   return (\n     <Echart"
        }
    ],
    "superset-frontend/plugins/plugin-chart-echarts/src/MixedTimeseries/EchartsMixedTimeseries.tsx": [
        {
            "0bf4e56dc3e129d2b9239f055212249ba95521e4": "@@ -116,7 +116,7 @@ export default function EchartsMixedTimeseries({\n         const { data, seriesIndex } = eventParams;\n         if (data) {\n           const pointerEvent = eventParams.event.event;\n-          const values = eventParams.seriesName.split(',');\n+          const values = labelMap[eventParams.seriesName];\n           const { queryIndex } = (echartOptions.series as any)[seriesIndex];\n           const groupby = queryIndex > 0 ? formData.groupbyB : formData.groupby;\n           const filters: QueryObjectFilterClause[] = [];\n@@ -132,7 +132,7 @@ export default function EchartsMixedTimeseries({\n               col: dimension,\n               op: '==',\n               val: values[i],\n-              formattedVal: values[i],\n+              formattedVal: String(values[i]),\n             }),\n           );\n           onContextMenu(filters, pointerEvent.offsetX, pointerEvent.offsetY);"
        }
    ],
    "superset-frontend/plugins/plugin-chart-echarts/src/MixedTimeseries/transformProps.ts": [
        {
            "0bf4e56dc3e129d2b9239f055212249ba95521e4": "@@ -20,7 +20,6 @@\n import {\n   AnnotationLayer,\n   CategoricalColorNamespace,\n-  DataRecordValue,\n   DTTM_ALIAS,\n   GenericDataType,\n   getColumnLabel,\n@@ -29,6 +28,7 @@ import {\n   isFormulaAnnotationLayer,\n   isIntervalAnnotationLayer,\n   isTimeseriesAnnotationLayer,\n+  TimeseriesChartDataResponseResult,\n   TimeseriesDataRecord,\n } from '@superset-ui/core';\n import { EChartsCoreOption, SeriesOption } from 'echarts';\n@@ -90,6 +90,10 @@ export default function transformProps(\n     inContextMenu,\n   } = chartProps;\n   const { verboseMap = {} } = datasource;\n+  const { label_map: labelMap } =\n+    queriesData[0] as TimeseriesChartDataResponseResult;\n+  const { label_map: labelMapB } =\n+    queriesData[1] as TimeseriesChartDataResponseResult;\n   const data1 = (queriesData[0].data || []) as TimeseriesDataRecord[];\n   const data2 = (queriesData[1].data || []) as TimeseriesDataRecord[];\n   const annotationData = getAnnotationData(chartProps);\n@@ -352,21 +356,6 @@ export default function transformProps(\n     convertInteger(yAxisTitleMargin),\n     convertInteger(xAxisTitleMargin),\n   );\n-  const labelMap = rawSeriesA.reduce((acc, datum) => {\n-    const label = datum.name as string;\n-    return {\n-      ...acc,\n-      [label]: label.split(', '),\n-    };\n-  }, {}) as Record<string, DataRecordValue[]>;\n-\n-  const labelMapB = rawSeriesB.reduce((acc, datum) => {\n-    const label = datum.name as string;\n-    return {\n-      ...acc,\n-      [label]: label.split(', '),\n-    };\n-  }, {}) as Record<string, DataRecordValue[]>;\n \n   const { setDataMask = () => {}, onContextMenu } = hooks;\n   const alignTicks = yAxisIndex !== yAxisIndexB;"
        },
        {
            "bdcc0a9bcfff476bcd43edc84f08423d8f415d50": "@@ -38,9 +38,10 @@ import {\n   EchartsMixedTimeseriesChartTransformedProps,\n   EchartsMixedTimeseriesProps,\n } from './types';\n-import { ForecastSeriesEnum } from '../types';\n+import { EchartsTimeseriesSeriesType, ForecastSeriesEnum } from '../types';\n import { parseYAxisBound } from '../utils/controls';\n import {\n+  getOverMaxHiddenFormatter,\n   currentSeries,\n   dedupSeries,\n   extractSeries,\n@@ -210,51 +211,6 @@ export default function transformProps(\n     percentageThreshold,\n     xAxisCol,\n   });\n-  rawSeriesA.forEach(entry => {\n-    const transformedSeries = transformSeries(entry, colorScale, {\n-      area,\n-      markerEnabled,\n-      markerSize,\n-      areaOpacity: opacity,\n-      seriesType,\n-      showValue,\n-      stack: Boolean(stack),\n-      yAxisIndex,\n-      filterState,\n-      seriesKey: entry.name,\n-      sliceId,\n-      queryIndex: 0,\n-      formatter,\n-      showValueIndexes: showValueIndexesA,\n-      totalStackedValues,\n-      thresholdValues,\n-    });\n-    if (transformedSeries) series.push(transformedSeries);\n-  });\n-\n-  rawSeriesB.forEach(entry => {\n-    const transformedSeries = transformSeries(entry, colorScale, {\n-      area: areaB,\n-      markerEnabled: markerEnabledB,\n-      markerSize: markerSizeB,\n-      areaOpacity: opacityB,\n-      seriesType: seriesTypeB,\n-      showValue: showValueB,\n-      stack: Boolean(stackB),\n-      yAxisIndex: yAxisIndexB,\n-      filterState,\n-      seriesKey: primarySeries.has(entry.name as string)\n-        ? `${entry.name} (1)`\n-        : entry.name,\n-      sliceId,\n-      queryIndex: 1,\n-      formatter: formatterSecondary,\n-      showValueIndexes: showValueIndexesB,\n-      totalStackedValues: totalStackedValuesB,\n-      thresholdValues: thresholdValuesB,\n-    });\n-    if (transformedSeries) series.push(transformedSeries);\n-  });\n \n   annotationLayers\n     .filter((layer: AnnotationLayer) => layer.show)\n@@ -309,6 +265,64 @@ export default function transformProps(\n   // yAxisBounds need to be parsed to replace incompatible values with undefined\n   let [min, max] = (yAxisBounds || []).map(parseYAxisBound);\n \n+  const maxLabelFormatter = getOverMaxHiddenFormatter({ max, formatter });\n+  const maxLabelFormatterSecondary = getOverMaxHiddenFormatter({\n+    max,\n+    formatter: formatterSecondary,\n+  });\n+\n+  rawSeriesA.forEach(entry => {\n+    const transformedSeries = transformSeries(entry, colorScale, {\n+      area,\n+      markerEnabled,\n+      markerSize,\n+      areaOpacity: opacity,\n+      seriesType,\n+      showValue,\n+      stack: Boolean(stack),\n+      yAxisIndex,\n+      filterState,\n+      seriesKey: entry.name,\n+      sliceId,\n+      queryIndex: 0,\n+      formatter:\n+        seriesType === EchartsTimeseriesSeriesType.Bar\n+          ? maxLabelFormatter\n+          : formatter,\n+      showValueIndexes: showValueIndexesA,\n+      totalStackedValues,\n+      thresholdValues,\n+    });\n+    if (transformedSeries) series.push(transformedSeries);\n+  });\n+\n+  rawSeriesB.forEach(entry => {\n+    const transformedSeries = transformSeries(entry, colorScale, {\n+      area: areaB,\n+      markerEnabled: markerEnabledB,\n+      markerSize: markerSizeB,\n+      areaOpacity: opacityB,\n+      seriesType: seriesTypeB,\n+      showValue: showValueB,\n+      stack: Boolean(stackB),\n+      yAxisIndex: yAxisIndexB,\n+      filterState,\n+      seriesKey: primarySeries.has(entry.name as string)\n+        ? `${entry.name} (1)`\n+        : entry.name,\n+      sliceId,\n+      queryIndex: 1,\n+      formatter:\n+        seriesTypeB === EchartsTimeseriesSeriesType.Bar\n+          ? maxLabelFormatterSecondary\n+          : formatterSecondary,\n+      showValueIndexes: showValueIndexesB,\n+      totalStackedValues: totalStackedValuesB,\n+      thresholdValues: thresholdValuesB,\n+    });\n+    if (transformedSeries) series.push(transformedSeries);\n+  });\n+\n   // default to 0-100% range when doing row-level contribution chart\n   if (contributionMode === 'row' && stack) {\n     if (min === undefined) min = 0;"
        }
    ],
    "superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/EchartsTimeseries.tsx": [
        {
            "0bf4e56dc3e129d2b9239f055212249ba95521e4": "@@ -182,7 +182,7 @@ export default function EchartsTimeseries({\n         const { data } = eventParams;\n         if (data) {\n           const pointerEvent = eventParams.event.event;\n-          const values = eventParams.seriesName.split(',');\n+          const values = labelMap[eventParams.seriesName];\n           const filters: QueryObjectFilterClause[] = [];\n           filters.push({\n             col: formData.granularitySqla,\n@@ -196,7 +196,7 @@ export default function EchartsTimeseries({\n               col: dimension,\n               op: '==',\n               val: values[i],\n-              formattedVal: values[i],\n+              formattedVal: String(values[i]),\n             }),\n           );\n           onContextMenu(filters, pointerEvent.offsetX, pointerEvent.offsetY);"
        }
    ],
    "superset-frontend/plugins/plugin-chart-echarts/src/Timeseries/transformProps.ts": [
        {
            "0bf4e56dc3e129d2b9239f055212249ba95521e4": "@@ -20,7 +20,6 @@\n import {\n   AnnotationLayer,\n   CategoricalColorNamespace,\n-  DataRecordValue,\n   DTTM_ALIAS,\n   GenericDataType,\n   getColumnLabel,\n@@ -101,7 +100,8 @@ export default function transformProps(\n   } = chartProps;\n   const { verboseMap = {} } = datasource;\n   const [queryData] = queriesData;\n-  const { data = [] } = queryData as TimeseriesChartDataResponseResult;\n+  const { data = [], label_map: labelMap } =\n+    queryData as TimeseriesChartDataResponseResult;\n   const dataTypes = getColtypesMapping(queryData);\n   const annotationData = getAnnotationData(chartProps);\n \n@@ -291,20 +291,9 @@ export default function transformProps(\n       ? getXAxisFormatter(xAxisTimeFormat)\n       : String;\n \n-  const labelMap = series.reduce(\n-    (acc: Record<string, DataRecordValue[]>, datum) => {\n-      const name: string = datum.name as string;\n-      return {\n-        ...acc,\n-        [name]: [name],\n-      };\n-    },\n-    {},\n-  );\n-\n   const {\n     setDataMask = () => {},\n-    setControlValue = (...args: unknown[]) => {},\n+    setControlValue = () => {},\n     onContextMenu,\n   } = hooks;\n "
        }
    ],
    "superset-frontend/plugins/plugin-chart-echarts/src/utils/eventHandlers.ts": [
        {
            "0bf4e56dc3e129d2b9239f055212249ba95521e4": "@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-import { QueryObjectFilterClause } from '@superset-ui/core';\n+import { DataRecordValue, QueryObjectFilterClause } from '@superset-ui/core';\n import { EChartTransformedProps, EventHandlers } from '../types';\n \n export type Event = {\n@@ -42,20 +42,21 @@ export const contextMenuEventHandler =\n   (\n     groupby: EChartTransformedProps<any>['groupby'],\n     onContextMenu: EChartTransformedProps<any>['onContextMenu'],\n+    labelMap: Record<string, DataRecordValue[]>,\n   ) =>\n   (e: Event) => {\n     if (onContextMenu) {\n       e.event.stop();\n       const pointerEvent = e.event.event;\n       const filters: QueryObjectFilterClause[] = [];\n       if (groupby.length > 0) {\n-        const values = e.name.split(',');\n+        const values = labelMap[e.name];\n         groupby.forEach((dimension, i) =>\n           filters.push({\n             col: dimension,\n             op: '==',\n             val: values[i],\n-            formattedVal: values[i],\n+            formattedVal: String(values[i]),\n           }),\n         );\n       }\n@@ -67,10 +68,10 @@ export const allEventHandlers = (\n   transformedProps: EChartTransformedProps<any>,\n   handleChange: (values: string[]) => void,\n ) => {\n-  const { groupby, selectedValues, onContextMenu } = transformedProps;\n+  const { groupby, selectedValues, onContextMenu, labelMap } = transformedProps;\n   const eventHandlers: EventHandlers = {\n     click: clickEventHandler(selectedValues, handleChange),\n-    contextmenu: contextMenuEventHandler(groupby, onContextMenu),\n+    contextmenu: contextMenuEventHandler(groupby, onContextMenu, labelMap),\n   };\n   return eventHandlers;\n };"
        }
    ],
    "superset-frontend/packages/superset-ui-core/src/number-format/NumberFormats.ts": [
        {
            "bdcc0a9bcfff476bcd43edc84f08423d8f415d50": "@@ -52,6 +52,7 @@ const SI = SI_3_DIGIT;\n \n const SMART_NUMBER = 'SMART_NUMBER';\n const SMART_NUMBER_SIGNED = 'SMART_NUMBER_SIGNED';\n+const OVER_MAX_HIDDEN = 'OVER_MAX_HIDDEN';\n \n const NumberFormats = {\n   DOLLAR,\n@@ -82,6 +83,7 @@ const NumberFormats = {\n   SI_3_DIGIT,\n   SMART_NUMBER,\n   SMART_NUMBER_SIGNED,\n+  OVER_MAX_HIDDEN,\n };\n \n export default NumberFormats;"
        }
    ],
    "superset-frontend/plugins/plugin-chart-echarts/src/utils/series.ts": [
        {
            "bdcc0a9bcfff476bcd43edc84f08423d8f415d50": "@@ -24,6 +24,7 @@ import {\n   DTTM_ALIAS,\n   ensureIsArray,\n   GenericDataType,\n+  NumberFormats,\n   NumberFormatter,\n   TimeFormatter,\n } from '@superset-ui/core';\n@@ -326,3 +327,24 @@ export function getAxisType(dataType?: GenericDataType): AxisType {\n   }\n   return 'category';\n }\n+\n+export function getOverMaxHiddenFormatter(\n+  config: {\n+    max?: number;\n+    formatter?: NumberFormatter;\n+  } = {},\n+) {\n+  const { max, formatter } = config;\n+  // Only apply this logic if there's a MAX set in the controls\n+  const shouldHideIfOverMax = !!max || max === 0;\n+\n+  return new NumberFormatter({\n+    formatFunc: value =>\n+      `${\n+        shouldHideIfOverMax && value > max\n+          ? ''\n+          : formatter?.format(value) || value\n+      }`,\n+    id: NumberFormats.OVER_MAX_HIDDEN,\n+  });\n+}"
        }
    ],
    "superset-frontend/plugins/plugin-chart-echarts/test/utils/series.test.ts": [
        {
            "bdcc0a9bcfff476bcd43edc84f08423d8f415d50": "@@ -26,6 +26,7 @@ import {\n   getLegendProps,\n   sanitizeHtml,\n   extractShowValueIndexes,\n+  getOverMaxHiddenFormatter,\n } from '../../src/utils/series';\n import { LegendOrientation, LegendType } from '../../src/types';\n import { defaultLegendPadding } from '../../src/defaults';\n@@ -536,4 +537,16 @@ describe('formatSeriesName', () => {\n       expect(sanitizeHtml(NULL_STRING)).toEqual('&lt;NULL&gt;');\n     });\n   });\n+\n+  describe('getOverMaxHiddenFormatter', () => {\n+    it('should hide value if greater than max', () => {\n+      const formatter = getOverMaxHiddenFormatter({ max: 81000 });\n+      expect(formatter.format(84500)).toEqual('');\n+    });\n+    it('should show value if less or equal than max', () => {\n+      const formatter = getOverMaxHiddenFormatter({ max: 81000 });\n+      expect(formatter.format(81000)).toEqual('81000');\n+      expect(formatter.format(50000)).toEqual('50000');\n+    });\n+  });\n });"
        }
    ],
    "docs/docs/databases/timescaledb.mdx": [
        {
            "d44202f03c2d623aa2e6eda9b7f42d38fdd8cf38": "@@ -0,0 +1,38 @@\n+---\n+title: TimescaleDB\n+hide_title: true\n+sidebar_position: 31\n+version: 1\n+---\n+\n+## TimescaleDB\n+[TimescaleDB](https://www.timescale.com) is the open-source relational database for time-series and analytics to build powerful data-intensive applications.\n+TimescaleDB is a PostgreSQL extension, and you can use the standard PostgreSQL connector library, [psycopg2](https://www.psycopg.org/docs/), to connect to the database.\n+\n+If you're using docker-compose, psycopg2 comes out of the box with Superset.\n+\n+TimescaleDB sample connection parameters:\n+\n+- **User Name**: User\n+- **Password**: Password\n+- **Database Host**:\n+  - For Localhost: localhost or 127.0.0.1\n+  - For On Prem: IP address or Host name\n+  - For [Timescale Cloud](https://console.cloud.timescale.com) service: Host name\n+  - For [Managed Service for TimescaleDB](https://portal.managed.timescale.com) service: Host name\n+- **Database Name**: Database Name\n+- **Port**: default 5432 or Port number of the service\n+\n+The connection string looks like:\n+\n+```\n+postgresql://{username}:{password}@{host}:{port}/{database name}\n+```\n+\n+You can require SSL by adding `?sslmode=require` at the end (e.g. in case you use [Timescale Cloud](https://www.timescale.com/cloud)):\n+\n+```\n+postgresql://{username}:{password}@{host}:{port}/{database name}?sslmode=require\n+```\n+\n+[Learn more about TimescaleDB!](https://docs.timescale.com/)"
        }
    ],
    "docs/src/resources/data.js": [
        {
            "d44202f03c2d623aa2e6eda9b7f42d38fdd8cf38": "@@ -143,6 +143,11 @@ export const Databases = [\n     href: \"www.teradata.com\",\n     imgName: 'teradata.png'\n   },\n+  {\n+    title: 'TimescaleDB',\n+    href: \"www.timescale.com\",\n+    imgName: 'timescale.png'\n+  },\n   {\n     title: 'YugabyteDB',\n     href: \"www.yugabyte.com\","
        }
    ],
    "superset-frontend/src/filters/components/GroupBy/GroupByFilterPlugin.tsx": [
        {
            "d79b0bfc744885f6e6f0b5e9a4128c63c1dea58d": "@@ -71,7 +71,7 @@ export default function PluginFilterGroupBy(props: PluginFilterGroupByProps) {\n   }, [JSON.stringify(defaultValue), multiSelect]);\n \n   const groupbys = ensureIsArray(formData.groupby).map(getColumnLabel);\n-  const groupby = groupbys[0].length ? groupbys[0] : null;\n+  const groupby = groupbys[0]?.length ? groupbys[0] : null;\n \n   const withData = groupby\n     ? data.filter(row => groupby.includes(row.column_name as string))"
        }
    ],
    "superset/common/query_context_processor.py": [
        {
            "11bf7b9125eefd93796a46d964c3f027fbc9ce4d": "@@ -18,6 +18,7 @@\n \n import copy\n import logging\n+import re\n from typing import Any, ClassVar, Dict, List, Optional, TYPE_CHECKING, Union\n \n import numpy as np\n@@ -57,6 +58,7 @@\n     TIME_COMPARISON,\n )\n from superset.utils.date_parser import get_past_or_future, normalize_time_delta\n+from superset.utils.pandas_postprocessing.utils import unescape_separator\n from superset.views.utils import get_viz\n \n if TYPE_CHECKING:\n@@ -142,6 +144,17 @@ def get_df_payload(\n                 cache.error_message = str(ex)\n                 cache.status = QueryStatus.FAILED\n \n+        # the N-dimensional DataFrame has converteds into flat DataFrame\n+        # by `flatten operator`, \"comma\" in the column is escaped by `escape_separator`\n+        # the result DataFrame columns should be unescaped\n+        label_map = {\n+            unescape_separator(col): [\n+                unescape_separator(col) for col in re.split(r\"(?<!\\\\),\\s\", col)\n+            ]\n+            for col in cache.df.columns.values\n+        }\n+        cache.df.columns = [unescape_separator(col) for col in cache.df.columns.values]\n+\n         return {\n             \"cache_key\": cache_key,\n             \"cached_dttm\": cache.cache_dttm,\n@@ -157,6 +170,7 @@ def get_df_payload(\n             \"rowcount\": len(cache.df.index),\n             \"from_dttm\": query_obj.from_dttm,\n             \"to_dttm\": query_obj.to_dttm,\n+            \"label_map\": label_map,\n         }\n \n     def query_cache_key(self, query_obj: QueryObject, **kwargs: Any) -> Optional[str]:"
        }
    ],
    "superset/utils/pandas_postprocessing/__init__.py": [
        {
            "11bf7b9125eefd93796a46d964c3f027fbc9ce4d": "@@ -33,6 +33,10 @@\n from superset.utils.pandas_postprocessing.rolling import rolling\n from superset.utils.pandas_postprocessing.select import select\n from superset.utils.pandas_postprocessing.sort import sort\n+from superset.utils.pandas_postprocessing.utils import (\n+    escape_separator,\n+    unescape_separator,\n+)\n \n __all__ = [\n     \"aggregate\",\n@@ -52,4 +56,6 @@\n     \"select\",\n     \"sort\",\n     \"flatten\",\n+    \"escape_separator\",\n+    \"unescape_separator\",\n ]"
        }
    ],
    "superset/utils/pandas_postprocessing/flatten.py": [
        {
            "11bf7b9125eefd93796a46d964c3f027fbc9ce4d": "@@ -22,6 +22,7 @@\n \n from superset.utils.pandas_postprocessing.utils import (\n     _is_multi_index_on_columns,\n+    escape_separator,\n     FLAT_COLUMN_SEPARATOR,\n )\n \n@@ -86,8 +87,8 @@ def flatten(\n             _cells = []\n             for cell in series if is_sequence(series) else [series]:\n                 if pd.notnull(cell):\n-                    # every cell should be converted to string\n-                    _cells.append(str(cell))\n+                    # every cell should be converted to string and escape comma\n+                    _cells.append(escape_separator(str(cell)))\n             _columns.append(FLAT_COLUMN_SEPARATOR.join(_cells))\n \n         df.columns = _columns"
        }
    ],
    "superset/utils/pandas_postprocessing/utils.py": [
        {
            "11bf7b9125eefd93796a46d964c3f027fbc9ce4d": "@@ -198,3 +198,13 @@ def _append_columns(\n         return _base_df\n     append_df = append_df.rename(columns=columns)\n     return pd.concat([base_df, append_df], axis=\"columns\")\n+\n+\n+def escape_separator(plain_str: str, sep: str = FLAT_COLUMN_SEPARATOR) -> str:\n+    char = sep.strip()\n+    return plain_str.replace(char, \"\\\\\" + char)\n+\n+\n+def unescape_separator(escaped_str: str, sep: str = FLAT_COLUMN_SEPARATOR) -> str:\n+    char = sep.strip()\n+    return escaped_str.replace(\"\\\\\" + char, char)"
        }
    ],
    "tests/integration_tests/conftest.py": [
        {
            "11bf7b9125eefd93796a46d964c3f027fbc9ce4d": "@@ -358,3 +358,30 @@ def physical_dataset():\n     for ds in dataset:\n         db.session.delete(ds)\n     db.session.commit()\n+\n+\n+@pytest.fixture\n+def virtual_dataset_comma_in_column_value():\n+    from superset.connectors.sqla.models import SqlaTable, SqlMetric, TableColumn\n+\n+    dataset = SqlaTable(\n+        table_name=\"virtual_dataset\",\n+        sql=(\n+            \"SELECT 'col1,row1' as col1, 'col2, row1' as col2 \"\n+            \"UNION ALL \"\n+            \"SELECT 'col1,row2' as col1, 'col2, row2' as col2 \"\n+            \"UNION ALL \"\n+            \"SELECT 'col1,row3' as col1, 'col2, row3' as col2 \"\n+        ),\n+        database=get_example_database(),\n+    )\n+    TableColumn(column_name=\"col1\", type=\"VARCHAR(255)\", table=dataset)\n+    TableColumn(column_name=\"col2\", type=\"VARCHAR(255)\", table=dataset)\n+\n+    SqlMetric(metric_name=\"count\", expression=\"count(*)\", table=dataset)\n+    db.session.merge(dataset)\n+\n+    yield dataset\n+\n+    db.session.delete(dataset)\n+    db.session.commit()"
        }
    ],
    "tests/integration_tests/query_context_tests.py": [
        {
            "11bf7b9125eefd93796a46d964c3f027fbc9ce4d": "@@ -25,6 +25,7 @@\n from superset.charts.schemas import ChartDataQueryContextSchema\n from superset.common.chart_data import ChartDataResultFormat, ChartDataResultType\n from superset.common.query_context import QueryContext\n+from superset.common.query_context_factory import QueryContextFactory\n from superset.common.query_object import QueryObject\n from superset.connectors.sqla.models import SqlMetric\n from superset.datasource.dao import DatasourceDAO\n@@ -35,6 +36,7 @@\n     DatasourceType,\n     QueryStatus,\n )\n+from superset.utils.pandas_postprocessing.utils import FLAT_COLUMN_SEPARATOR\n from tests.integration_tests.base_tests import SupersetTestCase\n from tests.integration_tests.fixtures.birth_names_dashboard import (\n     load_birth_names_dashboard_with_slices,\n@@ -683,3 +685,46 @@ def test_time_offsets_accuracy(self):\n                     row[\"sum__num__3 years later\"]\n                     == df_3_years_later.loc[index][\"sum__num\"]\n                 )\n+\n+\n+def test_get_label_map(app_context, virtual_dataset_comma_in_column_value):\n+    qc = QueryContextFactory().create(\n+        datasource={\n+            \"type\": virtual_dataset_comma_in_column_value.type,\n+            \"id\": virtual_dataset_comma_in_column_value.id,\n+        },\n+        queries=[\n+            {\n+                \"columns\": [\"col1\", \"col2\"],\n+                \"metrics\": [\"count\"],\n+                \"post_processing\": [\n+                    {\n+                        \"operation\": \"pivot\",\n+                        \"options\": {\n+                            \"aggregates\": {\"count\": {\"operator\": \"mean\"}},\n+                            \"columns\": [\"col2\"],\n+                            \"index\": [\"col1\"],\n+                        },\n+                    },\n+                    {\"operation\": \"flatten\"},\n+                ],\n+            }\n+        ],\n+        result_type=ChartDataResultType.FULL,\n+        force=True,\n+    )\n+    query_object = qc.queries[0]\n+    df = qc.get_df_payload(query_object)[\"df\"]\n+    label_map = qc.get_df_payload(query_object)[\"label_map\"]\n+    assert list(df.columns.values) == [\n+        \"col1\",\n+        \"count\" + FLAT_COLUMN_SEPARATOR + \"col2, row1\",\n+        \"count\" + FLAT_COLUMN_SEPARATOR + \"col2, row2\",\n+        \"count\" + FLAT_COLUMN_SEPARATOR + \"col2, row3\",\n+    ]\n+    assert label_map == {\n+        \"col1\": [\"col1\"],\n+        \"count, col2, row1\": [\"count\", \"col2, row1\"],\n+        \"count, col2, row2\": [\"count\", \"col2, row2\"],\n+        \"count, col2, row3\": [\"count\", \"col2, row3\"],\n+    }"
        }
    ],
    "tests/unit_tests/pandas_postprocessing/test_flatten.py": [
        {
            "11bf7b9125eefd93796a46d964c3f027fbc9ce4d": "@@ -156,3 +156,22 @@ def test_flat_integer_column_name():\n             }\n         )\n     )\n+\n+\n+def test_escape_column_name():\n+    index = pd.to_datetime([\"2021-01-01\", \"2021-01-02\", \"2021-01-03\"])\n+    index.name = \"__timestamp\"\n+    columns = pd.MultiIndex.from_arrays(\n+        [\n+            [\"level1,value1\", \"level1,value2\", \"level1,value3\"],\n+            [\"level2, value1\", \"level2, value2\", \"level2, value3\"],\n+        ],\n+        names=[\"level1\", \"level2\"],\n+    )\n+    df = pd.DataFrame(index=index, columns=columns, data=1)\n+    assert list(pp.flatten(df).columns.values) == [\n+        \"__timestamp\",\n+        \"level1\\\\,value1\" + FLAT_COLUMN_SEPARATOR + \"level2\\\\, value1\",\n+        \"level1\\\\,value2\" + FLAT_COLUMN_SEPARATOR + \"level2\\\\, value2\",\n+        \"level1\\\\,value3\" + FLAT_COLUMN_SEPARATOR + \"level2\\\\, value3\",\n+    ]"
        }
    ],
    "tests/unit_tests/pandas_postprocessing/test_utils.py": [
        {
            "11bf7b9125eefd93796a46d964c3f027fbc9ce4d": "@@ -0,0 +1,30 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+from superset.utils.pandas_postprocessing import escape_separator, unescape_separator\n+\n+\n+def test_escape_separator():\n+    assert escape_separator(r\" hell \\world \") == r\" hell \\world \"\n+    assert unescape_separator(r\" hell \\world \") == r\" hell \\world \"\n+\n+    escape_string = escape_separator(\"hello, world\")\n+    assert escape_string == r\"hello\\, world\"\n+    assert unescape_separator(escape_string) == \"hello, world\"\n+\n+    escape_string = escape_separator(\"hello,world\")\n+    assert escape_string == r\"hello\\,world\"\n+    assert unescape_separator(escape_string) == \"hello,world\""
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/dashboard/edit_properties.test.ts": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -154,7 +154,7 @@ describe('Dashboard edit action', () => {\n           openAdvancedProperties().then(() => {\n             assertMetadata('d3Category20');\n           });\n-          cy.get('.ant-select-selection-item ul').should(\n+          cy.get('.ant-select-selection-item .color-scheme-option').should(\n             'have.attr',\n             'data-test',\n             'd3Category20',"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/area.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -111,7 +111,7 @@ describe('Visualization > Area', () => {\n       .focus()\n       .type('supersetColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"supersetColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"supersetColors\"]',\n     ).should('exist');\n     cy.get('.area .nv-legend .nv-legend-symbol')\n       .first()"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/box_plot.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -54,7 +54,7 @@ describe('Visualization > Box Plot', () => {\n       .focus()\n       .type('supersetColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"supersetColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"supersetColors\"]',\n     ).should('exist');\n   });\n });"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/bubble.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -114,7 +114,7 @@ describe('Visualization > Bubble', () => {\n       .focus()\n       .type('supersetColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"supersetColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"supersetColors\"]',\n     ).should('exist');\n     cy.get('[data-test=run-query-button]').click();\n     cy.get('.bubble .nv-legend .nv-legend-symbol').should("
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/compare.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -94,7 +94,7 @@ describe('Visualization > Compare', () => {\n       .focus()\n       .type('supersetColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"supersetColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"supersetColors\"]',\n     ).should('exist');\n     cy.get('.compare .nv-legend .nv-legend-symbol')\n       .first()"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/dist_bar.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -85,7 +85,7 @@ describe('Visualization > Distribution bar chart', () => {\n       .focus()\n       .type('bnbColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"bnbColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"bnbColors\"]',\n     ).should('exist');\n     cy.get('.dist_bar .nv-legend .nv-legend-symbol')\n       .first()"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/dual_line.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -74,7 +74,7 @@ describe('Visualization > Dual Line', () => {\n       .focus()\n       .type('supersetColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"supersetColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"supersetColors\"]',\n     ).should('exist');\n     cy.get('.dual_line .nv-legend .nv-legend-symbol')\n       .first()"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/gauge.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -68,7 +68,7 @@ describe('Visualization > Gauge', () => {\n       .focus()\n       .type('bnbColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"bnbColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"bnbColors\"]',\n     ).should('exist');\n   });\n });"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/graph.test.ts": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -85,7 +85,7 @@ describe('Visualization > Graph', () => {\n       .focus()\n       .type('bnbColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"bnbColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"bnbColors\"]',\n     ).should('exist');\n   });\n });"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/histogram.test.ts": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -92,7 +92,7 @@ describe('Visualization > Histogram', () => {\n       .focus()\n       .type('supersetColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"supersetColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"supersetColors\"]',\n     ).should('exist');\n     cy.get('.histogram .vx-legend .vx-legend-shape div')\n       .first()"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/line.test.ts": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -82,7 +82,7 @@ describe('Visualization > Line', () => {\n       .focus()\n       .type('bnbColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"bnbColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"bnbColors\"]',\n     ).should('exist');\n     cy.get('.line .nv-legend .nv-legend-symbol')\n       .first()"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/pie.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -76,7 +76,7 @@ describe('Visualization > Pie', () => {\n       .focus()\n       .type('supersetColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"supersetColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"supersetColors\"]',\n     ).should('exist');\n   });\n });"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/sankey.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -81,7 +81,7 @@ describe('Visualization > Sankey', () => {\n       .focus()\n       .type('bnbColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"bnbColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"bnbColors\"]',\n     ).should('exist');\n   });\n });"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/sunburst.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -88,7 +88,7 @@ describe('Visualization > Sunburst', () => {\n       .focus()\n       .type('supersetColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"supersetColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"supersetColors\"]',\n     ).should('exist');\n   });\n });"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/treemap.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -87,7 +87,7 @@ describe('Visualization > Treemap', () => {\n       .focus()\n       .type('supersetColors{enter}');\n     cy.get(\n-      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item ul[data-test=\"supersetColors\"]',\n+      '.Control[data-test=\"color_scheme\"] .ant-select-selection-item [data-test=\"supersetColors\"]',\n     ).should('exist');\n     cy.get('[data-test=run-query-button]').click();\n     cy.get('#rect-IND').should('have.css', 'fill', 'rgb(69, 78, 124)');"
        }
    ],
    "superset-frontend/cypress-base/cypress/integration/explore/visualizations/world_map.test.js": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -87,7 +87,7 @@ describe('Visualization > World Map', () => {\n       .focus()\n       .type('greens{enter}');\n     cy.get(\n-      '.Control[data-test=\"linear_color_scheme\"] .ant-select-selection-item ul[data-test=\"greens\"]',\n+      '.Control[data-test=\"linear_color_scheme\"] .ant-select-selection-item [data-test=\"greens\"]',\n     ).should('exist');\n   });\n });"
        }
    ],
    "superset-frontend/src/explore/components/controls/ColorSchemeControl/ColorSchemeLabel.test.tsx": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -0,0 +1,59 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+import React from 'react';\n+import { render, screen, waitFor } from 'spec/helpers/testing-library';\n+import ColorSchemeLabel from './ColorSchemeLabel';\n+\n+const defaultProps = {\n+  colors: [\n+    '#000000',\n+    '#FFFFFF',\n+    '#CCCCCC',\n+    '#000000',\n+    '#FFFFFF',\n+    '#CCCCCC',\n+    '#000000',\n+    '#FFFFFF',\n+    '#CCCCCC',\n+    '#000000',\n+    '#FFFFFF',\n+    '#CCCCCC',\n+  ],\n+  label: 'Superset Colors',\n+  id: 'colorScheme',\n+};\n+\n+const setup = (overrides?: Record<string, any>) =>\n+  render(<ColorSchemeLabel {...defaultProps} {...overrides} />);\n+\n+test('should render', async () => {\n+  const { container } = setup();\n+  await waitFor(() => expect(container).toBeVisible());\n+});\n+\n+test('should render the label', () => {\n+  setup();\n+  expect(screen.getByText('Superset Colors')).toBeInTheDocument();\n+});\n+\n+test('should render the colors', () => {\n+  setup();\n+  const allColors = screen.getAllByTestId('color');\n+  expect(allColors).toHaveLength(12);\n+});"
        }
    ],
    "superset-frontend/src/explore/components/controls/ColorSchemeControl/ColorSchemeLabel.tsx": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -0,0 +1,126 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import { css, SupersetTheme } from '@superset-ui/core';\n+import React, { useRef, useState } from 'react';\n+import { Tooltip } from 'src/components/Tooltip';\n+\n+type ColorSchemeLabelProps = {\n+  colors: string[];\n+  id: string;\n+  label: string;\n+};\n+\n+export default function ColorSchemeLabel(props: ColorSchemeLabelProps) {\n+  const { id, label, colors } = props;\n+  const [showTooltip, setShowTooltip] = useState<boolean>(false);\n+  const labelNameRef = useRef<HTMLElement>(null);\n+  const labelColorsRef = useRef<HTMLElement>(null);\n+  const handleShowTooltip = () => {\n+    const labelNameElement = labelNameRef.current;\n+    const labelColorsElement = labelColorsRef.current;\n+    if (\n+      labelNameElement &&\n+      labelColorsElement &&\n+      (labelNameElement.scrollWidth > labelNameElement.offsetWidth ||\n+        labelNameElement.scrollHeight > labelNameElement.offsetHeight ||\n+        labelColorsElement.scrollWidth > labelColorsElement.offsetWidth ||\n+        labelColorsElement.scrollHeight > labelColorsElement.offsetHeight)\n+    ) {\n+      setShowTooltip(true);\n+    }\n+  };\n+  const handleHideTooltip = () => {\n+    setShowTooltip(false);\n+  };\n+\n+  const colorsList = () =>\n+    colors.map((color: string, i: number) => (\n+      <span\n+        data-test=\"color\"\n+        key={`${id}-${i}`}\n+        css={(theme: { gridUnit: number }) => css`\n+          padding-left: ${theme.gridUnit / 2}px;\n+          :before {\n+            content: '';\n+            display: inline-block;\n+            background-color: ${color};\n+            border: 1px solid ${color === 'white' ? 'black' : color};\n+            width: 9px;\n+            height: 10px;\n+          }\n+        `}\n+      />\n+    ));\n+\n+  const tooltipContent = () => (\n+    <>\n+      <span>{label}</span>\n+      <div>{colorsList()}</div>\n+    </>\n+  );\n+\n+  return (\n+    <Tooltip\n+      data-testid=\"tooltip\"\n+      overlayClassName=\"color-scheme-tooltip\"\n+      title={tooltipContent}\n+      key={id}\n+      visible={showTooltip}\n+    >\n+      <span\n+        className=\"color-scheme-option\"\n+        onMouseEnter={handleShowTooltip}\n+        onMouseLeave={handleHideTooltip}\n+        css={css`\n+          display: flex;\n+          align-items: center;\n+          justify-content: flex-start;\n+        `}\n+        data-test={id}\n+      >\n+        <span\n+          className=\"color-scheme-label\"\n+          ref={labelNameRef}\n+          css={(theme: SupersetTheme) => css`\n+            min-width: 125px;\n+            padding-right: ${theme.gridUnit * 2}px;\n+            text-overflow: ellipsis;\n+            overflow: hidden;\n+            white-space: nowrap;\n+          `}\n+        >\n+          {label}\n+        </span>\n+        <span\n+          ref={labelColorsRef}\n+          css={(theme: SupersetTheme) => css`\n+            flex: 100%;\n+            text-overflow: ellipsis;\n+            overflow: hidden;\n+            white-space: nowrap;\n+            padding-right: ${theme.gridUnit}px;\n+          `}\n+        >\n+          {colorsList()}\n+        </span>\n+      </span>\n+    </Tooltip>\n+  );\n+}"
        }
    ],
    "superset-frontend/src/explore/components/controls/ColorSchemeControl/index.jsx": [
        {
            "756ed0e36acead74944112a8b678a7151319c26f": "@@ -24,6 +24,7 @@ import { Tooltip } from 'src/components/Tooltip';\n import { styled, t } from '@superset-ui/core';\n import Icons from 'src/components/Icons';\n import ControlHeader from 'src/explore/components/ControlHeader';\n+import ColorSchemeLabel from './ColorSchemeLabel';\n \n const propTypes = {\n   hasCustomLabelColors: PropTypes.bool,\n@@ -86,36 +87,11 @@ export default class ColorSchemeControl extends React.PureComponent {\n     }\n \n     return (\n-      <span key={currentScheme.id} title={currentScheme.label}>\n-        <ul\n-          css={{\n-            listStyle: 'none',\n-            margin: 0,\n-            padding: 0,\n-            display: 'flex',\n-            alignItems: 'center',\n-\n-            '& li': {\n-              flexBasis: 9,\n-              height: 10,\n-              margin: '9px 1px',\n-            },\n-          }}\n-          data-test={currentScheme.id}\n-        >\n-          {colors.map((color, i) => (\n-            <li\n-              key={`${currentScheme.id}-${i}`}\n-              css={{\n-                backgroundColor: color,\n-                border: `1px solid ${color === 'white' ? 'black' : color}`,\n-              }}\n-            >\n-              &nbsp;\n-            </li>\n-          ))}\n-        </ul>\n-      </span>\n+      <ColorSchemeLabel\n+        id={currentScheme.id}\n+        label={currentScheme.label}\n+        colors={colors}\n+      />\n     );\n   }\n "
        }
    ],
    "superset-frontend/packages/superset-ui-chart-controls/src/sections/advancedAnalytics.tsx": [
        {
            "fea68ef23cd19853f6ceee42802ac3b4b1b05da0": "@@ -178,7 +178,6 @@ export const advancedAnalyticsControls: ControlPanelSectionConfig = {\n         name: 'resample_method',\n         config: {\n           type: 'SelectControl',\n-          freeForm: true,\n           label: t('Fill method'),\n           default: null,\n           choices: ["
        }
    ],
    "docs/static/resources/openapi.json": [
        {
            "15b9f83150a5ac47ada5253b69e54df019bfb2a1": "@@ -13293,7 +13293,7 @@\n         ]\n       }\n     },\n-    \"/api/v1/database/test_connection\": {\n+    \"/api/v1/database/test_connection/\": {\n       \"post\": {\n         \"description\": \"Tests a database connection\",\n         \"requestBody\": {\n@@ -13343,7 +13343,7 @@\n         ]\n       }\n     },\n-    \"/api/v1/database/validate_parameters\": {\n+    \"/api/v1/database/validate_parameters/\": {\n       \"post\": {\n         \"description\": \"Validates parameters used to connect to a database\",\n         \"requestBody\": {"
        }
    ],
    "superset-frontend/src/views/CRUD/hooks.ts": [
        {
            "15b9f83150a5ac47ada5253b69e54df019bfb2a1": "@@ -641,7 +641,7 @@ export const testDatabaseConnection = (\n   addSuccessToast: (arg0: string) => void,\n ) => {\n   SupersetClient.post({\n-    endpoint: 'api/v1/database/test_connection',\n+    endpoint: 'api/v1/database/test_connection/',\n     body: JSON.stringify(connection),\n     headers: { 'Content-Type': 'application/json' },\n   }).then(\n@@ -675,7 +675,7 @@ export function useDatabaseValidation() {\n   const getValidation = useCallback(\n     (database: Partial<DatabaseObject> | null, onCreate = false) =>\n       SupersetClient.post({\n-        endpoint: '/api/v1/database/validate_parameters',\n+        endpoint: '/api/v1/database/validate_parameters/',\n         body: JSON.stringify(database),\n         headers: { 'Content-Type': 'application/json' },\n       })"
        }
    ],
    "superset/databases/api.py": [
        {
            "15b9f83150a5ac47ada5253b69e54df019bfb2a1": "@@ -662,7 +662,7 @@ def select_star(\n         self.incr_stats(\"success\", self.select_star.__name__)\n         return self.response(200, result=result)\n \n-    @expose(\"/test_connection\", methods=[\"POST\"])\n+    @expose(\"/test_connection/\", methods=[\"POST\"])\n     @protect()\n     @statsd_metrics\n     @event_logger.log_this_with_context(\n@@ -778,7 +778,7 @@ def related_objects(self, pk: int) -> Response:\n             },\n         )\n \n-    @expose(\"/<int:pk>/validate_sql\", methods=[\"POST\"])\n+    @expose(\"/<int:pk>/validate_sql/\", methods=[\"POST\"])\n     @protect()\n     @statsd_metrics\n     @event_logger.log_this_with_context(\n@@ -1121,7 +1121,7 @@ def available(self) -> Response:\n \n         return self.response(200, databases=response)\n \n-    @expose(\"/validate_parameters\", methods=[\"POST\"])\n+    @expose(\"/validate_parameters/\", methods=[\"POST\"])\n     @protect()\n     @statsd_metrics\n     @event_logger.log_this_with_context("
        }
    ],
    "superset/templates/superset/models/database/macros.html": [
        {
            "15b9f83150a5ac47ada5253b69e54df019bfb2a1": "@@ -22,7 +22,7 @@\n       .append('<button id=\"testconn\" class=\"btn btn-sm btn-primary\">{{ _(\"Test Connection\") }}</button>');\n     $(\"#testconn\").click(function(e) {\n       e.preventDefault();\n-      var url = \"/api/v1/database/test_connection\";\n+      var url = \"/api/v1/database/test_connection/\";\n       var csrf_token = \"{{ csrf_token() if csrf_token else '' }}\";\n \n       $.ajaxSetup({"
        }
    ],
    "tests/integration_tests/databases/api_tests.py": [
        {
            "15b9f83150a5ac47ada5253b69e54df019bfb2a1": "@@ -1359,7 +1359,7 @@ def test_test_connection(self):\n             \"sqlalchemy_uri\": example_db.safe_sqlalchemy_uri(),\n             \"server_cert\": None,\n         }\n-        url = \"api/v1/database/test_connection\"\n+        url = \"api/v1/database/test_connection/\"\n         rv = self.post_assert_metric(url, data, \"test_connection\")\n         self.assertEqual(rv.status_code, 200)\n         self.assertEqual(rv.headers[\"Content-Type\"], \"application/json; charset=utf-8\")\n@@ -1388,7 +1388,7 @@ def test_test_connection_failed(self):\n             \"impersonate_user\": False,\n             \"server_cert\": None,\n         }\n-        url = \"api/v1/database/test_connection\"\n+        url = \"api/v1/database/test_connection/\"\n         rv = self.post_assert_metric(url, data, \"test_connection\")\n         self.assertEqual(rv.status_code, 422)\n         self.assertEqual(rv.headers[\"Content-Type\"], \"application/json; charset=utf-8\")\n@@ -1454,7 +1454,7 @@ def test_test_connection_unsafe_uri(self):\n             \"impersonate_user\": False,\n             \"server_cert\": None,\n         }\n-        url = \"api/v1/database/test_connection\"\n+        url = \"api/v1/database/test_connection/\"\n         rv = self.post_assert_metric(url, data, \"test_connection\")\n         self.assertEqual(rv.status_code, 400)\n         response = json.loads(rv.data.decode(\"utf-8\"))\n@@ -1513,7 +1513,7 @@ def test_test_connection_failed_invalid_hostname(\n             \"impersonate_user\": False,\n             \"server_cert\": None,\n         }\n-        url = \"api/v1/database/test_connection\"\n+        url = \"api/v1/database/test_connection/\"\n         rv = self.post_assert_metric(url, data, \"test_connection\")\n \n         assert rv.status_code == 422\n@@ -2121,7 +2121,7 @@ def test_available_no_default(self, app, get_available_engine_specs):\n \n     def test_validate_parameters_invalid_payload_format(self):\n         self.login(username=\"admin\")\n-        url = \"api/v1/database/validate_parameters\"\n+        url = \"api/v1/database/validate_parameters/\"\n         rv = self.client.post(url, data=\"INVALID\", content_type=\"text/plain\")\n         response = json.loads(rv.data.decode(\"utf-8\"))\n \n@@ -2146,7 +2146,7 @@ def test_validate_parameters_invalid_payload_format(self):\n \n     def test_validate_parameters_invalid_payload_schema(self):\n         self.login(username=\"admin\")\n-        url = \"api/v1/database/validate_parameters\"\n+        url = \"api/v1/database/validate_parameters/\"\n         payload = {\"foo\": \"bar\"}\n         rv = self.client.post(url, json=payload)\n         response = json.loads(rv.data.decode(\"utf-8\"))\n@@ -2190,7 +2190,7 @@ def test_validate_parameters_invalid_payload_schema(self):\n \n     def test_validate_parameters_missing_fields(self):\n         self.login(username=\"admin\")\n-        url = \"api/v1/database/validate_parameters\"\n+        url = \"api/v1/database/validate_parameters/\"\n         payload = {\n             \"configuration_method\": ConfigurationMethod.SQLALCHEMY_FORM,\n             \"engine\": \"postgresql\",\n@@ -2241,7 +2241,7 @@ def test_validate_parameters_valid_payload(\n         is_port_open.return_value = True\n \n         self.login(username=\"admin\")\n-        url = \"api/v1/database/validate_parameters\"\n+        url = \"api/v1/database/validate_parameters/\"\n         payload = {\n             \"engine\": \"postgresql\",\n             \"parameters\": defaultdict(dict),\n@@ -2265,7 +2265,7 @@ def test_validate_parameters_valid_payload(\n \n     def test_validate_parameters_invalid_port(self):\n         self.login(username=\"admin\")\n-        url = \"api/v1/database/validate_parameters\"\n+        url = \"api/v1/database/validate_parameters/\"\n         payload = {\n             \"engine\": \"postgresql\",\n             \"parameters\": defaultdict(dict),\n@@ -2324,7 +2324,7 @@ def test_validate_parameters_invalid_host(self, is_hostname_valid):\n         is_hostname_valid.return_value = False\n \n         self.login(username=\"admin\")\n-        url = \"api/v1/database/validate_parameters\"\n+        url = \"api/v1/database/validate_parameters/\"\n         payload = {\n             \"engine\": \"postgresql\",\n             \"parameters\": defaultdict(dict),\n@@ -2384,7 +2384,7 @@ def test_validate_parameters_invalid_port_range(self, is_hostname_valid):\n         is_hostname_valid.return_value = True\n \n         self.login(username=\"admin\")\n-        url = \"api/v1/database/validate_parameters\"\n+        url = \"api/v1/database/validate_parameters/\"\n         payload = {\n             \"engine\": \"postgresql\",\n             \"parameters\": defaultdict(dict),\n@@ -2467,7 +2467,7 @@ def test_validate_sql(self):\n             pytest.skip(\"Only presto and PG are implemented\")\n \n         self.login(username=\"admin\")\n-        uri = f\"api/v1/database/{example_db.id}/validate_sql\"\n+        uri = f\"api/v1/database/{example_db.id}/validate_sql/\"\n         rv = self.client.post(uri, json=request_payload)\n         response = json.loads(rv.data.decode(\"utf-8\"))\n         self.assertEqual(rv.status_code, 200)\n@@ -2493,7 +2493,7 @@ def test_validate_sql_errors(self):\n             pytest.skip(\"Only presto and PG are implemented\")\n \n         self.login(username=\"admin\")\n-        uri = f\"api/v1/database/{example_db.id}/validate_sql\"\n+        uri = f\"api/v1/database/{example_db.id}/validate_sql/\"\n         rv = self.client.post(uri, json=request_payload)\n         response = json.loads(rv.data.decode(\"utf-8\"))\n         self.assertEqual(rv.status_code, 200)\n@@ -2525,7 +2525,7 @@ def test_validate_sql_not_found(self):\n         }\n         self.login(username=\"admin\")\n         uri = (\n-            f\"api/v1/database/{self.get_nonexistent_numeric_id(Database)}/validate_sql\"\n+            f\"api/v1/database/{self.get_nonexistent_numeric_id(Database)}/validate_sql/\"\n         )\n         rv = self.client.post(uri, json=request_payload)\n         self.assertEqual(rv.status_code, 404)\n@@ -2546,7 +2546,7 @@ def test_validate_sql_validation_fails(self):\n         }\n         self.login(username=\"admin\")\n         uri = (\n-            f\"api/v1/database/{self.get_nonexistent_numeric_id(Database)}/validate_sql\"\n+            f\"api/v1/database/{self.get_nonexistent_numeric_id(Database)}/validate_sql/\"\n         )\n         rv = self.client.post(uri, json=request_payload)\n         response = json.loads(rv.data.decode(\"utf-8\"))\n@@ -2571,7 +2571,7 @@ def test_validate_sql_endpoint_noconfig(self):\n \n         example_db = get_example_database()\n \n-        uri = f\"api/v1/database/{example_db.id}/validate_sql\"\n+        uri = f\"api/v1/database/{example_db.id}/validate_sql/\"\n         rv = self.client.post(uri, json=request_payload)\n         response = json.loads(rv.data.decode(\"utf-8\"))\n         self.assertEqual(rv.status_code, 422)\n@@ -2624,7 +2624,7 @@ def test_validate_sql_endpoint_failure(self, get_validator_by_name):\n \n         example_db = get_example_database()\n \n-        uri = f\"api/v1/database/{example_db.id}/validate_sql\"\n+        uri = f\"api/v1/database/{example_db.id}/validate_sql/\"\n         rv = self.client.post(uri, json=request_payload)\n         response = json.loads(rv.data.decode(\"utf-8\"))\n "
        }
    ],
    "superset-frontend/plugins/plugin-chart-handlebars/src/plugin/buildQuery.ts": [
        {
            "e70699fb433849e07af81ea1812f20aa271d028e": "@@ -16,15 +16,19 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-import { buildQueryContext, QueryFormData } from '@superset-ui/core';\n+import {\n+  buildQueryContext,\n+  normalizeOrderBy,\n+  QueryFormData,\n+} from '@superset-ui/core';\n \n export default function buildQuery(formData: QueryFormData) {\n-  const { metric, sort_by_metric, groupby } = formData;\n+  const { groupby } = formData;\n \n   return buildQueryContext(formData, baseQueryObject => [\n     {\n       ...baseQueryObject,\n-      ...(sort_by_metric && { orderby: [[metric, false]] }),\n+      orderby: normalizeOrderBy(baseQueryObject).orderby,\n       ...(groupby && { groupby }),\n     },\n   ]);"
        }
    ],
    "superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controlPanel.tsx": [
        {
            "e70699fb433849e07af81ea1812f20aa271d028e": "@@ -59,9 +59,10 @@ const config: ControlPanelConfig = {\n         [metricsControlSetItem, allColumnsControlSetItem],\n         [percentMetricsControlSetItem],\n         [timeSeriesLimitMetricControlSetItem, orderByControlSetItem],\n+        [orderDescendingControlSetItem],\n         serverPaginationControlSetRow,\n         [rowLimitControlSetItem, serverPageLengthControlSetItem],\n-        [includeTimeControlSetItem, orderDescendingControlSetItem],\n+        [includeTimeControlSetItem],\n         [showTotalsControlSetItem],\n         ['adhoc_filters'],\n         emitFilterControl,"
        }
    ],
    "superset-frontend/plugins/plugin-chart-handlebars/src/plugin/controls/orderBy.tsx": [
        {
            "e70699fb433849e07af81ea1812f20aa271d028e": "@@ -18,6 +18,7 @@\n  */\n import { ControlSetItem, Dataset } from '@superset-ui/chart-controls';\n import { t } from '@superset-ui/core';\n+import { isEmpty } from 'lodash';\n import { isAggMode, isRawMode } from './shared';\n \n export const orderByControlSetItem: ControlSetItem = {\n@@ -45,7 +46,12 @@ export const orderDescendingControlSetItem: ControlSetItem = {\n     label: t('Sort descending'),\n     default: true,\n     description: t('Whether to sort descending or ascending'),\n-    visibility: isAggMode,\n+    visibility: ({ controls }) =>\n+      !!(\n+        isAggMode({ controls }) &&\n+        controls?.timeseries_limit_metric.value &&\n+        !isEmpty(controls?.timeseries_limit_metric.value)\n+      ),\n     resetOnHide: false,\n   },\n };"
        }
    ],
    "superset-frontend/src/components/FilterableTable/index.tsx": [
        {
            "7c0963f6ae9daaca83254324fe0b4f3f508a4257": "@@ -17,7 +17,7 @@\n  * under the License.\n  */\n import JSONbig from 'json-bigint';\n-import React, { PureComponent } from 'react';\n+import React, { useEffect, useRef, useState } from 'react';\n import JSONTree from 'react-json-tree';\n import {\n   AutoSizer,\n@@ -33,8 +33,7 @@ import {\n   getMultipleTextDimensions,\n   t,\n   styled,\n-  SupersetTheme,\n-  withTheme,\n+  useTheme,\n } from '@superset-ui/core';\n import Button from '../Button';\n import CopyToClipboard from '../CopyToClipboard';\n@@ -188,98 +187,65 @@ export interface FilterableTableProps {\n   orderedColumnKeys: string[];\n   data: Record<string, unknown>[];\n   height: number;\n-  filterText: string;\n-  headerHeight: number;\n-  overscanColumnCount: number;\n-  overscanRowCount: number;\n-  rowHeight: number;\n-  striped: boolean;\n-  expandedColumns: string[];\n-  theme: SupersetTheme;\n+  filterText?: string;\n+  headerHeight?: number;\n+  overscanColumnCount?: number;\n+  overscanRowCount?: number;\n+  rowHeight?: number;\n+  striped?: boolean;\n+  expandedColumns?: string[];\n }\n \n-interface FilterableTableState {\n-  sortBy?: string;\n-  sortDirection?: SortDirectionType;\n-  fitted: boolean;\n-  displayedList: Datum[];\n-}\n-\n-class FilterableTable extends PureComponent<\n-  FilterableTableProps,\n-  FilterableTableState\n-> {\n-  static defaultProps = {\n-    filterText: '',\n-    headerHeight: 32,\n-    overscanColumnCount: 10,\n-    overscanRowCount: 10,\n-    rowHeight: 32,\n-    striped: true,\n-    expandedColumns: [],\n-  };\n-\n-  list: Datum[];\n-\n-  complexColumns: Record<string, boolean>;\n-\n-  widthsForColumnsByKey: Record<string, number>;\n-\n-  totalTableWidth: number;\n-\n-  totalTableHeight: number;\n-\n-  container: React.RefObject<HTMLDivElement>;\n-\n-  jsonTreeTheme: Record<string, string>;\n-\n-  constructor(props: FilterableTableProps) {\n-    super(props);\n-    this.list = this.formatTableData(props.data);\n-    this.addJsonModal = this.addJsonModal.bind(this);\n-    this.getCellContent = this.getCellContent.bind(this);\n-    this.renderGridCell = this.renderGridCell.bind(this);\n-    this.renderGridCellHeader = this.renderGridCellHeader.bind(this);\n-    this.renderGrid = this.renderGrid.bind(this);\n-    this.renderTableCell = this.renderTableCell.bind(this);\n-    this.renderTableHeader = this.renderTableHeader.bind(this);\n-    this.sortResults = this.sortResults.bind(this);\n-    this.renderTable = this.renderTable.bind(this);\n-    this.rowClassName = this.rowClassName.bind(this);\n-    this.sort = this.sort.bind(this);\n-    this.getJsonTreeTheme = this.getJsonTreeTheme.bind(this);\n+const FilterableTable = ({\n+  orderedColumnKeys,\n+  data,\n+  height,\n+  filterText = '',\n+  headerHeight = 32,\n+  overscanColumnCount = 10,\n+  overscanRowCount = 10,\n+  rowHeight = 32,\n+  striped = true,\n+  expandedColumns = [],\n+}: FilterableTableProps) => {\n+  const formatTableData = (data: Record<string, unknown>[]): Datum[] =>\n+    data.map(row => {\n+      const newRow = {};\n+      Object.entries(row).forEach(([key, val]) => {\n+        if (['string', 'number'].indexOf(typeof val) >= 0) {\n+          newRow[key] = val;\n+        } else {\n+          newRow[key] = val === null ? null : JSONbig.stringify(val);\n+        }\n+      });\n+      return newRow;\n+    });\n \n-    // columns that have complex type and were expanded into sub columns\n-    this.complexColumns = props.orderedColumnKeys.reduce(\n+  const [sortByState, setSortByState] = useState<string | undefined>(undefined);\n+  const [sortDirectionState, setSortDirectionState] = useState<\n+    SortDirectionType | undefined\n+  >(undefined);\n+  const [fitted, setFitted] = useState(false);\n+  const [list] = useState<Datum[]>(() => formatTableData(data));\n+  const [displayedList, setDisplayedList] = useState<Datum[]>(list);\n+\n+  // columns that have complex type and were expanded into sub columns\n+  const [complexColumns] = useState<Record<string, boolean>>(\n+    orderedColumnKeys.reduce(\n       (obj, key) => ({\n         ...obj,\n-        [key]: props.expandedColumns.some(name => name.startsWith(`${key}.`)),\n+        [key]: expandedColumns.some(name => name.startsWith(`${key}.`)),\n       }),\n       {},\n-    );\n+    ),\n+  );\n \n-    this.widthsForColumnsByKey = this.getWidthsForColumns();\n-    this.totalTableWidth = props.orderedColumnKeys\n-      .map(key => this.widthsForColumnsByKey[key])\n-      .reduce((curr, next) => curr + next);\n-    this.totalTableHeight = props.height;\n+  const theme = useTheme();\n+  const [jsonTreeTheme, setJsonTreeTheme] = useState<Record<string, string>>();\n \n-    this.state = {\n-      fitted: false,\n-      displayedList: [...this.list],\n-    };\n-\n-    this.container = React.createRef();\n-  }\n-\n-  componentDidMount() {\n-    this.fitTableToWidthIfNeeded();\n-  }\n-\n-  getJsonTreeTheme() {\n-    if (!this.jsonTreeTheme) {\n-      const { theme } = this.props;\n-      this.jsonTreeTheme = {\n+  const getJsonTreeTheme = () => {\n+    if (!jsonTreeTheme) {\n+      setJsonTreeTheme({\n         base00: theme.colors.grayscale.dark2,\n         base01: theme.colors.grayscale.dark1,\n         base02: theme.colors.grayscale.base,\n@@ -296,22 +262,20 @@ class FilterableTable extends PureComponent<\n         base0D: theme.colors.primary.base,\n         base0E: theme.colors.primary.dark1,\n         base0F: theme.colors.error.dark1,\n-      };\n+      });\n     }\n-    return this.jsonTreeTheme;\n-  }\n+    return jsonTreeTheme;\n+  };\n \n-  getDatum(list: Datum[], index: number) {\n-    return list[index % list.length];\n-  }\n+  const getDatum = (list: Datum[], index: number) => list[index % list.length];\n \n-  getWidthsForColumns() {\n+  const getWidthsForColumns = () => {\n     const PADDING = 50; // accounts for cell padding and width of sorting icon\n     const widthsByColumnKey = {};\n     const cellContent = ([] as string[]).concat(\n-      ...this.props.orderedColumnKeys.map(key => {\n-        const cellContentList = this.list.map((data: Datum) =>\n-          this.getCellContent({ cellData: data[key], columnKey: key }),\n+      ...orderedColumnKeys.map(key => {\n+        const cellContentList = list.map((data: Datum) =>\n+          getCellContent({ cellData: data[key], columnKey: key }),\n         );\n         cellContentList.push(key);\n         return cellContentList;\n@@ -323,30 +287,26 @@ class FilterableTable extends PureComponent<\n       texts: cellContent,\n     }).map(dimension => dimension.width);\n \n-    this.props.orderedColumnKeys.forEach((key, index) => {\n+    orderedColumnKeys.forEach((key, index) => {\n       // we can't use Math.max(...colWidths.slice(...)) here since the number\n       // of elements might be bigger than the number of allowed arguments in a\n-      // Javascript function\n-      const value = (widthsByColumnKey[key] =\n+      // JavaScript function\n+      widthsByColumnKey[key] =\n         colWidths\n-          .slice(\n-            index * (this.list.length + 1),\n-            (index + 1) * (this.list.length + 1),\n-          )\n-          .reduce((a, b) => Math.max(a, b)) + PADDING);\n-      widthsByColumnKey[key] = value;\n+          .slice(index * (list.length + 1), (index + 1) * (list.length + 1))\n+          .reduce((a, b) => Math.max(a, b)) + PADDING;\n     });\n \n     return widthsByColumnKey;\n-  }\n+  };\n \n-  getCellContent({\n+  const getCellContent = ({\n     cellData,\n     columnKey,\n   }: {\n     cellData: CellDataType;\n     columnKey: string;\n-  }) {\n+  }) => {\n     if (cellData === null) {\n       return 'NULL';\n     }\n@@ -360,24 +320,35 @@ class FilterableTable extends PureComponent<\n     } else {\n       truncated = '';\n     }\n-    return this.complexColumns[columnKey] ? truncated : content;\n-  }\n+    return complexColumns[columnKey] ? truncated : content;\n+  };\n \n-  formatTableData(data: Record<string, unknown>[]): Datum[] {\n-    return data.map(row => {\n-      const newRow = {};\n-      Object.entries(row).forEach(([key, val]) => {\n-        if (['string', 'number'].indexOf(typeof val) >= 0) {\n-          newRow[key] = val;\n-        } else {\n-          newRow[key] = val === null ? null : JSONbig.stringify(val);\n-        }\n-      });\n-      return newRow;\n-    });\n-  }\n+  const [widthsForColumnsByKey] = useState<Record<string, number>>(() =>\n+    getWidthsForColumns(),\n+  );\n+\n+  const totalTableWidth = useRef(\n+    orderedColumnKeys\n+      .map(key => widthsForColumnsByKey[key])\n+      .reduce((curr, next) => curr + next),\n+  );\n+  const totalTableHeight = useRef(height);\n+  const container = useRef<HTMLDivElement>(null);\n+\n+  const fitTableToWidthIfNeeded = () => {\n+    const containerWidth = container.current?.clientWidth ?? 0;\n+    if (totalTableWidth.current < containerWidth) {\n+      // fit table width if content doesn't fill the width of the container\n+      totalTableWidth.current = containerWidth;\n+    }\n+    setFitted(true);\n+  };\n \n-  hasMatch(text: string, row: Datum) {\n+  useEffect(() => {\n+    fitTableToWidthIfNeeded();\n+  }, []);\n+\n+  const hasMatch = (text: string, row: Datum) => {\n     const values: string[] = [];\n     Object.keys(row).forEach(key => {\n       if (row.hasOwnProperty(key)) {\n@@ -394,82 +365,60 @@ class FilterableTable extends PureComponent<\n     });\n     const lowerCaseText = text.toLowerCase();\n     return values.some(v => v.includes(lowerCaseText));\n-  }\n+  };\n \n-  rowClassName({ index }: { index: number }) {\n+  const rowClassName = ({ index }: { index: number }) => {\n     let className = '';\n-    if (this.props.striped) {\n+    if (striped) {\n       className = index % 2 === 0 ? 'even-row' : 'odd-row';\n     }\n     return className;\n-  }\n+  };\n \n-  sort({\n+  const sort = ({\n     sortBy,\n     sortDirection,\n   }: {\n     sortBy: string;\n     sortDirection: SortDirectionType;\n-  }) {\n-    let updatedState: FilterableTableState;\n-\n+  }) => {\n     const shouldClearSort =\n-      this.state.sortDirection === SortDirection.DESC &&\n-      this.state.sortBy === sortBy;\n+      sortDirectionState === SortDirection.DESC && sortByState === sortBy;\n \n     if (shouldClearSort) {\n-      updatedState = {\n-        ...this.state,\n-        sortBy: undefined,\n-        sortDirection: undefined,\n-        displayedList: [...this.list],\n-      };\n+      setSortByState(undefined);\n+      setSortDirectionState(undefined);\n+      setDisplayedList([...list]);\n     } else {\n-      updatedState = {\n-        ...this.state,\n-        sortBy,\n-        sortDirection,\n-        displayedList: [...this.list].sort(\n-          this.sortResults(sortBy, sortDirection === SortDirection.DESC),\n+      setSortByState(sortBy);\n+      setSortDirectionState(sortDirection);\n+      setDisplayedList(\n+        [...list].sort(\n+          sortResults(sortBy, sortDirection === SortDirection.DESC),\n         ),\n-      };\n-    }\n-\n-    this.setState(updatedState);\n-  }\n-\n-  fitTableToWidthIfNeeded() {\n-    const containerWidth = this.container.current?.clientWidth ?? 0;\n-    if (this.totalTableWidth < containerWidth) {\n-      // fit table width if content doesn't fill the width of the container\n-      this.totalTableWidth = containerWidth;\n+      );\n     }\n-    this.setState({ fitted: true });\n-  }\n+  };\n \n-  addJsonModal(\n+  const addJsonModal = (\n     node: React.ReactNode,\n     jsonObject: Record<string, unknown> | unknown[],\n     jsonString: CellDataType,\n-  ) {\n-    return (\n-      <ModalTrigger\n-        modalBody={\n-          <JSONTree data={jsonObject} theme={this.getJsonTreeTheme()} />\n-        }\n-        modalFooter={\n-          <Button>\n-            <CopyToClipboard shouldShowText={false} text={jsonString} />\n-          </Button>\n-        }\n-        modalTitle={t('Cell content')}\n-        triggerNode={node}\n-      />\n-    );\n-  }\n+  ) => (\n+    <ModalTrigger\n+      modalBody={<JSONTree data={jsonObject} theme={getJsonTreeTheme()} />}\n+      modalFooter={\n+        <Button>\n+          <CopyToClipboard shouldShowText={false} text={jsonString} />\n+        </Button>\n+      }\n+      modalTitle={t('Cell content')}\n+      triggerNode={node}\n+    />\n+  );\n \n   // Parse any numbers from strings so they'll sort correctly\n-  parseNumberFromString = (value: string | number | null) => {\n+  const parseNumberFromString = (value: string | number | null) => {\n     if (typeof value === 'string') {\n       if (ONLY_NUMBER_REGEX.test(value)) {\n         return parseFloat(value);\n@@ -479,10 +428,10 @@ class FilterableTable extends PureComponent<\n     return value;\n   };\n \n-  sortResults(sortBy: string, descending: boolean) {\n-    return (a: Datum, b: Datum) => {\n-      const aValue = this.parseNumberFromString(a[sortBy]);\n-      const bValue = this.parseNumberFromString(b[sortBy]);\n+  const sortResults =\n+    (sortBy: string, descending: boolean) => (a: Datum, b: Datum) => {\n+      const aValue = parseNumberFromString(a[sortBy]);\n+      const bValue = parseNumberFromString(b[sortBy]);\n \n       // equal items sort equally\n       if (aValue === bValue) {\n@@ -502,20 +451,18 @@ class FilterableTable extends PureComponent<\n       }\n       return aValue < bValue ? -1 : 1;\n     };\n-  }\n \n-  sortGrid = (label: string) => {\n-    this.sort({\n+  const sortGrid = (label: string) => {\n+    sort({\n       sortBy: label,\n       sortDirection:\n-        this.state.sortDirection === SortDirection.DESC ||\n-        this.state.sortBy !== label\n+        sortDirectionState === SortDirection.DESC || sortByState !== label\n           ? SortDirection.ASC\n           : SortDirection.DESC,\n     });\n   };\n \n-  renderTableHeader({\n+  const renderTableHeader = ({\n     dataKey,\n     label,\n     sortBy,\n@@ -525,9 +472,9 @@ class FilterableTable extends PureComponent<\n     label: string;\n     sortBy: string;\n     sortDirection: SortDirectionType;\n-  }) {\n+  }) => {\n     const className =\n-      this.props.expandedColumns.indexOf(label) > -1\n+      expandedColumns.indexOf(label) > -1\n         ? 'header-style-disabled'\n         : 'header-style';\n \n@@ -537,20 +484,20 @@ class FilterableTable extends PureComponent<\n         {sortBy === dataKey && <SortIndicator sortDirection={sortDirection} />}\n       </div>\n     );\n-  }\n+  };\n \n-  renderGridCellHeader({\n+  const renderGridCellHeader = ({\n     columnIndex,\n     key,\n     style,\n   }: {\n     columnIndex: number;\n     key: string;\n     style: React.CSSProperties;\n-  }) {\n-    const label = this.props.orderedColumnKeys[columnIndex];\n+  }) => {\n+    const label = orderedColumnKeys[columnIndex];\n     const className =\n-      this.props.expandedColumns.indexOf(label) > -1\n+      expandedColumns.indexOf(label) > -1\n         ? 'header-style-disabled'\n         : 'header-style';\n     return (\n@@ -566,17 +513,17 @@ class FilterableTable extends PureComponent<\n         className={`${className} grid-cell grid-header-cell`}\n         role=\"columnheader\"\n         tabIndex={columnIndex}\n-        onClick={() => this.sortGrid(label)}\n+        onClick={() => sortGrid(label)}\n       >\n         {label}\n-        {this.state.sortBy === label && (\n-          <SortIndicator sortDirection={this.state.sortDirection} />\n+        {sortByState === label && (\n+          <SortIndicator sortDirection={sortDirectionState} />\n         )}\n       </div>\n     );\n-  }\n+  };\n \n-  renderGridCell({\n+  const renderGridCell = ({\n     columnIndex,\n     key,\n     rowIndex,\n@@ -586,10 +533,10 @@ class FilterableTable extends PureComponent<\n     key: string;\n     rowIndex: number;\n     style: React.CSSProperties;\n-  }) {\n-    const columnKey = this.props.orderedColumnKeys[columnIndex];\n-    const cellData = this.state.displayedList[rowIndex][columnKey];\n-    const cellText = this.getCellContent({ cellData, columnKey });\n+  }) => {\n+    const columnKey = orderedColumnKeys[columnIndex];\n+    const cellData = displayedList[rowIndex][columnKey];\n+    const cellText = getCellContent({ cellData, columnKey });\n     const content =\n       cellData === null ? <i className=\"text-muted\">{cellText}</i> : cellText;\n     const cellNode = (\n@@ -602,41 +549,31 @@ class FilterableTable extends PureComponent<\n               ? style.top - GRID_POSITION_ADJUSTMENT\n               : style.top,\n         }}\n-        className={`grid-cell ${this.rowClassName({ index: rowIndex })}`}\n+        className={`grid-cell ${rowClassName({ index: rowIndex })}`}\n       >\n         <div css={{ width: 'inherit' }}>{content}</div>\n       </div>\n     );\n \n     const jsonObject = safeJsonObjectParse(cellData);\n     if (jsonObject) {\n-      return this.addJsonModal(cellNode, jsonObject, cellData);\n+      return addJsonModal(cellNode, jsonObject, cellData);\n     }\n     return cellNode;\n-  }\n-\n-  renderGrid() {\n-    const {\n-      orderedColumnKeys,\n-      overscanColumnCount,\n-      overscanRowCount,\n-      rowHeight,\n-    } = this.props;\n+  };\n \n-    let { height } = this.props;\n-    let totalTableHeight = height;\n+  const renderGrid = () => {\n     if (\n-      this.container.current &&\n-      this.totalTableWidth > this.container.current.clientWidth\n+      container.current &&\n+      totalTableWidth.current > container.current.clientWidth\n     ) {\n       // exclude the height of the horizontal scroll bar from the height of the table\n       // and the height of the table container if the content overflows\n-      height -= SCROLL_BAR_HEIGHT;\n-      totalTableHeight -= SCROLL_BAR_HEIGHT;\n+      totalTableHeight.current -= SCROLL_BAR_HEIGHT;\n     }\n \n     const getColumnWidth = ({ index }: { index: number }) =>\n-      this.widthsForColumnsByKey[orderedColumnKeys[index]];\n+      widthsForColumnsByKey[orderedColumnKeys[index]];\n \n     // fix height of filterable table\n     return (\n@@ -648,7 +585,7 @@ class FilterableTable extends PureComponent<\n                 {({ width }) => (\n                   <div>\n                     <Grid\n-                      cellRenderer={this.renderGridCellHeader}\n+                      cellRenderer={renderGridCellHeader}\n                       columnCount={orderedColumnKeys.length}\n                       columnWidth={getColumnWidth}\n                       height={rowHeight}\n@@ -659,14 +596,14 @@ class FilterableTable extends PureComponent<\n                       style={{ overflow: 'hidden' }}\n                     />\n                     <Grid\n-                      cellRenderer={this.renderGridCell}\n+                      cellRenderer={renderGridCell}\n                       columnCount={orderedColumnKeys.length}\n                       columnWidth={getColumnWidth}\n-                      height={totalTableHeight - rowHeight}\n+                      height={totalTableHeight.current - rowHeight}\n                       onScroll={onScroll}\n                       overscanColumnCount={overscanColumnCount}\n                       overscanRowCount={overscanRowCount}\n-                      rowCount={this.list.length}\n+                      rowCount={list.length}\n                       rowHeight={rowHeight}\n                       width={width}\n                     />\n@@ -678,86 +615,73 @@ class FilterableTable extends PureComponent<\n         </ScrollSync>\n       </StyledFilterableTable>\n     );\n-  }\n+  };\n \n-  renderTableCell({\n+  const renderTableCell = ({\n     cellData,\n     columnKey,\n   }: {\n     cellData: CellDataType;\n     columnKey: string;\n-  }) {\n-    const cellNode = this.getCellContent({ cellData, columnKey });\n+  }) => {\n+    const cellNode = getCellContent({ cellData, columnKey });\n     const content =\n       cellData === null ? <i className=\"text-muted\">{cellNode}</i> : cellNode;\n     const jsonObject = safeJsonObjectParse(cellData);\n     if (jsonObject) {\n-      return this.addJsonModal(cellNode, jsonObject, cellData);\n+      return addJsonModal(cellNode, jsonObject, cellData);\n     }\n     return content;\n-  }\n+  };\n \n-  renderTable() {\n-    const { sortBy, sortDirection } = this.state;\n-    const {\n-      filterText,\n-      headerHeight,\n-      orderedColumnKeys,\n-      overscanRowCount,\n-      rowHeight,\n-    } = this.props;\n-\n-    let sortedAndFilteredList = this.state.displayedList;\n+  const renderTable = () => {\n+    let sortedAndFilteredList = displayedList;\n     // filter list\n     if (filterText) {\n       sortedAndFilteredList = sortedAndFilteredList.filter((row: Datum) =>\n-        this.hasMatch(filterText, row),\n+        hasMatch(filterText, row),\n       );\n     }\n \n-    let { height } = this.props;\n-    let totalTableHeight = height;\n     if (\n-      this.container.current &&\n-      this.totalTableWidth > this.container.current.clientWidth\n+      container.current &&\n+      totalTableWidth.current > container.current.clientWidth\n     ) {\n       // exclude the height of the horizontal scroll bar from the height of the table\n       // and the height of the table container if the content overflows\n-      height -= SCROLL_BAR_HEIGHT;\n-      totalTableHeight -= SCROLL_BAR_HEIGHT;\n+      totalTableHeight.current -= SCROLL_BAR_HEIGHT;\n     }\n \n     const rowGetter = ({ index }: { index: number }) =>\n-      this.getDatum(sortedAndFilteredList, index);\n+      getDatum(sortedAndFilteredList, index);\n     return (\n       <StyledFilterableTable\n         className=\"filterable-table-container\"\n-        ref={this.container}\n+        ref={container}\n       >\n-        {this.state.fitted && (\n+        {fitted && (\n           <Table\n-            ref=\"Table\"\n             headerHeight={headerHeight}\n-            height={totalTableHeight}\n+            height={totalTableHeight.current}\n             overscanRowCount={overscanRowCount}\n-            rowClassName={this.rowClassName}\n+            rowClassName={rowClassName}\n             rowHeight={rowHeight}\n             rowGetter={rowGetter}\n             rowCount={sortedAndFilteredList.length}\n-            sort={this.sort}\n-            sortBy={sortBy}\n-            sortDirection={sortDirection}\n-            width={this.totalTableWidth}\n+            sort={sort}\n+            sortBy={sortByState}\n+            sortDirection={sortDirectionState}\n+            width={totalTableWidth.current}\n           >\n             {orderedColumnKeys.map(columnKey => (\n               <Column\n                 cellRenderer={({ cellData }) =>\n-                  this.renderTableCell({ cellData, columnKey })\n+                  renderTableCell({ cellData, columnKey })\n                 }\n                 dataKey={columnKey}\n                 disableSort={false}\n-                headerRenderer={this.renderTableHeader}\n-                width={this.widthsForColumnsByKey[columnKey]}\n+                headerRenderer={renderTableHeader}\n+                width={widthsForColumnsByKey[columnKey]}\n                 label={columnKey}\n                 key={columnKey}\n               />\n@@ -766,14 +690,12 @@ class FilterableTable extends PureComponent<\n         )}\n       </StyledFilterableTable>\n     );\n-  }\n+  };\n \n-  render() {\n-    if (this.props.orderedColumnKeys.length > MAX_COLUMNS_FOR_TABLE) {\n-      return this.renderGrid();\n-    }\n-    return this.renderTable();\n+  if (orderedColumnKeys.length > MAX_COLUMNS_FOR_TABLE) {\n+    return renderGrid();\n   }\n-}\n+  return renderTable();\n+};\n \n-export default withTheme(FilterableTable);\n+export default FilterableTable;"
        }
    ],
    "superset/connectors/sqla/views.py": [
        {
            "a27f246effbc422d80fb2d6f7c5a7919749fd9e1": "@@ -100,6 +100,7 @@ class TableColumnInlineView(  # pylint: disable=too-many-ancestors\n         \"groupby\",\n         \"filterable\",\n         \"is_dttm\",\n+        \"extra\",\n     ]\n     page_size = 500\n     description_columns = {"
        }
    ]
}