[
    {
        "sha": "49e919c08713061d7d387a83b36a11b295bc7a2d",
        "node_id": "C_kwDOCyTLhNoAKDQ5ZTkxOWMwODcxMzA2MWQ3ZDM4N2E4M2IzNmExMWIyOTViYzdhMmQ",
        "commit": {
            "author": {
                "name": "Alpha-github",
                "email": "reachankit2013@gmail.com",
                "date": "2022-03-02T09:43:34Z"
            },
            "committer": {
                "name": "Alpha-github",
                "email": "reachankit2013@gmail.com",
                "date": "2022-03-02T09:43:34Z"
            },
            "message": "Update app.py to gRPC",
            "tree": {
                "sha": "22f507fe694f737a35812b8814d6f9422932217b",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/22f507fe694f737a35812b8814d6f9422932217b",
                "expanded": [
                    {
                        "path": "Procfile",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "size": 51,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "decrypt_content": "web: gunicorn -b 0.0.0.0:$PORT app:app --log-file -"
                    },
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "7f4745fe665e0774e19997b3cd7e30b7242b3c99",
                        "size": 2909,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/7f4745fe665e0774e19997b3cd7e30b7242b3c99",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy way to pick up proramming language and fun to play with\n* [JavaScript] - JavaScript (JS) is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Before running the app.py, make sure that you enter your api key given by Clarifai.\n #\n ##### 2. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 3. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 4. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [JavaScript]: <https://www.javascript.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  \n"
                    },
                    {
                        "path": "__pycache__",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "2c3ba0351e433bbb58fc96222c49ec5569f2090a",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/2c3ba0351e433bbb58fc96222c49ec5569f2090a",
                        "files": [
                            {
                                "path": "clarifai.cpython-37.pyc",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "b2e0051e20e116e552d0df27b4c5388f972b6f08",
                                "size": 1584,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/b2e0051e20e116e552d0df27b4c5388f972b6f08"
                            }
                        ]
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "edf960ad07f80c624195b8dd15e4f118032604cc",
                        "size": 3473,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/edf960ad07f80c624195b8dd15e4f118032604cc",
                        "decrypt_content": "from clarifai_grpc.grpc.api.status import status_code_pb2\nfrom clarifai_grpc.grpc.api import service_pb2, resources_pb2\nfrom flask import Flask, request, render_template, jsonify, Response, url_for\nimport os\n\nfrom clarifai_grpc.channel.clarifai_channel import ClarifaiChannel\nfrom clarifai_grpc.grpc.api import service_pb2_grpc\n\nstub = service_pb2_grpc.V2Stub(ClarifaiChannel.get_grpc_channel())\n\napikey = os.environ[\"CLARIFAI_API_KEY\"]\n# This is how you authenticate.\nmetadata = (('authorization', 'Key '+apikey),) \n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n# compress = FlaskStaticCompress(app)\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n\n@app.route(\"/resultpage\", methods=[\"POST\", \"GET\"])\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        # print(img_file)\n        img_name = img_file.filename\n        # print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n        img_path = os.path.join(UPLOAD_FOLDER, img_name)\n\n        with open(img_path, \"rb\") as f:\n            file_bytes = f.read()\n\n        post_model_outputs_response = stub.PostModelOutputs(\n            service_pb2.PostModelOutputsRequest(\n                model_id=\"Flowers\",\n                inputs=[\n                    resources_pb2.Input(\n                        data=resources_pb2.Data(\n                            image=resources_pb2.Image(\n                                base64=file_bytes\n                            )\n                        )\n                    )\n                ]\n            ),\n            metadata=metadata\n        )\n\n        if post_model_outputs_response.status.code != status_code_pb2.SUCCESS:\n            print(\"There was an error with your request!\")\n            print(\"\\tCode: {}\".format(post_model_outputs_response.outputs[0].status.code))\n            print(\"\\tDescription: {}\".format(post_model_outputs_response.outputs[0].status.description))\n            print(\"\\tDetails: {}\".format(post_model_outputs_response.outputs[0].status.details))\n            raise Exception(\"Post model outputs failed, status: \" + post_model_outputs_response.status.description)\n\n        # Since we have one input, one output will exist here.\n        output = post_model_outputs_response.outputs[0]\n        pred_class=[]\n        pred_concepts=[]\n\n        # print(\"Predicted concepts:\")\n        for concept in output.data.concepts:\n            # print(\"%s %.2f\" % (concept.name, concept.value))\n            if 1>=concept.value>=0.05:\n                pred_class.append(concept.value)\n                pred_concepts.append(concept.name)\n        if(len(pred_class)==0):\n            prediction = \"Undetermined\"\n            max_=None\n        else:\n            max_ = max(pred_class)\n            prediction = pred_concepts[pred_class.index(max_)]\n\n        try:\n            os.remove(img_path)\n        except:\n            print(\"File Deletion Error\")\n\n        if max_!=None:\n            return jsonify({\"recognised\": True,\n                        \"payload\": {\n                            \"name\": prediction,\n                            \"value\": max_}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    app.run(host=\"0.0.0.0\", port=3000, debug=True)\n"
                    },
                    {
                        "path": "requirements.txt",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "80929a8e602f7abaf12a7049e7115b03f2340d56",
                        "size": 45,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/80929a8e602f7abaf12a7049e7115b03f2340d56",
                        "decrypt_content": "clarifai>=2.6.1\nFlask>=1.0.2\ngunicorn>=19.9.0"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "58b8e0f89c91aad9403bfa9d24a23f60a537ba81",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/58b8e0f89c91aad9403bfa9d24a23f60a537ba81",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "353e5e9b6c84c39af5fc6e3c162e0e04046a8e10",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/353e5e9b6c84c39af5fc6e3c162e0e04046a8e10",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "3c233fc76faa99635514aebe69eed152331dff09",
                                        "size": 1197,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/3c233fc76faa99635514aebe69eed152331dff09"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/49e919c08713061d7d387a83b36a11b295bc7a2d",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/49e919c08713061d7d387a83b36a11b295bc7a2d",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/49e919c08713061d7d387a83b36a11b295bc7a2d",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/49e919c08713061d7d387a83b36a11b295bc7a2d/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "994e06b3df828dc480d66552b32362d3641f9e08",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/994e06b3df828dc480d66552b32362d3641f9e08",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/994e06b3df828dc480d66552b32362d3641f9e08"
            }
        ]
    },
    {
        "sha": "994e06b3df828dc480d66552b32362d3641f9e08",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOjk5NGUwNmIzZGY4MjhkYzQ4MGQ2NjU1MmIzMjM2MmQzNjQxZjllMDg=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-11-29T16:41:12Z"
            },
            "committer": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-11-29T16:41:12Z"
            },
            "message": "Update 4",
            "tree": {
                "sha": "055340f3821335f5dff187bc560d4b5d890be124",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/055340f3821335f5dff187bc560d4b5d890be124",
                "expanded": [
                    {
                        "path": "Procfile",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "size": 51,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "decrypt_content": "web: gunicorn -b 0.0.0.0:$PORT app:app --log-file -"
                    },
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "7f4745fe665e0774e19997b3cd7e30b7242b3c99",
                        "size": 2909,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/7f4745fe665e0774e19997b3cd7e30b7242b3c99",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy way to pick up proramming language and fun to play with\n* [JavaScript] - JavaScript (JS) is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Before running the app.py, make sure that you enter your api key given by Clarifai.\n #\n ##### 2. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 3. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 4. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [JavaScript]: <https://www.javascript.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  \n"
                    },
                    {
                        "path": "__pycache__",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "2c3ba0351e433bbb58fc96222c49ec5569f2090a",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/2c3ba0351e433bbb58fc96222c49ec5569f2090a",
                        "files": [
                            {
                                "path": "clarifai.cpython-37.pyc",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "b2e0051e20e116e552d0df27b4c5388f972b6f08",
                                "size": 1584,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/b2e0051e20e116e552d0df27b4c5388f972b6f08"
                            }
                        ]
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "5656dc8149e3ec2cafc6864aef5e3f574cfea270",
                        "size": 1894,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/5656dc8149e3ec2cafc6864aef5e3f574cfea270",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n\n\n# compress = FlaskStaticCompress(app)\n\n#print(os.environ[\"CLARIFAI_API_KEY\"])\nprog = ClarifaiApp(api_key= os.environ[\"CLARIFAI_API_KEY\"]) # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('General') # For using custom model - replace \"General\" with \"Flowers\"\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        print(resp)\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    port = int(os.environ.get('PORT', 3000))\n    app.run(host='0.0.0.0', port=port, debug=True)\n\n  # NOTE: While using host = 0.0.0.0 ; specify 0.0.0.0 as localhost in the url(i.e http://localhost:3000/)"
                    },
                    {
                        "path": "requirements.txt",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "size": 45,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "decrypt_content": "clarifai==2.6.1\nFlask==1.0.2\ngunicorn==19.9.0"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "9ef89142a341dddd3b77ac1a03526539ac11c7fb",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/9ef89142a341dddd3b77ac1a03526539ac11c7fb",
                        "files": [
                            {
                                "path": "andi-whiskey-1405352-unsplash.jpg",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "563662b6d76ee2f8156b258a38c9e4772ea8f8d2",
                                "size": 2135843,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/563662b6d76ee2f8156b258a38c9e4772ea8f8d2"
                            },
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/994e06b3df828dc480d66552b32362d3641f9e08",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/994e06b3df828dc480d66552b32362d3641f9e08",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/994e06b3df828dc480d66552b32362d3641f9e08",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/994e06b3df828dc480d66552b32362d3641f9e08/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "aaf95f462e790137cdd5013d036e8b8eab71a6a6",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/aaf95f462e790137cdd5013d036e8b8eab71a6a6",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/aaf95f462e790137cdd5013d036e8b8eab71a6a6"
            }
        ]
    },
    {
        "sha": "aaf95f462e790137cdd5013d036e8b8eab71a6a6",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOmFhZjk1ZjQ2MmU3OTAxMzdjZGQ1MDEzZDAzNmU4YjhlYWI3MWE2YTY=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-11-29T16:39:57Z"
            },
            "committer": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-11-29T16:39:57Z"
            },
            "message": "Merge branch 'master' of https://github.com/Alpha-github/image_classification",
            "tree": {
                "sha": "7051b92698394fa6aa7ae0e758ed4a86a2e8bab4",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/7051b92698394fa6aa7ae0e758ed4a86a2e8bab4",
                "expanded": [
                    {
                        "path": "Procfile",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "size": 51,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "decrypt_content": "web: gunicorn -b 0.0.0.0:$PORT app:app --log-file -"
                    },
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "7f4745fe665e0774e19997b3cd7e30b7242b3c99",
                        "size": 2909,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/7f4745fe665e0774e19997b3cd7e30b7242b3c99",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy way to pick up proramming language and fun to play with\n* [JavaScript] - JavaScript (JS) is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Before running the app.py, make sure that you enter your api key given by Clarifai.\n #\n ##### 2. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 3. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 4. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [JavaScript]: <https://www.javascript.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  \n"
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "5656dc8149e3ec2cafc6864aef5e3f574cfea270",
                        "size": 1894,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/5656dc8149e3ec2cafc6864aef5e3f574cfea270",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n\n\n# compress = FlaskStaticCompress(app)\n\n#print(os.environ[\"CLARIFAI_API_KEY\"])\nprog = ClarifaiApp(api_key= os.environ[\"CLARIFAI_API_KEY\"]) # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('General') # For using custom model - replace \"General\" with \"Flowers\"\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        print(resp)\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    port = int(os.environ.get('PORT', 3000))\n    app.run(host='0.0.0.0', port=port, debug=True)\n\n  # NOTE: While using host = 0.0.0.0 ; specify 0.0.0.0 as localhost in the url(i.e http://localhost:3000/)"
                    },
                    {
                        "path": "requirements.txt",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "size": 45,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "decrypt_content": "clarifai==2.6.1\nFlask==1.0.2\ngunicorn==19.9.0"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/aaf95f462e790137cdd5013d036e8b8eab71a6a6",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/aaf95f462e790137cdd5013d036e8b8eab71a6a6",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/aaf95f462e790137cdd5013d036e8b8eab71a6a6",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/aaf95f462e790137cdd5013d036e8b8eab71a6a6/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "59c9b56e095d7574966d9c9bba8bb136f8b87335",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/59c9b56e095d7574966d9c9bba8bb136f8b87335",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/59c9b56e095d7574966d9c9bba8bb136f8b87335"
            },
            {
                "sha": "f5404b855623d5a990593e5fb33ab5c93dd9d21a",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/f5404b855623d5a990593e5fb33ab5c93dd9d21a",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/f5404b855623d5a990593e5fb33ab5c93dd9d21a"
            }
        ]
    },
    {
        "sha": "59c9b56e095d7574966d9c9bba8bb136f8b87335",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOjU5YzliNTZlMDk1ZDc1NzQ5NjZkOWM5YmJhOGJiMTM2ZjhiODczMzU=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-11-29T16:33:52Z"
            },
            "committer": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-11-29T16:33:52Z"
            },
            "message": "Update 4",
            "tree": {
                "sha": "d545a21be3fa0ac4dbf12ba225316fe434148603",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/d545a21be3fa0ac4dbf12ba225316fe434148603",
                "expanded": [
                    {
                        "path": "Procfile",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "size": 51,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "decrypt_content": "web: gunicorn -b 0.0.0.0:$PORT app:app --log-file -"
                    },
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "935e079ea968cb7d299a040eb51dda5295221822",
                        "size": 2904,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/935e079ea968cb7d299a040eb51dda5295221822",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy to pick up proramming language and fun to play with\n* [JavaScript] - JavaScript (JS) is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Before running the app.py, make sure that you enter your api key given by Clarifai.\n #\n ##### 2. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 3. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 4. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [JavaScript]: <https://www.javascript.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  "
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "5656dc8149e3ec2cafc6864aef5e3f574cfea270",
                        "size": 1894,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/5656dc8149e3ec2cafc6864aef5e3f574cfea270",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n\n\n# compress = FlaskStaticCompress(app)\n\n#print(os.environ[\"CLARIFAI_API_KEY\"])\nprog = ClarifaiApp(api_key= os.environ[\"CLARIFAI_API_KEY\"]) # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('General') # For using custom model - replace \"General\" with \"Flowers\"\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        print(resp)\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    port = int(os.environ.get('PORT', 3000))\n    app.run(host='0.0.0.0', port=port, debug=True)\n\n  # NOTE: While using host = 0.0.0.0 ; specify 0.0.0.0 as localhost in the url(i.e http://localhost:3000/)"
                    },
                    {
                        "path": "requirements.txt",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "size": 45,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "decrypt_content": "clarifai==2.6.1\nFlask==1.0.2\ngunicorn==19.9.0"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/59c9b56e095d7574966d9c9bba8bb136f8b87335",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/59c9b56e095d7574966d9c9bba8bb136f8b87335",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/59c9b56e095d7574966d9c9bba8bb136f8b87335",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/59c9b56e095d7574966d9c9bba8bb136f8b87335/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d149a360398b31a7a53d66f398887b6de10e9777",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/d149a360398b31a7a53d66f398887b6de10e9777",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/d149a360398b31a7a53d66f398887b6de10e9777"
            }
        ]
    },
    {
        "sha": "f5404b855623d5a990593e5fb33ab5c93dd9d21a",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOmY1NDA0Yjg1NTYyM2Q1YTk5MDU5M2U1ZmIzM2FiNWM5M2RkOWQyMWE=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "37172066+Alpha-github@users.noreply.github.com",
                "date": "2019-11-18T05:24:13Z"
            },
            "committer": {
                "name": "GitHub",
                "email": "noreply@github.com",
                "date": "2019-11-18T05:24:13Z"
            },
            "message": "Update README.md",
            "tree": {
                "sha": "a15f50d8ae97a47b440f8a57b84f857f9a6bc606",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/a15f50d8ae97a47b440f8a57b84f857f9a6bc606",
                "expanded": [
                    {
                        "path": "Procfile",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "size": 51,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "decrypt_content": "web: gunicorn -b 0.0.0.0:$PORT app:app --log-file -"
                    },
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "7f4745fe665e0774e19997b3cd7e30b7242b3c99",
                        "size": 2909,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/7f4745fe665e0774e19997b3cd7e30b7242b3c99",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy way to pick up proramming language and fun to play with\n* [JavaScript] - JavaScript (JS) is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Before running the app.py, make sure that you enter your api key given by Clarifai.\n #\n ##### 2. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 3. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 4. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [JavaScript]: <https://www.javascript.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  \n"
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "de38c4f6fdf9d3cba3dbea0c234f39d307d53f93",
                        "size": 1814,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/de38c4f6fdf9d3cba3dbea0c234f39d307d53f93",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n\n\n# compress = FlaskStaticCompress(app)\n\n#print(os.environ[\"CLARIFAI_API_KEY\"])\nprog = ClarifaiApp(api_key= os.environ[\"CLARIFAI_API_KEY\"]) # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('Flowers')\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    port = int(os.environ.get('PORT', 3000))\n    app.run(host='0.0.0.0', port=port, debug=True)\n\n  # NOTE: While using host = 0.0.0.0 ; specify 0.0.0.0 as localhost in the url(i.e http://localhost:3000/)"
                    },
                    {
                        "path": "requirements.txt",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "size": 45,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "decrypt_content": "clarifai==2.6.1\nFlask==1.0.2\ngunicorn==19.9.0"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/f5404b855623d5a990593e5fb33ab5c93dd9d21a",
            "comment_count": 0,
            "verification": {
                "verified": true,
                "reason": "valid",
                "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd0ir+CRBK7hj4Ov3rIwAAdHIIABlquDQSIZcjKHCjrvdotzwb\nUZeuaHwNnW+7KaOe18iJX0RJwZLb1GXgzyoo+No+4op6aXAfiGJoaJ8poRCr62EY\nCoVSdlWVPnBdNiFMWgN8tLWSD3mCuzxtgLlJL2qYycsG+sTcJpd6Cb0iXdFAY/PF\nM+oRQl7Tbm8ONA13N2DUhC+8usks/hsuBRVXcW+jt8vA3361+zFCVSD8r/kFGu+s\nWaMMOYpRPiRALPLe73kaBg4ypYJZC8VVGxropdgygQ8oRnOR7UXqrAUlSWGMWL/C\np+c4Cdj3PgAglZ4RnZZmc+6L233WHgIZdiOppZfr4YwHn4DKV9cTPdDJuGypltQ=\n=Xnfn\n-----END PGP SIGNATURE-----\n",
                "payload": "tree a15f50d8ae97a47b440f8a57b84f857f9a6bc606\nparent d149a360398b31a7a53d66f398887b6de10e9777\nauthor Ankith M <37172066+Alpha-github@users.noreply.github.com> 1574054653 +0530\ncommitter GitHub <noreply@github.com> 1574054653 +0530\n\nUpdate README.md"
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/f5404b855623d5a990593e5fb33ab5c93dd9d21a",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/f5404b855623d5a990593e5fb33ab5c93dd9d21a",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/f5404b855623d5a990593e5fb33ab5c93dd9d21a/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "web-flow",
            "id": 19864447,
            "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/web-flow",
            "html_url": "https://github.com/web-flow",
            "followers_url": "https://api.github.com/users/web-flow/followers",
            "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
            "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
            "organizations_url": "https://api.github.com/users/web-flow/orgs",
            "repos_url": "https://api.github.com/users/web-flow/repos",
            "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
            "received_events_url": "https://api.github.com/users/web-flow/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "d149a360398b31a7a53d66f398887b6de10e9777",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/d149a360398b31a7a53d66f398887b6de10e9777",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/d149a360398b31a7a53d66f398887b6de10e9777"
            }
        ]
    },
    {
        "sha": "d149a360398b31a7a53d66f398887b6de10e9777",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOmQxNDlhMzYwMzk4YjMxYTdhNTNkNjZmMzk4ODg3YjZkZTEwZTk3Nzc=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-10-27T12:38:30Z"
            },
            "committer": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-10-27T12:38:30Z"
            },
            "message": "Update 3",
            "tree": {
                "sha": "bd09200f42251baff9b9860075b6f89b5ece569d",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/bd09200f42251baff9b9860075b6f89b5ece569d",
                "expanded": [
                    {
                        "path": "Procfile",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "size": 51,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "decrypt_content": "web: gunicorn -b 0.0.0.0:$PORT app:app --log-file -"
                    },
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "935e079ea968cb7d299a040eb51dda5295221822",
                        "size": 2904,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/935e079ea968cb7d299a040eb51dda5295221822",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy to pick up proramming language and fun to play with\n* [JavaScript] - JavaScript (JS) is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Before running the app.py, make sure that you enter your api key given by Clarifai.\n #\n ##### 2. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 3. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 4. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [JavaScript]: <https://www.javascript.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  "
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "de38c4f6fdf9d3cba3dbea0c234f39d307d53f93",
                        "size": 1814,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/de38c4f6fdf9d3cba3dbea0c234f39d307d53f93",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n\n\n# compress = FlaskStaticCompress(app)\n\n#print(os.environ[\"CLARIFAI_API_KEY\"])\nprog = ClarifaiApp(api_key= os.environ[\"CLARIFAI_API_KEY\"]) # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('Flowers')\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    port = int(os.environ.get('PORT', 3000))\n    app.run(host='0.0.0.0', port=port, debug=True)\n\n  # NOTE: While using host = 0.0.0.0 ; specify 0.0.0.0 as localhost in the url(i.e http://localhost:3000/)"
                    },
                    {
                        "path": "requirements.txt",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "size": 45,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "decrypt_content": "clarifai==2.6.1\nFlask==1.0.2\ngunicorn==19.9.0"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/d149a360398b31a7a53d66f398887b6de10e9777",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/d149a360398b31a7a53d66f398887b6de10e9777",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/d149a360398b31a7a53d66f398887b6de10e9777",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/d149a360398b31a7a53d66f398887b6de10e9777/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "a11c872ae4cc3c91d6f655f83d9f3dbe953f9aae",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/a11c872ae4cc3c91d6f655f83d9f3dbe953f9aae",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/a11c872ae4cc3c91d6f655f83d9f3dbe953f9aae"
            }
        ]
    },
    {
        "sha": "a11c872ae4cc3c91d6f655f83d9f3dbe953f9aae",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOmExMWM4NzJhZTRjYzNjOTFkNmY2NTVmODNkOWYzZGJlOTUzZjlhYWU=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-10-27T11:44:09Z"
            },
            "committer": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-10-27T11:44:09Z"
            },
            "message": "update 2",
            "tree": {
                "sha": "5149372f3618fe5c20aec0460fa48336967ffbda",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5149372f3618fe5c20aec0460fa48336967ffbda",
                "expanded": [
                    {
                        "path": "Procfile",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "size": 51,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "decrypt_content": "web: gunicorn -b 0.0.0.0:$PORT app:app --log-file -"
                    },
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "935e079ea968cb7d299a040eb51dda5295221822",
                        "size": 2904,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/935e079ea968cb7d299a040eb51dda5295221822",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy to pick up proramming language and fun to play with\n* [JavaScript] - JavaScript (JS) is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Before running the app.py, make sure that you enter your api key given by Clarifai.\n #\n ##### 2. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 3. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 4. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [JavaScript]: <https://www.javascript.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  "
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "8e814e95032a64152f1d20c7db33946272ba5acb",
                        "size": 1841,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/8e814e95032a64152f1d20c7db33946272ba5acb",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n# compress = FlaskStaticCompress(app)\n\nos.environ[\"CLARIFAI_API_KEY\"] = '2b76fed9c7114f33ad3f0dd815460b9f'\nprog = ClarifaiApp(api_key= os.environ[\"CLARIFAI_API_KEY\"]) # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('Flowers')\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    port = int(os.environ.get('PORT', 3000))\n    app.run(host='0.0.0.0', port=port, debug=True)\n\n  # NOTE: While using host = 0.0.0.0 ; specify 0.0.0.0 as localhost in the url(i.e http://localhost:3000/)"
                    },
                    {
                        "path": "requirements.txt",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "size": 45,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "decrypt_content": "clarifai==2.6.1\nFlask==1.0.2\ngunicorn==19.9.0"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/a11c872ae4cc3c91d6f655f83d9f3dbe953f9aae",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/a11c872ae4cc3c91d6f655f83d9f3dbe953f9aae",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/a11c872ae4cc3c91d6f655f83d9f3dbe953f9aae",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/a11c872ae4cc3c91d6f655f83d9f3dbe953f9aae/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "3a70f1d9eb0a7e22abdb29f12d1a42f0ea087ce5",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/3a70f1d9eb0a7e22abdb29f12d1a42f0ea087ce5",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/3a70f1d9eb0a7e22abdb29f12d1a42f0ea087ce5"
            }
        ]
    },
    {
        "sha": "3a70f1d9eb0a7e22abdb29f12d1a42f0ea087ce5",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOjNhNzBmMWQ5ZWIwYTdlMjJhYmRiMjlmMTJkMWE0MmYwZWEwODdjZTU=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-05-18T17:58:55Z"
            },
            "committer": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-05-18T17:58:55Z"
            },
            "message": "Update 2",
            "tree": {
                "sha": "ad197994096d1264767d508eda33f7fd812e3bb5",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/ad197994096d1264767d508eda33f7fd812e3bb5",
                "expanded": [
                    {
                        "path": "Procfile",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "size": 51,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "decrypt_content": "web: gunicorn -b 0.0.0.0:$PORT app:app --log-file -"
                    },
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "935e079ea968cb7d299a040eb51dda5295221822",
                        "size": 2904,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/935e079ea968cb7d299a040eb51dda5295221822",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy to pick up proramming language and fun to play with\n* [JavaScript] - JavaScript (JS) is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Before running the app.py, make sure that you enter your api key given by Clarifai.\n #\n ##### 2. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 3. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 4. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [JavaScript]: <https://www.javascript.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  "
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "1ef923558fabdb18edca07b32886cd1974308b6a",
                        "size": 1657,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/1ef923558fabdb18edca07b32886cd1974308b6a",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n# compress = FlaskStaticCompress(app)\n\n\nprog = ClarifaiApp(api_key='ADD YOUR API KEY') # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('Flowers')\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    port = int(os.environ.get('PORT', 3000))\n    app.run(host='0.0.0.0', port=port, debug=True)\n\n  "
                    },
                    {
                        "path": "requirements.txt",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "size": 45,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "decrypt_content": "clarifai==2.6.1\nFlask==1.0.2\ngunicorn==19.9.0"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/3a70f1d9eb0a7e22abdb29f12d1a42f0ea087ce5",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/3a70f1d9eb0a7e22abdb29f12d1a42f0ea087ce5",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/3a70f1d9eb0a7e22abdb29f12d1a42f0ea087ce5",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/3a70f1d9eb0a7e22abdb29f12d1a42f0ea087ce5/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "c7e8b4c4092abc42c7d126709dc8d5d354985aac",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/c7e8b4c4092abc42c7d126709dc8d5d354985aac",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/c7e8b4c4092abc42c7d126709dc8d5d354985aac"
            }
        ]
    },
    {
        "sha": "c7e8b4c4092abc42c7d126709dc8d5d354985aac",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOmM3ZThiNGM0MDkyYWJjNDJjN2QxMjY3MDlkYzhkNWQzNTQ5ODVhYWM=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-05-17T09:55:35Z"
            },
            "committer": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-05-17T09:55:35Z"
            },
            "message": "Test",
            "tree": {
                "sha": "48472ca7db56048fae649aa84bbdbfa214657203",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/48472ca7db56048fae649aa84bbdbfa214657203",
                "expanded": [
                    {
                        "path": "Procfile",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "size": 51,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/9aca892631d5f0c20324344c6a4ad3b318b27a42",
                        "decrypt_content": "web: gunicorn -b 0.0.0.0:$PORT app:app --log-file -"
                    },
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "18d0e278daa054da2ed4a2ed95ed44c49d8c5f5b",
                        "size": 2711,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/18d0e278daa054da2ed4a2ed95ed44c49d8c5f5b",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy to pick up proramming language and fun to play with\n* [Java] - A popular programming language, owned by Oracle and running on more than 3 billion devices.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 2. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 3. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [Java]: <https://www.java.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  "
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "43dfaeccb47091e4a74fdcbcd19db506c96e18d2",
                        "size": 1669,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/43dfaeccb47091e4a74fdcbcd19db506c96e18d2",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n# compress = FlaskStaticCompress(app)\n\n\nprog = ClarifaiApp(api_key='c02ed0679e544b64b2ec5091786634b6') # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('Flowers')\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    port = int(os.environ.get('PORT', 3000))\n    app.run(host='0.0.0.0', port=port, debug=True)"
                    },
                    {
                        "path": "requirements.txt",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "size": 45,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "decrypt_content": "clarifai==2.6.1\nFlask==1.0.2\ngunicorn==19.9.0"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/c7e8b4c4092abc42c7d126709dc8d5d354985aac",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/c7e8b4c4092abc42c7d126709dc8d5d354985aac",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/c7e8b4c4092abc42c7d126709dc8d5d354985aac",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/c7e8b4c4092abc42c7d126709dc8d5d354985aac/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "e90dc2423e48d33a1e2e02aaea1694add2a9717c",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/e90dc2423e48d33a1e2e02aaea1694add2a9717c",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/e90dc2423e48d33a1e2e02aaea1694add2a9717c"
            }
        ]
    },
    {
        "sha": "e90dc2423e48d33a1e2e02aaea1694add2a9717c",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOmU5MGRjMjQyM2U0OGQzM2ExZTJlMDJhYWVhMTY5NGFkZDJhOTcxN2M=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-05-17T09:49:12Z"
            },
            "committer": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-05-17T09:49:12Z"
            },
            "message": "Installed pip gunicorn, added Procfile, Requirements.txt",
            "tree": {
                "sha": "e692e4bf3b336dafd14899849d401b8256e33bae",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e692e4bf3b336dafd14899849d401b8256e33bae",
                "expanded": [
                    {
                        "path": "Procfile",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "93f040b0700a46ada77d8f192603fec307e5c57e",
                        "size": 34,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/93f040b0700a46ada77d8f192603fec307e5c57e",
                        "decrypt_content": "web: gunicorn app:app --log-file -"
                    },
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "18d0e278daa054da2ed4a2ed95ed44c49d8c5f5b",
                        "size": 2711,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/18d0e278daa054da2ed4a2ed95ed44c49d8c5f5b",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy to pick up proramming language and fun to play with\n* [Java] - A popular programming language, owned by Oracle and running on more than 3 billion devices.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 2. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 3. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [Java]: <https://www.java.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  "
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "d43cc2875dac2826f2671e2316504843872711ea",
                        "size": 1615,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d43cc2875dac2826f2671e2316504843872711ea",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n# compress = FlaskStaticCompress(app)\n\n\nprog = ClarifaiApp(api_key='<ADD YOUR API KEY>') # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('Flowers')\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    app.run(host=\"0.0.0.0\" , port = 3000, debug = True)"
                    },
                    {
                        "path": "requirements.txt",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "size": 45,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/2b04b36a065087ea8a78fbd27574a6a90826de13",
                        "decrypt_content": "clarifai==2.6.1\nFlask==1.0.2\ngunicorn==19.9.0"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/e90dc2423e48d33a1e2e02aaea1694add2a9717c",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/e90dc2423e48d33a1e2e02aaea1694add2a9717c",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/e90dc2423e48d33a1e2e02aaea1694add2a9717c",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/e90dc2423e48d33a1e2e02aaea1694add2a9717c/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "f96899fb1249ca1d3e94e7d36dd57dc9db104f46",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/f96899fb1249ca1d3e94e7d36dd57dc9db104f46",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/f96899fb1249ca1d3e94e7d36dd57dc9db104f46"
            }
        ]
    },
    {
        "sha": "f96899fb1249ca1d3e94e7d36dd57dc9db104f46",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOmY5Njg5OWZiMTI0OWNhMWQzZTk0ZTdkMzZkZDU3ZGM5ZGIxMDRmNDY=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-05-16T14:05:10Z"
            },
            "committer": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-05-16T14:05:10Z"
            },
            "message": "Update 1",
            "tree": {
                "sha": "26b83c37fdf0e90e4de50f3f03861a34361fe338",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/26b83c37fdf0e90e4de50f3f03861a34361fe338",
                "expanded": [
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "18d0e278daa054da2ed4a2ed95ed44c49d8c5f5b",
                        "size": 2711,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/18d0e278daa054da2ed4a2ed95ed44c49d8c5f5b",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy to pick up proramming language and fun to play with\n* [Java] - A popular programming language, owned by Oracle and running on more than 3 billion devices.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 2. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 3. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [Java]: <https://www.java.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  "
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "d43cc2875dac2826f2671e2316504843872711ea",
                        "size": 1615,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d43cc2875dac2826f2671e2316504843872711ea",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n# compress = FlaskStaticCompress(app)\n\n\nprog = ClarifaiApp(api_key='<ADD YOUR API KEY>') # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('Flowers')\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    app.run(host=\"0.0.0.0\" , port = 3000, debug = True)"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/8fdb8be4ef0c4ae768d480af581fbf7f5fef2b56",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/5718eebab62a827edaa2ae916e1cda2276a7bb70",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "f31314606ec1693a0b656ad961b060b366de395c",
                                        "size": 632,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/f31314606ec1693a0b656ad961b060b366de395c"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/f96899fb1249ca1d3e94e7d36dd57dc9db104f46",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/f96899fb1249ca1d3e94e7d36dd57dc9db104f46",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/f96899fb1249ca1d3e94e7d36dd57dc9db104f46",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/f96899fb1249ca1d3e94e7d36dd57dc9db104f46/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": [
            {
                "sha": "0f5112801b3e1df1aaf378dc5ae680c20bc114ca",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/0f5112801b3e1df1aaf378dc5ae680c20bc114ca",
                "html_url": "https://github.com/Alpha-github/image_classification/commit/0f5112801b3e1df1aaf378dc5ae680c20bc114ca"
            }
        ]
    },
    {
        "sha": "0f5112801b3e1df1aaf378dc5ae680c20bc114ca",
        "node_id": "MDY6Q29tbWl0MTg2OTYwNzcyOjBmNTExMjgwMWIzZTFkZjFhYWYzNzhkYzVhZTY4MGMyMGJjMTE0Y2E=",
        "commit": {
            "author": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-05-16T10:05:05Z"
            },
            "committer": {
                "name": "Ankith M",
                "email": "reachankit2013@gmail.com",
                "date": "2019-05-16T10:05:05Z"
            },
            "message": "first commit",
            "tree": {
                "sha": "ee08ca60747aac549682ad7746bacebd18739396",
                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/ee08ca60747aac549682ad7746bacebd18739396",
                "expanded": [
                    {
                        "path": "README.md",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "18d0e278daa054da2ed4a2ed95ed44c49d8c5f5b",
                        "size": 2711,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/18d0e278daa054da2ed4a2ed95ed44c49d8c5f5b",
                        "decrypt_content": "#  #Project 1: Stratify\n######\n&nbsp;\n[![Clarifai](https://res-1.cloudinary.com/crunchbase-production/image/upload/c_lpad,h_256,w_256,f_auto,q_auto:eco/x2d9xny0gatskd34eait)](https://nodesource.com/products/nsolid)[![Python](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)](https://nodesource.com/products/nsolid)\n[![Flask](https://cdn-images-1.medium.com/max/1150/1*0G5zu7CnXdMT9pGbYUTQLQ.png)](https://nodesource.com/products/nsolid)\n\n\n## Description\nStratify incorporates a python based-flask server, hosting a webpage, to upload and classify images using a custom trained model.(machine learning algorithms). \nThere are three components to this project:\n\n  - Web Server (Back end)\n  - Image Classification model\n  - HTML page \n\n### Technology\n\nStratify uses a number of open source platforms and packages to work properly:\n\n* [Flask] - Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions\n* [Python] - An easy to pick up proramming language and fun to play with\n* [Java] - A popular programming language, owned by Oracle and running on more than 3 billion devices.\n\n\n### Setup\n\n##### This was build on Windows 8.1.\n\nThese were the pre-requisities :\n\n##### Create Clarifai Account\n* [Clarifai] - Clarifai is an artificial intelligence (AI) company that specializes in computer vision and uses machine learning and deep neural networks to identify and analyze images and videos. Create an account in Clarifai under community plan and get started in training your custom model through Clarifai Portal.\n\n### Installation\n##### Install [Flask] using pip\n```sh\n$ pip install Flask\n```\n##### Install [Clarifai] using pip\n```sh\n$ pip install clarifai\n$ pip install the client\n```\n##### Stratify requires [Python](https://www.python.org/) 3.6+ to run.\n\n[Click to go to Python Download Page]\n![Click to go to Python Download Page](https://www.cupaya.com/wp-content/uploads/2017/09/python-logo.png)\n\n# Download\n```sh\n$ git clone https://github.com/Alpha-github/image_classification.git\n```\n\n\n## Important Notes:\n ##### 1. Make sure that the javascript and the css files are in their respective folders (namely js and css) which are placed in the main folder named static.\n #\n ##### 2. Create a separate folder (called \"uploads\") in the project directory to temporarily save the image, for it to be processed by your custom Clarifai model\n #\n ##### 3. Place all the program files in the same directory.\n#\n## License\n#### Public\n\n\n   [Clarifai]: <https://www.clarifai.com/>\n   [Python]: <https://www.python.org/>\n   [Flask]: <http://flask.pocoo.org/>\n   [Java]: <https://www.java.com/>\n   [Click to go to Python Download Page]: <https://www.python.org/downloads/>\n   \n  "
                    },
                    {
                        "path": "app.py",
                        "mode": "100644",
                        "type": "blob",
                        "sha": "72f73c51ec0a7e8e64d50b596a8b6d50d20c6bfb",
                        "size": 1629,
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/72f73c51ec0a7e8e64d50b596a8b6d50d20c6bfb",
                        "decrypt_content": "from flask import Flask,request, render_template, jsonify, Response, url_for\nimport os\nfrom clarifai.rest import ClarifaiApp\n\napp = Flask(__name__, static_folder=\"static\", template_folder=\"template\")\napp.static_folder = 'static'\n# compress = FlaskStaticCompress(app)\n\n\nprog = ClarifaiApp(api_key='c02ed0679e544b64b2ec5091786634b6') # Use the api key provided by clarify for your application\n\nUPLOAD_FOLDER = os.getcwd() + '/uploads'\n\n@app.route(\"/\")\ndef form():\n    return render_template('index.html')\n\n@app.route(\"/resultpage\" , methods = [\"POST\",\"GET\"] )\ndef result():\n    if request.method == \"POST\":\n        print(\"POST TRIGGERED!\")\n\n        img_file = request.files['file']\n        #print(img_file)\n        img_name = img_file.filename\n        #print(img_name)\n        img_file.save(os.path.join(UPLOAD_FOLDER, img_name))\n        #print(os.path.join(UPLOAD_FOLDER, img_name))\n\n        model = prog.models.get('Flowers')\n        resp = model.predict_by_filename(UPLOAD_FOLDER + '/' + img_name)\n        img_path = UPLOAD_FOLDER + '/' + img_name\n        response = resp['outputs'][0]['data']['concepts'][0]\n        print(response)\n\n        os.remove(img_path)\n\n        if 1 >= (resp['outputs'][0]['data']['concepts'][0]['value']) > 0.02:\n            return jsonify({\"recognised\":True, \n            \"payload\":{\n                \"name\":resp['outputs'][0]['data']['concepts'][0]['name'], \n                \"value\":resp['outputs'][0]['data']['concepts'][0]['value']}})\n        else:\n            return jsonify({\"recognised\" :False, \"payload\":None})\n\nif __name__ == '__main__':\n    app.run(host=\"0.0.0.0\" , port = 3000, debug = True)"
                    },
                    {
                        "path": "static",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "40c9bd1e67d678c8dc08e2ee9815fa05bca77888",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/40c9bd1e67d678c8dc08e2ee9815fa05bca77888",
                        "files": [
                            {
                                "path": "css",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/e826f0dbfa10a572878c285f3df5e035fdca3a38",
                                "files": [
                                    {
                                        "path": "style.css",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "918a0bc690723d431d787984394b016f74425fb6",
                                        "size": 399,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/918a0bc690723d431d787984394b016f74425fb6"
                                    }
                                ]
                            },
                            {
                                "path": "js",
                                "mode": "040000",
                                "type": "tree",
                                "sha": "f00f7f93945032749b47fb6837e02075f4d594da",
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/f00f7f93945032749b47fb6837e02075f4d594da",
                                "files": [
                                    {
                                        "path": "api.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "40bcf21e451877c5031832526836c623857da883",
                                        "size": 1247,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/40bcf21e451877c5031832526836c623857da883"
                                    },
                                    {
                                        "path": "util.js",
                                        "mode": "100644",
                                        "type": "blob",
                                        "sha": "5d26ca3f3c4ae238694e83e3182d5f4a08b94d69",
                                        "size": 650,
                                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/5d26ca3f3c4ae238694e83e3182d5f4a08b94d69"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "template",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "c06bb1c33af7423a73d93ab03be580304ad68479",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/c06bb1c33af7423a73d93ab03be580304ad68479",
                        "files": [
                            {
                                "path": "index.html",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "d2ce0023a03e679a224ec826fb74e98cc18c03ec",
                                "size": 3057,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/d2ce0023a03e679a224ec826fb74e98cc18c03ec"
                            }
                        ]
                    },
                    {
                        "path": "uploads",
                        "mode": "040000",
                        "type": "tree",
                        "sha": "835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "url": "https://api.github.com/repos/Alpha-github/image_classification/git/trees/835d3d0e99e438a22798a701faf3e972c60ebc87",
                        "files": [
                            {
                                "path": "upload.md",
                                "mode": "100644",
                                "type": "blob",
                                "sha": "873396cf2620a24a7e8ea77510a7555a6c957e35",
                                "size": 118,
                                "url": "https://api.github.com/repos/Alpha-github/image_classification/git/blobs/873396cf2620a24a7e8ea77510a7555a6c957e35"
                            }
                        ]
                    }
                ]
            },
            "url": "https://api.github.com/repos/Alpha-github/image_classification/git/commits/0f5112801b3e1df1aaf378dc5ae680c20bc114ca",
            "comment_count": 0,
            "verification": {
                "verified": false,
                "reason": "unsigned",
                "signature": null,
                "payload": null
            }
        },
        "url": "https://api.github.com/repos/Alpha-github/image_classification/commits/0f5112801b3e1df1aaf378dc5ae680c20bc114ca",
        "html_url": "https://github.com/Alpha-github/image_classification/commit/0f5112801b3e1df1aaf378dc5ae680c20bc114ca",
        "comments_url": "https://api.github.com/repos/Alpha-github/image_classification/commits/0f5112801b3e1df1aaf378dc5ae680c20bc114ca/comments",
        "author": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "committer": {
            "login": "Alpha-github",
            "id": 37172066,
            "node_id": "MDQ6VXNlcjM3MTcyMDY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37172066?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Alpha-github",
            "html_url": "https://github.com/Alpha-github",
            "followers_url": "https://api.github.com/users/Alpha-github/followers",
            "following_url": "https://api.github.com/users/Alpha-github/following{/other_user}",
            "gists_url": "https://api.github.com/users/Alpha-github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Alpha-github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Alpha-github/subscriptions",
            "organizations_url": "https://api.github.com/users/Alpha-github/orgs",
            "repos_url": "https://api.github.com/users/Alpha-github/repos",
            "events_url": "https://api.github.com/users/Alpha-github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Alpha-github/received_events",
            "type": "User",
            "site_admin": false
        },
        "parents": []
    }
]